

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 30 17:44:25 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	smallconst
    59  001000                     __psmallconst:
    60                           	opt stack 0
    61  001000  00                 	db	0
    62  001001                     _keys:
    63                           	opt stack 0
    64  001001  31                 	db	49
    65  001002  32                 	db	50
    66  001003  33                 	db	51
    67  001004  41                 	db	65
    68  001005  34                 	db	52
    69  001006  35                 	db	53
    70  001007  36                 	db	54
    71  001008  42                 	db	66
    72  001009  37                 	db	55
    73  00100A  38                 	db	56
    74  00100B  39                 	db	57
    75  00100C  43                 	db	67
    76  00100D  2A                 	db	42
    77  00100E  30                 	db	48
    78  00100F  23                 	db	35
    79  001010  44                 	db	68
    80  001011  00                 	db	0
    81  001012                     __end_of_keys:
    82                           	opt stack 0
    83  001012                     _LCD_LEFT:
    84                           	opt stack 0
    85  001012  00                 	db	0
    86  001013                     __end_of_LCD_LEFT:
    87                           	opt stack 0
    88  001013                     _LCD_RIGHT:
    89                           	opt stack 0
    90  001013  01                 	db	1
    91  001014                     __end_of_LCD_RIGHT:
    92                           	opt stack 0
    93  001014                     _LCD_SIZE_VERT:
    94                           	opt stack 0
    95  001014  02                 	db	2
    96  001015                     __end_of_LCD_SIZE_VERT:
    97                           	opt stack 0
    98  001015                     _LCD_SIZE_HORZ:
    99                           	opt stack 0
   100  001015  10                 	db	16
   101  001016                     __end_of_LCD_SIZE_HORZ:
   102                           	opt stack 0
   103  001016                     _LCD_VERT_LIMIT:
   104                           	opt stack 0
   105  001016  02                 	db	2
   106  001017                     __end_of_LCD_VERT_LIMIT:
   107                           	opt stack 0
   108  001017                     _LCD_HORZ_LIMIT:
   109                           	opt stack 0
   110  001017  28                 	db	40
   111  001018                     __end_of_LCD_HORZ_LIMIT:
   112                           	opt stack 0
   113  0000                     _SSPBUF	set	4041
   114  0000                     _SSPCON2bits	set	4037
   115  0000                     _SSPADD	set	4040
   116  0000                     _SSPCON2	set	4037
   117  0000                     _SSPCON1	set	4038
   118  0000                     _SSPSTAT	set	4039
   119  0000                     _TRISCbits	set	3988
   120  0000                     _SSPCON1bits	set	4038
   121  0000                     _INTCONbits	set	4082
   122  0000                     _LATDbits	set	3980
   123  0000                     _ADCON1	set	4033
   124  0000                     _ADCON0	set	4034
   125  0000                     _TRISE	set	3990
   126  0000                     _TRISD	set	3989
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISB	set	3987
   129  0000                     _TRISA	set	3986
   130  0000                     _LATE	set	3981
   131  0000                     _LATD	set	3980
   132  0000                     _LATC	set	3979
   133  0000                     _LATB	set	3978
   134  0000                     _LATA	set	3977
   135  0000                     _OSCCON	set	4051
   136                           
   137                           ; #config settings
   138  001018  00                 	db	0	; dummy byte at the end
   139  0000                     
   140                           	psect	cinit
   141  001266                     __pcinit:
   142                           	opt stack 0
   143  001266                     start_initialization:
   144                           	opt stack 0
   145  001266                     __initialization:
   146                           	opt stack 0
   147                           
   148                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   149  001266  6A19               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   150                           
   151                           ; Clear objects allocated to COMRAM (2 bytes)
   152  001268  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   153  00126A  6A17               	clrf	__pbssCOMRAM& (0+255),c
   154  00126C                     end_of_initialization:
   155                           	opt stack 0
   156  00126C                     __end_of__initialization:
   157                           	opt stack 0
   158  00126C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   159  00126E  6EF8               	movwf	tblptru,c
   160  001270  0E10               	movlw	high __Lsmallconst
   161  001272  6EF7               	movwf	tblptrh,c
   162  001274  0100               	movlb	0
   163  001276  EF0D  F008         	goto	_main	;jump to C main() function
   164                           tblptru	equ	0xFF8
   165                           tblptrh	equ	0xFF7
   166                           
   167                           	psect	bitbssCOMRAM
   168  0000C8                     __pbitbssCOMRAM:
   169                           	opt stack 0
   170  0000C8                     main@SEND:
   171                           	opt stack 0
   172  0000C8                     	ds	1
   173                           tblptru	equ	0xFF8
   174                           tblptrh	equ	0xFF7
   175                           
   176                           	psect	bssCOMRAM
   177  000017                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000017                     lcd@LCDinterruptState:
   180                           	opt stack 0
   181  000017                     	ds	1
   182  000018                     	ds	1
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           
   186                           	psect	cstackCOMRAM
   187  000001                     __pcstackCOMRAM:
   188                           	opt stack 0
   189  000001                     ??_I2C_Master_Wait:
   190  000001                     ?___lldiv:
   191                           	opt stack 0
   192  000001                     lcdNibble@temp:
   193                           	opt stack 0
   194  000001                     ___lldiv@dividend:
   195                           	opt stack 0
   196                           
   197                           ; 4 bytes @ 0x0
   198  000001                     	ds	1
   199  000002                     lcdNibble@data:
   200                           	opt stack 0
   201  000002                     I2C_Master_Write@byteToWrite:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x1
   205  000002                     	ds	1
   206  000003                     lcdInst@data:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x2
   210  000003                     	ds	1
   211  000004                     ??_initLCD:
   212  000004                     
   213                           ; 1 bytes @ 0x3
   214  000004                     	ds	1
   215  000005                     ___lldiv@divisor:
   216                           	opt stack 0
   217                           
   218                           ; 4 bytes @ 0x4
   219  000005                     	ds	4
   220  000009                     ___lldiv@quotient:
   221                           	opt stack 0
   222                           
   223                           ; 4 bytes @ 0x8
   224  000009                     	ds	4
   225  00000D                     ___lldiv@counter:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0xC
   229  00000D                     	ds	1
   230  00000E                     I2C_Master_Init@clockFreq:
   231                           	opt stack 0
   232                           
   233                           ; 4 bytes @ 0xD
   234  00000E                     	ds	4
   235  000012                     ??_I2C_Master_Init:
   236                           
   237                           ; 1 bytes @ 0x11
   238  000012                     	ds	4
   239  000016                     main@counter:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x15
   243  000016                     	ds	1
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           
   247 ;;
   248 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   249 ;;
   250 ;; *************** function _main *****************
   251 ;; Defined at:
   252 ;;		line 16 in file "main.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;  mem             3    0        unsigned char [3]
   257 ;;  counter         1   21[COMRAM] unsigned char 
   258 ;;  data            1    0        unsigned char 
   259 ;;  keypress        1    0        unsigned char 
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;Total ram usage:        1 bytes
   274 ;; Hardware stack levels required when called:    3
   275 ;; This function calls:
   276 ;;		_I2C_Master_Init
   277 ;;		_I2C_Master_Start
   278 ;;		_I2C_Master_Stop
   279 ;;		_I2C_Master_Write
   280 ;;		_initLCD
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text0
   287  00101A                     __ptext0:
   288                           	opt stack 0
   289  00101A                     _main:
   290                           	opt stack 28
   291                           
   292                           ;main.c: 20: OSCCON = 0xF2;
   293                           
   294                           ;incstack = 0
   295  00101A  0EF2               	movlw	242
   296  00101C  6ED3               	movwf	4051,c	;volatile
   297                           
   298                           ;main.c: 29: LATA = 0x00;
   299  00101E  0E00               	movlw	0
   300  001020  6E89               	movwf	3977,c	;volatile
   301                           
   302                           ;main.c: 30: LATB = 0x00;
   303  001022  0E00               	movlw	0
   304  001024  6E8A               	movwf	3978,c	;volatile
   305                           
   306                           ;main.c: 31: LATC = 0x00;
   307  001026  0E00               	movlw	0
   308  001028  6E8B               	movwf	3979,c	;volatile
   309                           
   310                           ;main.c: 32: LATD = 0x00;
   311  00102A  0E00               	movlw	0
   312  00102C  6E8C               	movwf	3980,c	;volatile
   313                           
   314                           ;main.c: 33: LATE = 0x00;
   315  00102E  0E00               	movlw	0
   316  001030  6E8D               	movwf	3981,c	;volatile
   317                           
   318                           ;main.c: 37: TRISA = 0xFF;
   319  001032  6892               	setf	3986,c	;volatile
   320                           
   321                           ;main.c: 38: TRISB = 0xFF;
   322  001034  6893               	setf	3987,c	;volatile
   323                           
   324                           ;main.c: 39: TRISC = 0b10000000;
   325  001036  0E80               	movlw	128
   326  001038  6E94               	movwf	3988,c	;volatile
   327                           
   328                           ;main.c: 43: TRISD = 0x00;
   329  00103A  0E00               	movlw	0
   330  00103C  6E95               	movwf	3989,c	;volatile
   331                           
   332                           ;main.c: 44: TRISE = 0x00;
   333  00103E  0E00               	movlw	0
   334  001040  6E96               	movwf	3990,c	;volatile
   335                           
   336                           ;main.c: 47: ADCON0 = 0x00;
   337  001042  0E00               	movlw	0
   338  001044  6EC2               	movwf	4034,c	;volatile
   339                           
   340                           ;main.c: 48: ADCON1 = 0b00001111;
   341  001046  0E0F               	movlw	15
   342  001048  6EC1               	movwf	4033,c	;volatile
   343                           
   344                           ;main.c: 52: initLCD();
   345  00104A  EC0D  F009         	call	_initLCD	;wreg free
   346                           
   347                           ;main.c: 55: I2C_Master_Init(100000);
   348  00104E  0EA0               	movlw	160
   349  001050  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   350  001052  0E86               	movlw	134
   351  001054  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   352  001056  0E01               	movlw	1
   353  001058  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   354  00105A  0E00               	movlw	0
   355  00105C  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   356  00105E  ECDF  F008         	call	_I2C_Master_Init	;wreg free
   357                           
   358                           ;main.c: 56: I2C_Master_Start();
   359  001062  EC59  F009         	call	_I2C_Master_Start	;wreg free
   360                           
   361                           ;main.c: 59: I2C_Master_Write(0b00010000);
   362  001066  0E00               	movlw	0
   363  001068  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   364  00106A  0E10               	movlw	16
   365  00106C  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   366  00106E  EC50  F009         	call	_I2C_Master_Write	;wreg free
   367                           
   368                           ;main.c: 60: I2C_Master_Stop();
   369  001072  EC55  F009         	call	_I2C_Master_Stop	;wreg free
   370                           
   371                           ;main.c: 63: unsigned char mem[3];
   372                           ;main.c: 64: unsigned char counter = 0;
   373  001076  0E00               	movlw	0
   374  001078  6E16               	movwf	main@counter,c
   375                           
   376                           ;main.c: 65: unsigned char keypress;
   377                           ;main.c: 66: unsigned char data;
   378                           ;main.c: 67: static bit SEND;
   379                           ;main.c: 68: SEND = 1;
   380  00107A  8019               	bsf	main@SEND/(0+8),main@SEND& (0+7),c
   381  00107C                     l59:
   382                           
   383                           ;main.c: 76: I2C_Master_Start();
   384  00107C  EC59  F009         	call	_I2C_Master_Start	;wreg free
   385                           
   386                           ;main.c: 77: I2C_Master_Write(0b00010000);
   387  001080  0E00               	movlw	0
   388  001082  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   389  001084  0E10               	movlw	16
   390  001086  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   391  001088  EC50  F009         	call	_I2C_Master_Write	;wreg free
   392                           
   393                           ;main.c: 78: I2C_Master_Write('1');
   394  00108C  0E00               	movlw	0
   395  00108E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   396  001090  0E31               	movlw	49
   397  001092  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   398  001094  EC50  F009         	call	_I2C_Master_Write	;wreg free
   399                           
   400                           ;main.c: 79: I2C_Master_Stop();
   401  001098  EC55  F009         	call	_I2C_Master_Stop	;wreg free
   402                           
   403                           ;main.c: 83: I2C_Master_Start();
   404  00109C  EC59  F009         	call	_I2C_Master_Start	;wreg free
   405                           
   406                           ;main.c: 84: I2C_Master_Write(0b00010000);
   407  0010A0  0E00               	movlw	0
   408  0010A2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   409  0010A4  0E10               	movlw	16
   410  0010A6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   411  0010A8  EC50  F009         	call	_I2C_Master_Write	;wreg free
   412                           
   413                           ;main.c: 85: I2C_Master_Write('2');
   414  0010AC  0E00               	movlw	0
   415  0010AE  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   416  0010B0  0E32               	movlw	50
   417  0010B2  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   418  0010B4  EC50  F009         	call	_I2C_Master_Write	;wreg free
   419                           
   420                           ;main.c: 86: I2C_Master_Stop();
   421  0010B8  EC55  F009         	call	_I2C_Master_Stop	;wreg free
   422  0010BC  D7DF               	goto	l59
   423  0010BE                     __end_of_main:
   424                           	opt stack 0
   425                           tblptru	equ	0xFF8
   426                           tblptrh	equ	0xFF7
   427                           
   428 ;; *************** function _initLCD *****************
   429 ;; Defined at:
   430 ;;		line 60 in file "lcd.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;Total ram usage:        1 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; Hardware stack levels required when called:    2
   451 ;; This function calls:
   452 ;;		_lcdInst
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text1
   459  00121A                     __ptext1:
   460                           	opt stack 0
   461  00121A                     _initLCD:
   462                           	opt stack 28
   463                           
   464                           ;lcd.c: 68: _delay((unsigned long)((15)*(32000000/4000.0)));
   465                           
   466                           ;incstack = 0
   467  00121A  0E9C               	movlw	156
   468  00121C  6E04               	movwf	??_initLCD& (0+255),c
   469  00121E  0ED7               	movlw	215
   470  001220                     u207:
   471  001220  2EE8               	decfsz	wreg,f,c
   472  001222  D7FE               	bra	u207
   473  001224  2E04               	decfsz	??_initLCD& (0+255),f,c
   474  001226  D7FC               	bra	u207
   475  001228  F000               	nop	
   476                           
   477                           ;lcd.c: 69: lcdInst(0b00110011);
   478  00122A  0E33               	movlw	51
   479  00122C  EC3D  F009         	call	_lcdInst
   480                           
   481                           ;lcd.c: 70: lcdInst(0b00110010);
   482  001230  0E32               	movlw	50
   483  001232  EC3D  F009         	call	_lcdInst
   484                           
   485                           ;lcd.c: 71: lcdInst(0b00101000);
   486  001236  0E28               	movlw	40
   487  001238  EC3D  F009         	call	_lcdInst
   488                           
   489                           ;lcd.c: 72: lcdInst(0b00001111);
   490  00123C  0E0F               	movlw	15
   491  00123E  EC3D  F009         	call	_lcdInst
   492                           
   493                           ;lcd.c: 73: lcdInst(0b00000110);
   494  001242  0E06               	movlw	6
   495  001244  EC3D  F009         	call	_lcdInst
   496                           
   497                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(32000000/4000.0)));;
   498  001248  0E01               	movlw	1
   499  00124A  EC3D  F009         	call	_lcdInst
   500  00124E  0E9C               	movlw	156
   501  001250  6E04               	movwf	??_initLCD& (0+255),c
   502  001252  0ED7               	movlw	215
   503  001254                     u217:
   504  001254  2EE8               	decfsz	wreg,f,c
   505  001256  D7FE               	bra	u217
   506  001258  2E04               	decfsz	??_initLCD& (0+255),f,c
   507  00125A  D7FC               	bra	u217
   508  00125C  F000               	nop	
   509                           
   510                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
   511  00125E  0E0F               	movlw	15
   512  001260  EC3D  F009         	call	_lcdInst
   513  001264  0012               	return		;funcret
   514  001266                     __end_of_initLCD:
   515                           	opt stack 0
   516                           tblptru	equ	0xFF8
   517                           tblptrh	equ	0xFF7
   518                           wreg	equ	0xFE8
   519                           
   520 ;; *************** function _lcdInst *****************
   521 ;; Defined at:
   522 ;;		line 11 in file "lcd.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  data            1    wreg     unsigned char 
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  data            1    2[COMRAM] unsigned char 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;Total ram usage:        1 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    1
   543 ;; This function calls:
   544 ;;		_lcdNibble
   545 ;; This function is called by:
   546 ;;		_initLCD
   547 ;;		_lcd_set_cursor
   548 ;;		_lcd_shift_cursor
   549 ;;		_lcd_shift_display
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text2
   554  00127A                     __ptext2:
   555                           	opt stack 0
   556  00127A                     _lcdInst:
   557                           	opt stack 28
   558                           
   559                           ;incstack = 0
   560                           ;lcdInst@data stored from wreg
   561  00127A  6E03               	movwf	lcdInst@data,c
   562                           
   563                           ;lcd.c: 19: LATDbits.LATD2 = 0;
   564  00127C  948C               	bcf	3980,2,c	;volatile
   565                           
   566                           ;lcd.c: 20: lcdNibble(data);
   567  00127E  5003               	movf	lcdInst@data,w,c
   568  001280  ECA0  F008         	call	_lcdNibble
   569                           
   570                           ;lcd.c: 21: _delay((unsigned long)((100)*(32000000/4000000.0)));
   571  001284  0EA0               	movlw	160
   572  001286                     u227:
   573  001286  D000               	nop2	
   574  001288  2EE8               	decfsz	wreg,f,c
   575  00128A  D7FD               	bra	u227
   576  00128C  0012               	return		;funcret
   577  00128E                     __end_of_lcdInst:
   578                           	opt stack 0
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           wreg	equ	0xFE8
   582                           
   583 ;; *************** function _lcdNibble *****************
   584 ;; Defined at:
   585 ;;		line 37 in file "lcd.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  data            1    wreg     unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  data            1    1[COMRAM] unsigned char 
   590 ;;  temp            1    0[COMRAM] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;Total ram usage:        2 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_lcdInst
   610 ;;		_putch
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text3
   615  001140                     __ptext3:
   616                           	opt stack 0
   617  001140                     _lcdNibble:
   618                           	opt stack 28
   619                           
   620                           ;incstack = 0
   621                           ;lcdNibble@data stored from wreg
   622  001140  6E02               	movwf	lcdNibble@data,c
   623                           
   624                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
   625  001142  5002               	movf	lcdNibble@data,w,c
   626  001144  0BF0               	andlw	240
   627  001146  6E01               	movwf	lcdNibble@temp,c
   628                           
   629                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
   630  001148  508C               	movf	3980,w,c	;volatile
   631  00114A  0B0F               	andlw	15
   632  00114C  6E8C               	movwf	3980,c	;volatile
   633                           
   634                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
   635  00114E  5001               	movf	lcdNibble@temp,w,c
   636  001150  108C               	iorwf	3980,w,c	;volatile
   637  001152  6E8C               	movwf	3980,c	;volatile
   638                           
   639                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   640  001154  0E00               	movlw	0
   641  001156  BEF2               	btfsc	intcon,7,c	;volatile
   642  001158  0E01               	movlw	1
   643  00115A  6E17               	movwf	lcd@LCDinterruptState,c
   644  00115C  9EF2               	bcf	intcon,7,c	;volatile
   645  00115E  868C               	bsf	3980,3,c	;volatile
   646  001160  0E42               	movlw	66
   647  001162                     u237:
   648  001162  2EE8               	decfsz	wreg,f,c
   649  001164  D7FE               	bra	u237
   650  001166  D000               	nop2	
   651  001168  968C               	bcf	3980,3,c	;volatile
   652  00116A  0EA0               	movlw	160
   653  00116C                     u247:
   654  00116C  D000               	nop2	
   655  00116E  2EE8               	decfsz	wreg,f,c
   656  001170  D7FD               	bra	u247
   657  001172  B017               	btfsc	lcd@LCDinterruptState,0,c
   658  001174  D002               	bra	u15
   659  001176  9EF2               	bcf	intcon,7,c	;volatile
   660  001178  D001               	bra	u16
   661  00117A                     u15:
   662  00117A  8EF2               	bsf	intcon,7,c	;volatile
   663  00117C                     u16:
   664                           
   665                           ;lcd.c: 52: data = (unsigned char) (data << 4);
   666  00117C  3802               	swapf	lcdNibble@data,w,c
   667  00117E  0BF0               	andlw	240
   668  001180  6E02               	movwf	lcdNibble@data,c
   669                           
   670                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
   671  001182  5002               	movf	lcdNibble@data,w,c
   672  001184  0BF0               	andlw	240
   673  001186  6E01               	movwf	lcdNibble@temp,c
   674                           
   675                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
   676  001188  508C               	movf	3980,w,c	;volatile
   677  00118A  0B0F               	andlw	15
   678  00118C  6E8C               	movwf	3980,c	;volatile
   679                           
   680                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
   681  00118E  5001               	movf	lcdNibble@temp,w,c
   682  001190  108C               	iorwf	3980,w,c	;volatile
   683  001192  6E8C               	movwf	3980,c	;volatile
   684                           
   685                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   686  001194  0E00               	movlw	0
   687  001196  BEF2               	btfsc	intcon,7,c	;volatile
   688  001198  0E01               	movlw	1
   689  00119A  6E17               	movwf	lcd@LCDinterruptState,c
   690  00119C  9EF2               	bcf	intcon,7,c	;volatile
   691  00119E  868C               	bsf	3980,3,c	;volatile
   692  0011A0  0E42               	movlw	66
   693  0011A2                     u257:
   694  0011A2  2EE8               	decfsz	wreg,f,c
   695  0011A4  D7FE               	bra	u257
   696  0011A6  D000               	nop2	
   697  0011A8  968C               	bcf	3980,3,c	;volatile
   698  0011AA  0EA0               	movlw	160
   699  0011AC                     u267:
   700  0011AC  D000               	nop2	
   701  0011AE  2EE8               	decfsz	wreg,f,c
   702  0011B0  D7FD               	bra	u267
   703  0011B2  B017               	btfsc	lcd@LCDinterruptState,0,c
   704  0011B4  D002               	bra	u25
   705  0011B6  9EF2               	bcf	intcon,7,c	;volatile
   706  0011B8  D001               	bra	u26
   707  0011BA                     u25:
   708  0011BA  8EF2               	bsf	intcon,7,c	;volatile
   709  0011BC                     u26:
   710  0011BC  0012               	return		;funcret
   711  0011BE                     __end_of_lcdNibble:
   712                           	opt stack 0
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           intcon	equ	0xFF2
   716                           wreg	equ	0xFE8
   717                           
   718 ;; *************** function _I2C_Master_Write *****************
   719 ;; Defined at:
   720 ;;		line 108 in file "I2C.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  byteToWrite     2    1[COMRAM] unsigned int 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;Total ram usage:        2 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    1
   741 ;; This function calls:
   742 ;;		_I2C_Master_Wait
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text4
   749  0012A0                     __ptext4:
   750                           	opt stack 0
   751  0012A0                     _I2C_Master_Write:
   752                           	opt stack 29
   753                           
   754                           ;I2C.c: 116: I2C_Master_Wait();
   755                           
   756                           ;incstack = 0
   757  0012A0  EC47  F009         	call	_I2C_Master_Wait	;wreg free
   758                           
   759                           ;I2C.c: 117: SSPBUF = byteToWrite;
   760  0012A4  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
   761  0012A8  0012               	return		;funcret
   762  0012AA                     __end_of_I2C_Master_Write:
   763                           	opt stack 0
   764                           tblptru	equ	0xFF8
   765                           tblptrh	equ	0xFF7
   766                           intcon	equ	0xFF2
   767                           wreg	equ	0xFE8
   768                           
   769 ;; *************** function _I2C_Master_Stop *****************
   770 ;; Defined at:
   771 ;;		line 95 in file "I2C.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    1
   792 ;; This function calls:
   793 ;;		_I2C_Master_Wait
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text5
   800  0012AA                     __ptext5:
   801                           	opt stack 0
   802  0012AA                     _I2C_Master_Stop:
   803                           	opt stack 29
   804                           
   805                           ;I2C.c: 104: I2C_Master_Wait();
   806                           
   807                           ;incstack = 0
   808  0012AA  EC47  F009         	call	_I2C_Master_Wait	;wreg free
   809                           
   810                           ;I2C.c: 105: SSPCON2bits.PEN = 1;
   811  0012AE  84C5               	bsf	4037,2,c	;volatile
   812  0012B0  0012               	return		;funcret
   813  0012B2                     __end_of_I2C_Master_Stop:
   814                           	opt stack 0
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           intcon	equ	0xFF2
   818                           wreg	equ	0xFE8
   819                           
   820 ;; *************** function _I2C_Master_Start *****************
   821 ;; Defined at:
   822 ;;		line 69 in file "I2C.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;Total ram usage:        0 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    1
   843 ;; This function calls:
   844 ;;		_I2C_Master_Wait
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text6
   851  0012B2                     __ptext6:
   852                           	opt stack 0
   853  0012B2                     _I2C_Master_Start:
   854                           	opt stack 29
   855                           
   856                           ;I2C.c: 78: I2C_Master_Wait();
   857                           
   858                           ;incstack = 0
   859  0012B2  EC47  F009         	call	_I2C_Master_Wait	;wreg free
   860                           
   861                           ;I2C.c: 79: SSPCON2bits.SEN = 1;
   862  0012B6  80C5               	bsf	4037,0,c	;volatile
   863  0012B8  0012               	return		;funcret
   864  0012BA                     __end_of_I2C_Master_Start:
   865                           	opt stack 0
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           intcon	equ	0xFF2
   869                           wreg	equ	0xFE8
   870                           
   871 ;; *************** function _I2C_Master_Wait *****************
   872 ;; Defined at:
   873 ;;		line 51 in file "I2C.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;Total ram usage:        1 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_I2C_Master_Start
   897 ;;		_I2C_Master_Stop
   898 ;;		_I2C_Master_Write
   899 ;;		_I2C_Master_RepeatedStart
   900 ;;		_I2C_Master_Read
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text7
   905  00128E                     __ptext7:
   906                           	opt stack 0
   907  00128E                     _I2C_Master_Wait:
   908                           	opt stack 29
   909                           
   910                           ;I2C.c: 66: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   911                           
   912                           ;incstack = 0
   913  00128E  B4C7               	btfsc	4039,2,c	;volatile
   914  001290  D7FE               	goto	_I2C_Master_Wait
   915  001292  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
   916  001296  0E1F               	movlw	31
   917  001298  1601               	andwf	??_I2C_Master_Wait,f,c
   918  00129A  B4D8               	btfsc	status,2,c
   919  00129C  0012               	return	
   920  00129E  D7F7               	goto	_I2C_Master_Wait
   921  0012A0                     __end_of_I2C_Master_Wait:
   922                           	opt stack 0
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           intcon	equ	0xFF2
   926                           wreg	equ	0xFE8
   927                           status	equ	0xFD8
   928                           
   929 ;; *************** function _I2C_Master_Init *****************
   930 ;; Defined at:
   931 ;;		line 14 in file "I2C.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  clockFreq       4   13[COMRAM] const unsigned long 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;Total ram usage:        8 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    1
   952 ;; This function calls:
   953 ;;		___lldiv
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text8
   960  0011BE                     __ptext8:
   961                           	opt stack 0
   962  0011BE                     _I2C_Master_Init:
   963                           	opt stack 29
   964                           
   965                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
   966                           
   967                           ;incstack = 0
   968  0011BE  9AC6               	bcf	4038,5,c	;volatile
   969                           
   970                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
   971  0011C0  8694               	bsf	3988,3,c	;volatile
   972                           
   973                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
   974  0011C2  8894               	bsf	3988,4,c	;volatile
   975                           
   976                           ;I2C.c: 41: SSPSTAT = 0b10000000;
   977  0011C4  0E80               	movlw	128
   978  0011C6  6EC7               	movwf	4039,c	;volatile
   979                           
   980                           ;I2C.c: 42: SSPCON1 = 0b00101000;
   981  0011C8  0E28               	movlw	40
   982  0011CA  6EC6               	movwf	4038,c	;volatile
   983                           
   984                           ;I2C.c: 43: SSPCON2 = 0b00000000;
   985  0011CC  0E00               	movlw	0
   986  0011CE  6EC5               	movwf	4037,c	;volatile
   987                           
   988                           ;I2C.c: 48: SSPADD = (32000000 / (4 * clockFreq)) - 1;
   989  0011D0  0E00               	movlw	0
   990  0011D2  6E01               	movwf	___lldiv@dividend,c
   991  0011D4  0E48               	movlw	72
   992  0011D6  6E02               	movwf	___lldiv@dividend+1,c
   993  0011D8  0EE8               	movlw	232
   994  0011DA  6E03               	movwf	___lldiv@dividend+2,c
   995  0011DC  0E01               	movlw	1
   996  0011DE  6E04               	movwf	___lldiv@dividend+3,c
   997  0011E0  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
   998  0011E4  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
   999  0011E8  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  1000  0011EC  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  1001  0011F0  0E02               	movlw	2
  1002  0011F2                     u195:
  1003  0011F2  90D8               	bcf	status,0,c
  1004  0011F4  3612               	rlcf	??_I2C_Master_Init,f,c
  1005  0011F6  3613               	rlcf	??_I2C_Master_Init+1,f,c
  1006  0011F8  3614               	rlcf	??_I2C_Master_Init+2,f,c
  1007  0011FA  3615               	rlcf	??_I2C_Master_Init+3,f,c
  1008  0011FC  2EE8               	decfsz	wreg,f,c
  1009  0011FE  D7F9               	goto	u195
  1010  001200  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  1011  001204  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1012  001208  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1013  00120C  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1014  001210  EC5F  F008         	call	___lldiv	;wreg free
  1015  001214  0401               	decf	?___lldiv,w,c
  1016  001216  6EC8               	movwf	4040,c	;volatile
  1017  001218  0012               	return		;funcret
  1018  00121A                     __end_of_I2C_Master_Init:
  1019                           	opt stack 0
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           intcon	equ	0xFF2
  1023                           wreg	equ	0xFE8
  1024                           status	equ	0xFD8
  1025                           
  1026 ;; *************** function ___lldiv *****************
  1027 ;; Defined at:
  1028 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lldiv.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  dividend        4    0[COMRAM] unsigned long 
  1031 ;;  divisor         4    4[COMRAM] unsigned long 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  quotient        4    8[COMRAM] unsigned long 
  1034 ;;  counter         1   12[COMRAM] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  4    0[COMRAM] unsigned long 
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1044 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;Total ram usage:       13 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; This function calls:
  1051 ;;		Nothing
  1052 ;; This function is called by:
  1053 ;;		_I2C_Master_Init
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text9
  1058  0010BE                     __ptext9:
  1059                           	opt stack 0
  1060  0010BE                     ___lldiv:
  1061                           	opt stack 29
  1062                           
  1063                           ;incstack = 0
  1064  0010BE  0E00               	movlw	0
  1065  0010C0  6E09               	movwf	___lldiv@quotient,c
  1066  0010C2  0E00               	movlw	0
  1067  0010C4  6E0A               	movwf	___lldiv@quotient+1,c
  1068  0010C6  0E00               	movlw	0
  1069  0010C8  6E0B               	movwf	___lldiv@quotient+2,c
  1070  0010CA  0E00               	movlw	0
  1071  0010CC  6E0C               	movwf	___lldiv@quotient+3,c
  1072  0010CE  5005               	movf	___lldiv@divisor,w,c
  1073  0010D0  1006               	iorwf	___lldiv@divisor+1,w,c
  1074  0010D2  1007               	iorwf	___lldiv@divisor+2,w,c
  1075  0010D4  1008               	iorwf	___lldiv@divisor+3,w,c
  1076  0010D6  B4D8               	btfsc	status,2,c
  1077  0010D8  D02A               	goto	l513
  1078  0010DA  0E01               	movlw	1
  1079  0010DC  6E0D               	movwf	___lldiv@counter,c
  1080  0010DE  D006               	goto	l508
  1081  0010E0  90D8               	bcf	status,0,c
  1082  0010E2  3605               	rlcf	___lldiv@divisor,f,c
  1083  0010E4  3606               	rlcf	___lldiv@divisor+1,f,c
  1084  0010E6  3607               	rlcf	___lldiv@divisor+2,f,c
  1085  0010E8  3608               	rlcf	___lldiv@divisor+3,f,c
  1086  0010EA  2A0D               	incf	___lldiv@counter,f,c
  1087  0010EC                     l508:
  1088  0010EC  AE08               	btfss	___lldiv@divisor+3,7,c
  1089  0010EE  D7F8               	goto	l509
  1090  0010F0                     u170:
  1091  0010F0  90D8               	bcf	status,0,c
  1092  0010F2  3609               	rlcf	___lldiv@quotient,f,c
  1093  0010F4  360A               	rlcf	___lldiv@quotient+1,f,c
  1094  0010F6  360B               	rlcf	___lldiv@quotient+2,f,c
  1095  0010F8  360C               	rlcf	___lldiv@quotient+3,f,c
  1096  0010FA  5005               	movf	___lldiv@divisor,w,c
  1097  0010FC  5C01               	subwf	___lldiv@dividend,w,c
  1098  0010FE  5006               	movf	___lldiv@divisor+1,w,c
  1099  001100  5802               	subwfb	___lldiv@dividend+1,w,c
  1100  001102  5007               	movf	___lldiv@divisor+2,w,c
  1101  001104  5803               	subwfb	___lldiv@dividend+2,w,c
  1102  001106  5008               	movf	___lldiv@divisor+3,w,c
  1103  001108  5804               	subwfb	___lldiv@dividend+3,w,c
  1104  00110A  A0D8               	btfss	status,0,c
  1105  00110C  D009               	goto	l512
  1106  00110E  5005               	movf	___lldiv@divisor,w,c
  1107  001110  5E01               	subwf	___lldiv@dividend,f,c
  1108  001112  5006               	movf	___lldiv@divisor+1,w,c
  1109  001114  5A02               	subwfb	___lldiv@dividend+1,f,c
  1110  001116  5007               	movf	___lldiv@divisor+2,w,c
  1111  001118  5A03               	subwfb	___lldiv@dividend+2,f,c
  1112  00111A  5008               	movf	___lldiv@divisor+3,w,c
  1113  00111C  5A04               	subwfb	___lldiv@dividend+3,f,c
  1114  00111E  8009               	bsf	___lldiv@quotient,0,c
  1115  001120                     l512:
  1116  001120  90D8               	bcf	status,0,c
  1117  001122  3208               	rrcf	___lldiv@divisor+3,f,c
  1118  001124  3207               	rrcf	___lldiv@divisor+2,f,c
  1119  001126  3206               	rrcf	___lldiv@divisor+1,f,c
  1120  001128  3205               	rrcf	___lldiv@divisor,f,c
  1121  00112A  2E0D               	decfsz	___lldiv@counter,f,c
  1122  00112C  D7E1               	goto	u170
  1123  00112E                     l513:
  1124  00112E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1125  001132  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1126  001136  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1127  00113A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1128  00113E  0012               	return		;funcret
  1129  001140                     __end_of___lldiv:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           intcon	equ	0xFF2
  1134                           wreg	equ	0xFE8
  1135                           status	equ	0xFD8
  1136                           tblptru	equ	0xFF8
  1137                           tblptrh	equ	0xFF7
  1138                           intcon	equ	0xFF2
  1139                           wreg	equ	0xFE8
  1140                           status	equ	0xFD8
  1141                           
  1142                           	psect	rparam
  1143  0000                     tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           intcon	equ	0xFF2
  1146                           wreg	equ	0xFE8
  1147                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    23
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     22      25
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_I2C_Master_Init
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     905
                                             21 COMRAM     1     1      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       1       0        0.8%
COMRAM              7F     16      19       1       19.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      34        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 30 17:44:25 2018

                         l59 107C                           u15 117A                           u16 117C  
                         u25 11BA                           u26 11BC                  __CFG_CPD$ON 000000  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l512 1120  
                        l513 112E                          l508 10EC                          l509 10E0  
               __CFG_CPB$OFF 000000                          u207 1220                          u217 1254  
                        u170 10F0                          u227 1286                          u237 1162  
                        u247 116C                          u257 11A2                          u195 11F2  
                        u267 11AC                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         _LATA 000F89                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         _LATE 000F8D  
                main@counter 0016                         _main 101A                         _keys 1001  
                       start 0000                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000             __end_of_LCD_LEFT 1013             ?_I2C_Master_Init 000E  
           ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001                        ?_main 0001  
            __end_of___lldiv 1140                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000              __end_of_lcdInst 128E  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_initLCD 1266  
             __CFG_EBTRB$OFF 000000               __pbitbssCOMRAM 00C8            _LCDinterruptState 0018  
                      status 000FD8               __CFG_PBADEN$ON 000000              __initialization 1266  
               __end_of_main 10BE                 __end_of_keys 1012            __end_of_LCD_RIGHT 1014  
                     ??_main 0016                __activetblptr 000001            ?_I2C_Master_Start 0001  
          ?_I2C_Master_Write 0002           ??_I2C_Master_Start 0002                       _ADCON0 000FC2  
                     _ADCON1 000FC1           ??_I2C_Master_Write 0004                       _OSCCON 000FD3  
                     _SSPADD 000FC8                       _SSPBUF 000FC9               __CFG_XINST$OFF 000000  
             __CFG_STVREN$ON 000000                    ??___lldiv 0009                    ??_lcdInst 0003  
                  ??_initLCD 0004                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptru 000FF8                   __accesstop 0080      __end_of__initialization 126C  
              ___rparam_used 000001               __pcstackCOMRAM 0001           __size_of_lcdNibble 007E  
       lcd@LCDinterruptState 0017                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
                    _SSPSTAT 000FC7            __end_of_lcdNibble 11BE                      __Hparam 0000  
                    __Lparam 0000                      ___lldiv 10BE                 __psmallconst 1000  
                    __pcinit 1266                      __ramtop 1000                      _lcdInst 127A  
                    __ptext0 101A                      __ptext1 121A                      __ptext2 127A  
                    __ptext3 1140                      __ptext4 12A0                      __ptext5 12AA  
                    __ptext6 12B2                      __ptext7 128E                      __ptext8 11BE  
                    __ptext9 10BE                      _initLCD 121A                    _LCD_RIGHT 1013  
   __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008  
       end_of_initialization 126C        __end_of_LCD_SIZE_HORZ 1016        __end_of_LCD_SIZE_VERT 1015  
  __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0005  
            ___lldiv@counter 000D                    _TRISCbits 000F94          start_initialization 1266  
          ??_I2C_Master_Init 0012            ??_I2C_Master_Wait 0001            ??_I2C_Master_Stop 0002  
           __CFG_OSC$INTIO67 000000     I2C_Master_Init@clockFreq 000E             __CFG_LPT1OSC$OFF 000000  
                __pbssCOMRAM 0017             _I2C_Master_Start 12B2             _I2C_Master_Write 12A0  
          __CFG_CCP2MX$PORTC 000000                    _lcdNibble 1140                     ?___lldiv 0001  
                   ?_lcdInst 0001                     ?_initLCD 0001                  __smallconst 1000  
                   _LCD_LEFT 1012                     _LATDbits 000F8C             __CFG_WDTPS$32768 000000  
                 ?_lcdNibble 0001                lcdNibble@data 0002                lcdNibble@temp 0001  
             _LCD_HORZ_LIMIT 1017                     __Hrparam 0000                     __Lrparam 0000  
               __Lsmallconst 1000           __CFG_BOREN$SBORDIS 000000             __size_of___lldiv 0082  
           __size_of_lcdInst 0014              _I2C_Master_Init 11BE             __size_of_initLCD 004C  
            _I2C_Master_Wait 128E              _I2C_Master_Stop 12AA       __end_of_LCD_HORZ_LIMIT 1018  
             _LCD_VERT_LIMIT 1016                __size_of_main 00A4                  ??_lcdNibble 0001  
                   main@SEND 00C8  I2C_Master_Write@byteToWrite 0002     __end_of_I2C_Master_Start 12BA  
   __end_of_I2C_Master_Write 12AA                   _INTCONbits 000FF2       __end_of_LCD_VERT_LIMIT 1017  
              _LCD_SIZE_HORZ 1015                _LCD_SIZE_VERT 1014             ___lldiv@dividend 0001  
    __end_of_I2C_Master_Init 121A      __end_of_I2C_Master_Wait 12A0      __end_of_I2C_Master_Stop 12B2  
                lcdInst@data 0003             ___lldiv@quotient 0009                  _SSPCON1bits 000FC6  
                _SSPCON2bits 000FC5  
