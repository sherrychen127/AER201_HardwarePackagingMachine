

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Sep 15 00:37:57 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24  0000                     
    25                           ; Version 1.43
    26                           ; Generated 25/07/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	smallconst
    61  001000                     __psmallconst:
    62                           	opt stack 0
    63  001000  00                 	db	0
    64  001001                     _keys:
    65                           	opt stack 0
    66  001001  31                 	db	49
    67  001002  32                 	db	50
    68  001003  33                 	db	51
    69  001004  41                 	db	65
    70  001005  34                 	db	52
    71  001006  35                 	db	53
    72  001007  36                 	db	54
    73  001008  42                 	db	66
    74  001009  37                 	db	55
    75  00100A  38                 	db	56
    76  00100B  39                 	db	57
    77  00100C  43                 	db	67
    78  00100D  2A                 	db	42
    79  00100E  30                 	db	48
    80  00100F  23                 	db	35
    81  001010  44                 	db	68
    82  001011  00                 	db	0
    83  001012                     __end_of_keys:
    84                           	opt stack 0
    85  001012                     _LCD_LEFT:
    86                           	opt stack 0
    87  001012  00                 	db	0
    88  001013                     __end_of_LCD_LEFT:
    89                           	opt stack 0
    90  001013                     _LCD_RIGHT:
    91                           	opt stack 0
    92  001013  01                 	db	1
    93  001014                     __end_of_LCD_RIGHT:
    94                           	opt stack 0
    95  001014                     _LCD_SIZE_VERT:
    96                           	opt stack 0
    97  001014  02                 	db	2
    98  001015                     __end_of_LCD_SIZE_VERT:
    99                           	opt stack 0
   100  001015                     _LCD_SIZE_HORZ:
   101                           	opt stack 0
   102  001015  10                 	db	16
   103  001016                     __end_of_LCD_SIZE_HORZ:
   104                           	opt stack 0
   105  001016                     _LCD_VERT_LIMIT:
   106                           	opt stack 0
   107  001016  02                 	db	2
   108  001017                     __end_of_LCD_VERT_LIMIT:
   109                           	opt stack 0
   110  001017                     _LCD_HORZ_LIMIT:
   111                           	opt stack 0
   112  001017  28                 	db	40
   113  001018                     __end_of_LCD_HORZ_LIMIT:
   114                           	opt stack 0
   115  0000                     _SSPBUF	set	4041
   116  0000                     _SSPCON2bits	set	4037
   117  0000                     _SSPADD	set	4040
   118  0000                     _SSPCON2	set	4037
   119  0000                     _SSPCON1	set	4038
   120  0000                     _SSPSTAT	set	4039
   121  0000                     _TRISCbits	set	3988
   122  0000                     _SSPCON1bits	set	4038
   123  0000                     _INTCONbits	set	4082
   124  0000                     _LATDbits	set	3980
   125  0000                     _PORTB	set	3969
   126  0000                     _PORTBbits	set	3969
   127  0000                     _ADCON1	set	4033
   128  0000                     _ADCON0	set	4034
   129  0000                     _TRISE	set	3990
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISB	set	3987
   133  0000                     _TRISA	set	3986
   134  0000                     _LATE	set	3981
   135  0000                     _LATD	set	3980
   136  0000                     _LATC	set	3979
   137  0000                     _LATB	set	3978
   138  0000                     _LATA	set	3977
   139                           
   140                           ; #config settings
   141  001018  00                 	db	0	; dummy byte at the end
   142  0000                     
   143                           	psect	cinit
   144  001304                     __pcinit:
   145                           	opt stack 0
   146  001304                     start_initialization:
   147                           	opt stack 0
   148  001304                     __initialization:
   149                           	opt stack 0
   150                           
   151                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   152  001304  6A20               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   153                           
   154                           ; Clear objects allocated to COMRAM (2 bytes)
   155  001306  6A1F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   156  001308  6A1E               	clrf	__pbssCOMRAM& (0+255),c
   157  00130A                     end_of_initialization:
   158                           	opt stack 0
   159  00130A                     __end_of__initialization:
   160                           	opt stack 0
   161  00130A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   162  00130C  6EF8               	movwf	tblptru,c
   163  00130E  0E10               	movlw	high __Lsmallconst
   164  001310  6EF7               	movwf	tblptrh,c
   165  001312  0100               	movlb	0
   166  001314  EF0D  F008         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           
   170                           	psect	bitbssCOMRAM
   171  000100                     __pbitbssCOMRAM:
   172                           	opt stack 0
   173  000100                     main@SEND:
   174                           	opt stack 0
   175  000100                     	ds	1
   176                           tblptru	equ	0xFF8
   177                           tblptrh	equ	0xFF7
   178                           
   179                           	psect	bssCOMRAM
   180  00001E                     __pbssCOMRAM:
   181                           	opt stack 0
   182  00001E                     lcd@LCDinterruptState:
   183                           	opt stack 0
   184  00001E                     	ds	1
   185  00001F                     	ds	1
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           
   189                           	psect	cstackCOMRAM
   190  000001                     __pcstackCOMRAM:
   191                           	opt stack 0
   192  000001                     ??_I2C_Master_Wait:
   193  000001                     ?___lldiv:
   194                           	opt stack 0
   195  000001                     lcdNibble@temp:
   196                           	opt stack 0
   197  000001                     ___lldiv@dividend:
   198                           	opt stack 0
   199                           
   200                           ; 4 bytes @ 0x0
   201  000001                     	ds	1
   202  000002                     lcdNibble@data:
   203                           	opt stack 0
   204  000002                     I2C_Master_Read@ackBit:
   205                           	opt stack 0
   206  000002                     I2C_Master_Write@byteToWrite:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x1
   210  000002                     	ds	1
   211  000003                     lcdInst@data:
   212                           	opt stack 0
   213  000003                     putch@data:
   214                           	opt stack 0
   215  000003                     I2C_Master_Read@receivedByte:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x2
   219  000003                     	ds	1
   220  000004                     ??_initLCD:
   221  000004                     
   222                           ; 1 bytes @ 0x3
   223  000004                     	ds	1
   224  000005                     ___lldiv@divisor:
   225                           	opt stack 0
   226                           
   227                           ; 4 bytes @ 0x4
   228  000005                     	ds	4
   229  000009                     ___lldiv@quotient:
   230                           	opt stack 0
   231                           
   232                           ; 4 bytes @ 0x8
   233  000009                     	ds	4
   234  00000D                     ___lldiv@counter:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0xC
   238  00000D                     	ds	1
   239  00000E                     I2C_Master_Init@clockFreq:
   240                           	opt stack 0
   241                           
   242                           ; 4 bytes @ 0xD
   243  00000E                     	ds	4
   244  000012                     ??_I2C_Master_Init:
   245                           
   246                           ; 1 bytes @ 0x11
   247  000012                     	ds	4
   248  000016                     _main$158:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x15
   252  000016                     	ds	2
   253  000018                     main@mem:
   254                           	opt stack 0
   255                           
   256                           ; 3 bytes @ 0x17
   257  000018                     	ds	3
   258  00001B                     main@keypress:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x1A
   262  00001B                     	ds	1
   263  00001C                     main@counter:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x1B
   267  00001C                     	ds	1
   268  00001D                     main@data:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x1C
   272  00001D                     	ds	1
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 33 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  mem             3   23[COMRAM] unsigned char [3]
   286 ;;  data            1   28[COMRAM] unsigned char 
   287 ;;  counter         1   27[COMRAM] unsigned char 
   288 ;;  keypress        1   26[COMRAM] unsigned char 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;Total ram usage:        8 bytes
   303 ;; Hardware stack levels required when called:    3
   304 ;; This function calls:
   305 ;;		_I2C_Master_Init
   306 ;;		_I2C_Master_Read
   307 ;;		_I2C_Master_Start
   308 ;;		_I2C_Master_Stop
   309 ;;		_I2C_Master_Write
   310 ;;		_initLCD
   311 ;;		_putch
   312 ;; This function is called by:
   313 ;;		Startup code after reset
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text0
   318  00101A                     __ptext0:
   319                           	opt stack 0
   320  00101A                     _main:
   321                           	opt stack 28
   322                           
   323                           ;main.c: 39: LATA = 0x00;
   324                           
   325                           ;incstack = 0
   326  00101A  0E00               	movlw	0
   327  00101C  6E89               	movwf	3977,c	;volatile
   328                           
   329                           ;main.c: 40: LATB = 0x00;
   330  00101E  0E00               	movlw	0
   331  001020  6E8A               	movwf	3978,c	;volatile
   332                           
   333                           ;main.c: 41: LATC = 0x00;
   334  001022  0E00               	movlw	0
   335  001024  6E8B               	movwf	3979,c	;volatile
   336                           
   337                           ;main.c: 42: LATD = 0x00;
   338  001026  0E00               	movlw	0
   339  001028  6E8C               	movwf	3980,c	;volatile
   340                           
   341                           ;main.c: 43: LATE = 0x00;
   342  00102A  0E00               	movlw	0
   343  00102C  6E8D               	movwf	3981,c	;volatile
   344                           
   345                           ;main.c: 47: TRISA = 0xFF;
   346  00102E  6892               	setf	3986,c	;volatile
   347                           
   348                           ;main.c: 48: TRISB = 0xFF;
   349  001030  6893               	setf	3987,c	;volatile
   350                           
   351                           ;main.c: 49: TRISC = 0b10000000;
   352  001032  0E80               	movlw	128
   353  001034  6E94               	movwf	3988,c	;volatile
   354                           
   355                           ;main.c: 53: TRISD = 0x00;
   356  001036  0E00               	movlw	0
   357  001038  6E95               	movwf	3989,c	;volatile
   358                           
   359                           ;main.c: 54: TRISE = 0x00;
   360  00103A  0E00               	movlw	0
   361  00103C  6E96               	movwf	3990,c	;volatile
   362                           
   363                           ;main.c: 57: ADCON0 = 0x00;
   364  00103E  0E00               	movlw	0
   365  001040  6EC2               	movwf	4034,c	;volatile
   366                           
   367                           ;main.c: 58: ADCON1 = 0b00001111;
   368  001042  0E0F               	movlw	15
   369  001044  6EC1               	movwf	4033,c	;volatile
   370                           
   371                           ;main.c: 62: initLCD();
   372  001046  EC4A  F009         	call	_initLCD	;wreg free
   373                           
   374                           ;main.c: 65: I2C_Master_Init(100000);
   375  00104A  0EA0               	movlw	160
   376  00104C  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   377  00104E  0E86               	movlw	134
   378  001050  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   379  001052  0E01               	movlw	1
   380  001054  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   381  001056  0E00               	movlw	0
   382  001058  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   383  00105A  EC1C  F009         	call	_I2C_Master_Init	;wreg free
   384                           
   385                           ;main.c: 66: I2C_Master_Start();
   386  00105E  ECB2  F009         	call	_I2C_Master_Start	;wreg free
   387                           
   388                           ;main.c: 73: I2C_Master_Write(0b00010000);
   389  001062  0E00               	movlw	0
   390  001064  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   391  001066  0E10               	movlw	16
   392  001068  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   393  00106A  ECA9  F009         	call	_I2C_Master_Write	;wreg free
   394                           
   395                           ;main.c: 74: I2C_Master_Stop();
   396  00106E  ECAE  F009         	call	_I2C_Master_Stop	;wreg free
   397                           
   398                           ;main.c: 77: unsigned char mem[3];
   399                           ;main.c: 78: unsigned char counter = 0;
   400  001072  0E00               	movlw	0
   401  001074  6E1C               	movwf	main@counter,c
   402                           
   403                           ;main.c: 79: unsigned char keypress;
   404                           ;main.c: 80: unsigned char data;
   405                           ;main.c: 81: static bit SEND;
   406                           ;main.c: 82: SEND = 1;
   407  001076  8020               	bsf	main@SEND/(0+8),main@SEND& (0+7),c
   408  001078                     
   409                           ;main.c: 86: if(SEND){
   410  001078  A020               	btfss	main@SEND/(0+8),main@SEND& (0+7),c
   411  00107A  D049               	goto	l66
   412  00107C                     u330:
   413                           
   414                           ;main.c: 87: while (PORTBbits.RB1 == 0) { continue; }
   415  00107C  A281               	btfss	3969,1,c	;volatile
   416  00107E  D7FE               	goto	u330
   417                           
   418                           ;main.c: 88: keypress = (PORTB & 0xF0) >> 4;
   419  001080  3881               	swapf	3969,w,c	;volatile
   420  001082  0B0F               	andlw	15
   421  001084  0B0F               	andlw	15
   422  001086  6E1B               	movwf	main@keypress,c
   423  001088  B281               	btfsc	3969,1,c	;volatile
   424  00108A  D7FE               	goto	l71
   425                           
   426                           ;main.c: 90: data = keys[keypress];
   427  00108C  501B               	movf	main@keypress,w,c
   428  00108E  0D01               	mullw	1
   429  001090  0E01               	movlw	low _keys
   430  001092  24F3               	addwf	prodl,w,c
   431  001094  6EF6               	movwf	tblptrl,c
   432  001096  0E10               	movlw	high _keys
   433  001098  20F4               	addwfc	prodh,w,c
   434  00109A  6EF7               	movwf	tblptrh,c
   435  00109C                     	if	0	;There are less than 3 active tblptr bytes
   436  00109C                     	endif
   437  00109C  0008               	tblrd		*
   438  00109E  CFF5 F01D          	movff	tablat,main@data
   439                           
   440                           ;main.c: 92: I2C_Master_Start();
   441  0010A2  ECB2  F009         	call	_I2C_Master_Start	;wreg free
   442                           
   443                           ;main.c: 93: I2C_Master_Write(0b00010000);
   444  0010A6  0E00               	movlw	0
   445  0010A8  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   446  0010AA  0E10               	movlw	16
   447  0010AC  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   448  0010AE  ECA9  F009         	call	_I2C_Master_Write	;wreg free
   449                           
   450                           ;main.c: 94: I2C_Master_Write(data);
   451  0010B2  C01D  F002         	movff	main@data,I2C_Master_Write@byteToWrite
   452  0010B6  6A03               	clrf	I2C_Master_Write@byteToWrite+1,c
   453  0010B8  ECA9  F009         	call	_I2C_Master_Write	;wreg free
   454                           
   455                           ;main.c: 95: I2C_Master_Stop();
   456  0010BC  ECAE  F009         	call	_I2C_Master_Stop	;wreg free
   457                           
   458                           ;main.c: 100: mem[counter] = data;
   459  0010C0  501C               	movf	main@counter,w,c
   460  0010C2  0D01               	mullw	1
   461  0010C4  0E18               	movlw	low main@mem
   462  0010C6  24F3               	addwf	prodl,w,c
   463  0010C8  6ED9               	movwf	fsr2l,c
   464  0010CA  0E00               	movlw	high main@mem
   465  0010CC  20F4               	addwfc	prodh,w,c
   466  0010CE  6EDA               	movwf	fsr2h,c
   467  0010D0  C01D  FFDF         	movff	main@data,indf2
   468                           
   469                           ;main.c: 101: counter++;
   470  0010D4  2A1C               	incf	main@counter,f,c
   471                           
   472                           ;main.c: 102: counter = (counter == 3) ? 0 : counter;
   473  0010D6  0E03               	movlw	3
   474  0010D8  181C               	xorwf	main@counter,w,c
   475  0010DA  B4D8               	btfsc	status,2,c
   476  0010DC  D004               	goto	l74
   477  0010DE  C01C  F016         	movff	main@counter,_main$158
   478  0010E2  6A17               	clrf	_main$158+1,c
   479  0010E4  D004               	goto	l76
   480  0010E6                     l74:
   481  0010E6  0E00               	movlw	0
   482  0010E8  6E17               	movwf	_main$158+1,c
   483  0010EA  0E00               	movlw	0
   484  0010EC  6E16               	movwf	_main$158,c
   485  0010EE                     l76:
   486  0010EE  C016  F01C         	movff	_main$158,main@counter
   487                           
   488                           ;main.c: 104: if(mem[0]=='A' && mem[1]=='A' && mem[2]=='A'){
   489  0010F2  0E41               	movlw	65
   490  0010F4  1818               	xorwf	main@mem,w,c
   491  0010F6  A4D8               	btfss	status,2,c
   492  0010F8  D7BF               	goto	l65
   493  0010FA  0E41               	movlw	65
   494  0010FC  1819               	xorwf	main@mem+1,w,c
   495  0010FE  A4D8               	btfss	status,2,c
   496  001100  D7BB               	goto	l65
   497  001102  0E41               	movlw	65
   498  001104  181A               	xorwf	main@mem+2,w,c
   499  001106  A4D8               	btfss	status,2,c
   500  001108  D7B7               	goto	l65
   501                           
   502                           ;main.c: 105: SEND = 0;
   503  00110A  9020               	bcf	main@SEND/(0+8),main@SEND& (0+7),c
   504                           
   505                           ;main.c: 106: }
   506                           ;main.c: 107: }
   507  00110C  D7B5               	goto	l65
   508  00110E                     l66:
   509                           
   510                           ;main.c: 108: else{
   511                           ;main.c: 110: I2C_Master_Start();
   512  00110E  ECB2  F009         	call	_I2C_Master_Start	;wreg free
   513                           
   514                           ;main.c: 111: I2C_Master_Write(0b00010001);
   515  001112  0E00               	movlw	0
   516  001114  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   517  001116  0E11               	movlw	17
   518  001118  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   519  00111A  ECA9  F009         	call	_I2C_Master_Write	;wreg free
   520                           
   521                           ;main.c: 112: data = I2C_Master_Read(1);
   522  00111E  0E01               	movlw	1
   523  001120  EC70  F009         	call	_I2C_Master_Read
   524  001124  6E1D               	movwf	main@data,c
   525                           
   526                           ;main.c: 113: I2C_Master_Stop();
   527  001126  ECAE  F009         	call	_I2C_Master_Stop	;wreg free
   528                           
   529                           ;main.c: 114: if(data){
   530  00112A  501D               	movf	main@data,w,c
   531  00112C  B4D8               	btfsc	status,2,c
   532  00112E  D7A4               	goto	l65
   533                           
   534                           ;main.c: 115: putch(data);
   535  001130  501D               	movf	main@data,w,c
   536  001132  EC8C  F009         	call	_putch
   537  001136  D7A0               	goto	l65
   538  001138                     __end_of_main:
   539                           	opt stack 0
   540                           tblptru	equ	0xFF8
   541                           tblptrh	equ	0xFF7
   542                           tblptrl	equ	0xFF6
   543                           tablat	equ	0xFF5
   544                           prodh	equ	0xFF4
   545                           prodl	equ	0xFF3
   546                           indf2	equ	0xFDF
   547                           fsr2h	equ	0xFDA
   548                           fsr2l	equ	0xFD9
   549                           status	equ	0xFD8
   550                           
   551 ;; *************** function _putch *****************
   552 ;; Defined at:
   553 ;;		line 24 in file "lcd.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  data            1    wreg     unsigned char 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  data            1    2[COMRAM] unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;Total ram usage:        1 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    1
   574 ;; This function calls:
   575 ;;		_lcdNibble
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text1
   582  001318                     __ptext1:
   583                           	opt stack 0
   584  001318                     _putch:
   585                           	opt stack 29
   586                           
   587                           ;incstack = 0
   588                           ;putch@data stored from wreg
   589  001318  6E03               	movwf	putch@data,c
   590                           
   591                           ;lcd.c: 32: LATDbits.LATD2 = 1;
   592  00131A  848C               	bsf	3980,2,c	;volatile
   593                           
   594                           ;lcd.c: 33: lcdNibble(data);
   595  00131C  5003               	movf	putch@data,w,c
   596  00131E  ECDD  F008         	call	_lcdNibble
   597                           
   598                           ;lcd.c: 34: _delay((unsigned long)((100)*(40000000/4000000.0)));
   599  001322  0EC8               	movlw	200
   600  001324                     u477:
   601  001324  D000               	nop2	
   602  001326  2EE8               	decfsz	wreg,f,c
   603  001328  D7FD               	bra	u477
   604  00132A  0012               	return		;funcret
   605  00132C                     __end_of_putch:
   606                           	opt stack 0
   607                           tblptru	equ	0xFF8
   608                           tblptrh	equ	0xFF7
   609                           tblptrl	equ	0xFF6
   610                           tablat	equ	0xFF5
   611                           prodh	equ	0xFF4
   612                           prodl	equ	0xFF3
   613                           wreg	equ	0xFE8
   614                           indf2	equ	0xFDF
   615                           fsr2h	equ	0xFDA
   616                           fsr2l	equ	0xFD9
   617                           status	equ	0xFD8
   618                           
   619 ;; *************** function _initLCD *****************
   620 ;; Defined at:
   621 ;;		line 60 in file "lcd.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;Total ram usage:        1 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    2
   642 ;; This function calls:
   643 ;;		_lcdInst
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text2
   650  001294                     __ptext2:
   651                           	opt stack 0
   652  001294                     _initLCD:
   653                           	opt stack 28
   654                           
   655                           ;lcd.c: 68: _delay((unsigned long)((15)*(40000000/4000.0)));
   656                           
   657                           ;incstack = 0
   658  001294  0EC3               	movlw	195
   659  001296  6E04               	movwf	??_initLCD& (0+255),c
   660  001298  0ECD               	movlw	205
   661  00129A                     u487:
   662  00129A  2EE8               	decfsz	wreg,f,c
   663  00129C  D7FE               	bra	u487
   664  00129E  2E04               	decfsz	??_initLCD& (0+255),f,c
   665  0012A0  D7FC               	bra	u487
   666  0012A2  F000               	nop	
   667                           
   668                           ;lcd.c: 69: lcdInst(0b00110011);
   669  0012A4  0E33               	movlw	51
   670  0012A6  EC96  F009         	call	_lcdInst
   671                           
   672                           ;lcd.c: 70: lcdInst(0b00110010);
   673  0012AA  0E32               	movlw	50
   674  0012AC  EC96  F009         	call	_lcdInst
   675                           
   676                           ;lcd.c: 71: lcdInst(0b00101000);
   677  0012B0  0E28               	movlw	40
   678  0012B2  EC96  F009         	call	_lcdInst
   679                           
   680                           ;lcd.c: 72: lcdInst(0b00001111);
   681  0012B6  0E0F               	movlw	15
   682  0012B8  EC96  F009         	call	_lcdInst
   683                           
   684                           ;lcd.c: 73: lcdInst(0b00000110);
   685  0012BC  0E06               	movlw	6
   686  0012BE  EC96  F009         	call	_lcdInst
   687                           
   688                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
   689  0012C2  0E01               	movlw	1
   690  0012C4  EC96  F009         	call	_lcdInst
   691  0012C8  0EC3               	movlw	195
   692  0012CA  6E04               	movwf	??_initLCD& (0+255),c
   693  0012CC  0ECD               	movlw	205
   694  0012CE                     u497:
   695  0012CE  2EE8               	decfsz	wreg,f,c
   696  0012D0  D7FE               	bra	u497
   697  0012D2  2E04               	decfsz	??_initLCD& (0+255),f,c
   698  0012D4  D7FC               	bra	u497
   699  0012D6  F000               	nop	
   700                           
   701                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
   702  0012D8  0E0F               	movlw	15
   703  0012DA  EC96  F009         	call	_lcdInst
   704  0012DE  0012               	return		;funcret
   705  0012E0                     __end_of_initLCD:
   706                           	opt stack 0
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           prodh	equ	0xFF4
   712                           prodl	equ	0xFF3
   713                           wreg	equ	0xFE8
   714                           indf2	equ	0xFDF
   715                           fsr2h	equ	0xFDA
   716                           fsr2l	equ	0xFD9
   717                           status	equ	0xFD8
   718                           
   719 ;; *************** function _lcdInst *****************
   720 ;; Defined at:
   721 ;;		line 11 in file "lcd.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  data            1    wreg     unsigned char 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  data            1    2[COMRAM] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;Total ram usage:        1 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    1
   742 ;; This function calls:
   743 ;;		_lcdNibble
   744 ;; This function is called by:
   745 ;;		_initLCD
   746 ;;		_lcd_set_cursor
   747 ;;		_lcd_shift_cursor
   748 ;;		_lcd_shift_display
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text3
   753  00132C                     __ptext3:
   754                           	opt stack 0
   755  00132C                     _lcdInst:
   756                           	opt stack 28
   757                           
   758                           ;incstack = 0
   759                           ;lcdInst@data stored from wreg
   760  00132C  6E03               	movwf	lcdInst@data,c
   761                           
   762                           ;lcd.c: 19: LATDbits.LATD2 = 0;
   763  00132E  948C               	bcf	3980,2,c	;volatile
   764                           
   765                           ;lcd.c: 20: lcdNibble(data);
   766  001330  5003               	movf	lcdInst@data,w,c
   767  001332  ECDD  F008         	call	_lcdNibble
   768                           
   769                           ;lcd.c: 21: _delay((unsigned long)((100)*(40000000/4000000.0)));
   770  001336  0EC8               	movlw	200
   771  001338                     u507:
   772  001338  D000               	nop2	
   773  00133A  2EE8               	decfsz	wreg,f,c
   774  00133C  D7FD               	bra	u507
   775  00133E  0012               	return		;funcret
   776  001340                     __end_of_lcdInst:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           prodh	equ	0xFF4
   783                           prodl	equ	0xFF3
   784                           wreg	equ	0xFE8
   785                           indf2	equ	0xFDF
   786                           fsr2h	equ	0xFDA
   787                           fsr2l	equ	0xFD9
   788                           status	equ	0xFD8
   789                           
   790 ;; *************** function _lcdNibble *****************
   791 ;; Defined at:
   792 ;;		line 37 in file "lcd.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  data            1    wreg     unsigned char 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  data            1    1[COMRAM] unsigned char 
   797 ;;  temp            1    0[COMRAM] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;Total ram usage:        2 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_lcdInst
   817 ;;		_putch
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text4
   822  0011BA                     __ptext4:
   823                           	opt stack 0
   824  0011BA                     _lcdNibble:
   825                           	opt stack 29
   826                           
   827                           ;incstack = 0
   828                           ;lcdNibble@data stored from wreg
   829  0011BA  6E02               	movwf	lcdNibble@data,c
   830                           
   831                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
   832  0011BC  5002               	movf	lcdNibble@data,w,c
   833  0011BE  0BF0               	andlw	240
   834  0011C0  6E01               	movwf	lcdNibble@temp,c
   835                           
   836                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
   837  0011C2  508C               	movf	3980,w,c	;volatile
   838  0011C4  0B0F               	andlw	15
   839  0011C6  6E8C               	movwf	3980,c	;volatile
   840                           
   841                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
   842  0011C8  5001               	movf	lcdNibble@temp,w,c
   843  0011CA  108C               	iorwf	3980,w,c	;volatile
   844  0011CC  6E8C               	movwf	3980,c	;volatile
   845                           
   846                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   847  0011CE  0E00               	movlw	0
   848  0011D0  BEF2               	btfsc	intcon,7,c	;volatile
   849  0011D2  0E01               	movlw	1
   850  0011D4  6E1E               	movwf	lcd@LCDinterruptState,c
   851  0011D6  9EF2               	bcf	intcon,7,c	;volatile
   852  0011D8  868C               	bsf	3980,3,c	;volatile
   853  0011DA  0E53               	movlw	83
   854  0011DC                     u517:
   855  0011DC  2EE8               	decfsz	wreg,f,c
   856  0011DE  D7FE               	bra	u517
   857  0011E0  F000               	nop	
   858  0011E2  968C               	bcf	3980,3,c	;volatile
   859  0011E4  0EC8               	movlw	200
   860  0011E6                     u527:
   861  0011E6  D000               	nop2	
   862  0011E8  2EE8               	decfsz	wreg,f,c
   863  0011EA  D7FD               	bra	u527
   864  0011EC  B01E               	btfsc	lcd@LCDinterruptState,0,c
   865  0011EE  D002               	bra	u245
   866  0011F0  9EF2               	bcf	intcon,7,c	;volatile
   867  0011F2  D001               	bra	u246
   868  0011F4                     u245:
   869  0011F4  8EF2               	bsf	intcon,7,c	;volatile
   870  0011F6                     u246:
   871                           
   872                           ;lcd.c: 52: data = (unsigned char) (data << 4);
   873  0011F6  3802               	swapf	lcdNibble@data,w,c
   874  0011F8  0BF0               	andlw	240
   875  0011FA  6E02               	movwf	lcdNibble@data,c
   876                           
   877                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
   878  0011FC  5002               	movf	lcdNibble@data,w,c
   879  0011FE  0BF0               	andlw	240
   880  001200  6E01               	movwf	lcdNibble@temp,c
   881                           
   882                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
   883  001202  508C               	movf	3980,w,c	;volatile
   884  001204  0B0F               	andlw	15
   885  001206  6E8C               	movwf	3980,c	;volatile
   886                           
   887                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
   888  001208  5001               	movf	lcdNibble@temp,w,c
   889  00120A  108C               	iorwf	3980,w,c	;volatile
   890  00120C  6E8C               	movwf	3980,c	;volatile
   891                           
   892                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   893  00120E  0E00               	movlw	0
   894  001210  BEF2               	btfsc	intcon,7,c	;volatile
   895  001212  0E01               	movlw	1
   896  001214  6E1E               	movwf	lcd@LCDinterruptState,c
   897  001216  9EF2               	bcf	intcon,7,c	;volatile
   898  001218  868C               	bsf	3980,3,c	;volatile
   899  00121A  0E53               	movlw	83
   900  00121C                     u537:
   901  00121C  2EE8               	decfsz	wreg,f,c
   902  00121E  D7FE               	bra	u537
   903  001220  F000               	nop	
   904  001222  968C               	bcf	3980,3,c	;volatile
   905  001224  0EC8               	movlw	200
   906  001226                     u547:
   907  001226  D000               	nop2	
   908  001228  2EE8               	decfsz	wreg,f,c
   909  00122A  D7FD               	bra	u547
   910  00122C  B01E               	btfsc	lcd@LCDinterruptState,0,c
   911  00122E  D002               	bra	u255
   912  001230  9EF2               	bcf	intcon,7,c	;volatile
   913  001232  D001               	bra	u256
   914  001234                     u255:
   915  001234  8EF2               	bsf	intcon,7,c	;volatile
   916  001236                     u256:
   917  001236  0012               	return		;funcret
   918  001238                     __end_of_lcdNibble:
   919                           	opt stack 0
   920                           tblptru	equ	0xFF8
   921                           tblptrh	equ	0xFF7
   922                           tblptrl	equ	0xFF6
   923                           tablat	equ	0xFF5
   924                           prodh	equ	0xFF4
   925                           prodl	equ	0xFF3
   926                           intcon	equ	0xFF2
   927                           wreg	equ	0xFE8
   928                           indf2	equ	0xFDF
   929                           fsr2h	equ	0xFDA
   930                           fsr2l	equ	0xFD9
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function _I2C_Master_Write *****************
   934 ;; Defined at:
   935 ;;		line 108 in file "I2C.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  byteToWrite     2    1[COMRAM] unsigned int 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;Total ram usage:        2 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:    1
   956 ;; This function calls:
   957 ;;		_I2C_Master_Wait
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text5
   964  001352                     __ptext5:
   965                           	opt stack 0
   966  001352                     _I2C_Master_Write:
   967                           	opt stack 29
   968                           
   969                           ;I2C.c: 116: I2C_Master_Wait();
   970                           
   971                           ;incstack = 0
   972  001352  ECA0  F009         	call	_I2C_Master_Wait	;wreg free
   973                           
   974                           ;I2C.c: 117: SSPBUF = byteToWrite;
   975  001356  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
   976  00135A  0012               	return		;funcret
   977  00135C                     __end_of_I2C_Master_Write:
   978                           	opt stack 0
   979                           tblptru	equ	0xFF8
   980                           tblptrh	equ	0xFF7
   981                           tblptrl	equ	0xFF6
   982                           tablat	equ	0xFF5
   983                           prodh	equ	0xFF4
   984                           prodl	equ	0xFF3
   985                           intcon	equ	0xFF2
   986                           wreg	equ	0xFE8
   987                           indf2	equ	0xFDF
   988                           fsr2h	equ	0xFDA
   989                           fsr2l	equ	0xFD9
   990                           status	equ	0xFD8
   991                           
   992 ;; *************** function _I2C_Master_Stop *****************
   993 ;; Defined at:
   994 ;;		line 95 in file "I2C.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    1
  1015 ;; This function calls:
  1016 ;;		_I2C_Master_Wait
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text6
  1023  00135C                     __ptext6:
  1024                           	opt stack 0
  1025  00135C                     _I2C_Master_Stop:
  1026                           	opt stack 29
  1027                           
  1028                           ;I2C.c: 104: I2C_Master_Wait();
  1029                           
  1030                           ;incstack = 0
  1031  00135C  ECA0  F009         	call	_I2C_Master_Wait	;wreg free
  1032                           
  1033                           ;I2C.c: 105: SSPCON2bits.PEN = 1;
  1034  001360  84C5               	bsf	4037,2,c	;volatile
  1035  001362  0012               	return		;funcret
  1036  001364                     __end_of_I2C_Master_Stop:
  1037                           	opt stack 0
  1038                           tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           prodh	equ	0xFF4
  1043                           prodl	equ	0xFF3
  1044                           intcon	equ	0xFF2
  1045                           wreg	equ	0xFE8
  1046                           indf2	equ	0xFDF
  1047                           fsr2h	equ	0xFDA
  1048                           fsr2l	equ	0xFD9
  1049                           status	equ	0xFD8
  1050                           
  1051 ;; *************** function _I2C_Master_Start *****************
  1052 ;; Defined at:
  1053 ;;		line 69 in file "I2C.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    1
  1074 ;; This function calls:
  1075 ;;		_I2C_Master_Wait
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text7
  1082  001364                     __ptext7:
  1083                           	opt stack 0
  1084  001364                     _I2C_Master_Start:
  1085                           	opt stack 29
  1086                           
  1087                           ;I2C.c: 78: I2C_Master_Wait();
  1088                           
  1089                           ;incstack = 0
  1090  001364  ECA0  F009         	call	_I2C_Master_Wait	;wreg free
  1091                           
  1092                           ;I2C.c: 79: SSPCON2bits.SEN = 1;
  1093  001368  80C5               	bsf	4037,0,c	;volatile
  1094  00136A  0012               	return		;funcret
  1095  00136C                     __end_of_I2C_Master_Start:
  1096                           	opt stack 0
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           prodh	equ	0xFF4
  1102                           prodl	equ	0xFF3
  1103                           intcon	equ	0xFF2
  1104                           wreg	equ	0xFE8
  1105                           indf2	equ	0xFDF
  1106                           fsr2h	equ	0xFDA
  1107                           fsr2l	equ	0xFD9
  1108                           status	equ	0xFD8
  1109                           
  1110 ;; *************** function _I2C_Master_Read *****************
  1111 ;; Defined at:
  1112 ;;		line 120 in file "I2C.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  ackBit          1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  ackBit          1    1[COMRAM] unsigned char 
  1117 ;;  receivedByte    1    2[COMRAM] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      unsigned char 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;Total ram usage:        2 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    1
  1134 ;; This function calls:
  1135 ;;		_I2C_Master_Wait
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text8
  1142  0012E0                     __ptext8:
  1143                           	opt stack 0
  1144  0012E0                     _I2C_Master_Read:
  1145                           	opt stack 29
  1146                           
  1147                           ;incstack = 0
  1148                           ;I2C_Master_Read@ackBit stored from wreg
  1149  0012E0  6E02               	movwf	I2C_Master_Read@ackBit,c
  1150                           
  1151                           ;I2C.c: 130: unsigned char receivedByte;
  1152                           ;I2C.c: 132: I2C_Master_Wait();
  1153  0012E2  ECA0  F009         	call	_I2C_Master_Wait	;wreg free
  1154                           
  1155                           ;I2C.c: 133: SSPCON2bits.RCEN = 1;
  1156  0012E6  86C5               	bsf	4037,3,c	;volatile
  1157                           
  1158                           ;I2C.c: 135: I2C_Master_Wait();
  1159  0012E8  ECA0  F009         	call	_I2C_Master_Wait	;wreg free
  1160                           
  1161                           ;I2C.c: 136: receivedByte = SSPBUF;
  1162  0012EC  CFC9 F003          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  1163                           
  1164                           ;I2C.c: 138: I2C_Master_Wait();
  1165  0012F0  ECA0  F009         	call	_I2C_Master_Wait	;wreg free
  1166                           
  1167                           ;I2C.c: 139: SSPCON2bits.ACKDT = ackBit;
  1168  0012F4  B002               	btfsc	I2C_Master_Read@ackBit,0,c
  1169  0012F6  D002               	bra	u325
  1170  0012F8  9AC5               	bcf	4037,5,c	;volatile
  1171  0012FA  D001               	bra	u326
  1172  0012FC                     u325:
  1173  0012FC  8AC5               	bsf	4037,5,c	;volatile
  1174  0012FE                     u326:
  1175                           
  1176                           ;I2C.c: 140: SSPCON2bits.ACKEN = 1;
  1177  0012FE  88C5               	bsf	4037,4,c	;volatile
  1178                           
  1179                           ;I2C.c: 142: return receivedByte;
  1180  001300  5003               	movf	I2C_Master_Read@receivedByte,w,c
  1181  001302  0012               	return	
  1182  001304                     __end_of_I2C_Master_Read:
  1183                           	opt stack 0
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           prodh	equ	0xFF4
  1189                           prodl	equ	0xFF3
  1190                           intcon	equ	0xFF2
  1191                           wreg	equ	0xFE8
  1192                           indf2	equ	0xFDF
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           status	equ	0xFD8
  1196                           
  1197 ;; *************** function _I2C_Master_Wait *****************
  1198 ;; Defined at:
  1199 ;;		line 51 in file "I2C.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;Total ram usage:        1 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_I2C_Master_Start
  1223 ;;		_I2C_Master_Stop
  1224 ;;		_I2C_Master_Write
  1225 ;;		_I2C_Master_Read
  1226 ;;		_I2C_Master_RepeatedStart
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text9
  1231  001340                     __ptext9:
  1232                           	opt stack 0
  1233  001340                     _I2C_Master_Wait:
  1234                           	opt stack 29
  1235                           
  1236                           ;I2C.c: 66: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1237                           
  1238                           ;incstack = 0
  1239  001340  B4C7               	btfsc	4039,2,c	;volatile
  1240  001342  D7FE               	goto	_I2C_Master_Wait
  1241  001344  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1242  001348  0E1F               	movlw	31
  1243  00134A  1601               	andwf	??_I2C_Master_Wait,f,c
  1244  00134C  B4D8               	btfsc	status,2,c
  1245  00134E  0012               	return	
  1246  001350  D7F7               	goto	_I2C_Master_Wait
  1247  001352                     __end_of_I2C_Master_Wait:
  1248                           	opt stack 0
  1249                           tblptru	equ	0xFF8
  1250                           tblptrh	equ	0xFF7
  1251                           tblptrl	equ	0xFF6
  1252                           tablat	equ	0xFF5
  1253                           prodh	equ	0xFF4
  1254                           prodl	equ	0xFF3
  1255                           intcon	equ	0xFF2
  1256                           wreg	equ	0xFE8
  1257                           indf2	equ	0xFDF
  1258                           fsr2h	equ	0xFDA
  1259                           fsr2l	equ	0xFD9
  1260                           status	equ	0xFD8
  1261                           
  1262 ;; *************** function _I2C_Master_Init *****************
  1263 ;; Defined at:
  1264 ;;		line 14 in file "I2C.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;Total ram usage:        8 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    1
  1285 ;; This function calls:
  1286 ;;		___lldiv
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text10
  1293  001238                     __ptext10:
  1294                           	opt stack 0
  1295  001238                     _I2C_Master_Init:
  1296                           	opt stack 29
  1297                           
  1298                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
  1299                           
  1300                           ;incstack = 0
  1301  001238  9AC6               	bcf	4038,5,c	;volatile
  1302                           
  1303                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
  1304  00123A  8694               	bsf	3988,3,c	;volatile
  1305                           
  1306                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
  1307  00123C  8894               	bsf	3988,4,c	;volatile
  1308                           
  1309                           ;I2C.c: 41: SSPSTAT = 0b10000000;
  1310  00123E  0E80               	movlw	128
  1311  001240  6EC7               	movwf	4039,c	;volatile
  1312                           
  1313                           ;I2C.c: 42: SSPCON1 = 0b00101000;
  1314  001242  0E28               	movlw	40
  1315  001244  6EC6               	movwf	4038,c	;volatile
  1316                           
  1317                           ;I2C.c: 43: SSPCON2 = 0b00000000;
  1318  001246  0E00               	movlw	0
  1319  001248  6EC5               	movwf	4037,c	;volatile
  1320                           
  1321                           ;I2C.c: 48: SSPADD = (40000000 / (4 * clockFreq)) - 1;
  1322  00124A  0E00               	movlw	0
  1323  00124C  6E01               	movwf	___lldiv@dividend,c
  1324  00124E  0E5A               	movlw	90
  1325  001250  6E02               	movwf	___lldiv@dividend+1,c
  1326  001252  0E62               	movlw	98
  1327  001254  6E03               	movwf	___lldiv@dividend+2,c
  1328  001256  0E02               	movlw	2
  1329  001258  6E04               	movwf	___lldiv@dividend+3,c
  1330  00125A  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  1331  00125E  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  1332  001262  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  1333  001266  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  1334  00126A  0E02               	movlw	2
  1335  00126C                     u315:
  1336  00126C  90D8               	bcf	status,0,c
  1337  00126E  3612               	rlcf	??_I2C_Master_Init,f,c
  1338  001270  3613               	rlcf	??_I2C_Master_Init+1,f,c
  1339  001272  3614               	rlcf	??_I2C_Master_Init+2,f,c
  1340  001274  3615               	rlcf	??_I2C_Master_Init+3,f,c
  1341  001276  2EE8               	decfsz	wreg,f,c
  1342  001278  D7F9               	goto	u315
  1343  00127A  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  1344  00127E  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1345  001282  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1346  001286  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1347  00128A  EC9C  F008         	call	___lldiv	;wreg free
  1348  00128E  0401               	decf	?___lldiv,w,c
  1349  001290  6EC8               	movwf	4040,c	;volatile
  1350  001292  0012               	return		;funcret
  1351  001294                     __end_of_I2C_Master_Init:
  1352                           	opt stack 0
  1353                           tblptru	equ	0xFF8
  1354                           tblptrh	equ	0xFF7
  1355                           tblptrl	equ	0xFF6
  1356                           tablat	equ	0xFF5
  1357                           prodh	equ	0xFF4
  1358                           prodl	equ	0xFF3
  1359                           intcon	equ	0xFF2
  1360                           wreg	equ	0xFE8
  1361                           indf2	equ	0xFDF
  1362                           fsr2h	equ	0xFDA
  1363                           fsr2l	equ	0xFD9
  1364                           status	equ	0xFD8
  1365                           
  1366 ;; *************** function ___lldiv *****************
  1367 ;; Defined at:
  1368 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  dividend        4    0[COMRAM] unsigned long 
  1371 ;;  divisor         4    4[COMRAM] unsigned long 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  quotient        4    8[COMRAM] unsigned long 
  1374 ;;  counter         1   12[COMRAM] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  4    0[COMRAM] unsigned long 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1384 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;Total ram usage:       13 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_I2C_Master_Init
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text11
  1398  001138                     __ptext11:
  1399                           	opt stack 0
  1400  001138                     ___lldiv:
  1401                           	opt stack 29
  1402                           
  1403                           ;incstack = 0
  1404  001138  0E00               	movlw	0
  1405  00113A  6E09               	movwf	___lldiv@quotient,c
  1406  00113C  0E00               	movlw	0
  1407  00113E  6E0A               	movwf	___lldiv@quotient+1,c
  1408  001140  0E00               	movlw	0
  1409  001142  6E0B               	movwf	___lldiv@quotient+2,c
  1410  001144  0E00               	movlw	0
  1411  001146  6E0C               	movwf	___lldiv@quotient+3,c
  1412  001148  5005               	movf	___lldiv@divisor,w,c
  1413  00114A  1006               	iorwf	___lldiv@divisor+1,w,c
  1414  00114C  1007               	iorwf	___lldiv@divisor+2,w,c
  1415  00114E  1008               	iorwf	___lldiv@divisor+3,w,c
  1416  001150  B4D8               	btfsc	status,2,c
  1417  001152  D02A               	goto	l533
  1418  001154  0E01               	movlw	1
  1419  001156  6E0D               	movwf	___lldiv@counter,c
  1420  001158  D006               	goto	l528
  1421  00115A  90D8               	bcf	status,0,c
  1422  00115C  3605               	rlcf	___lldiv@divisor,f,c
  1423  00115E  3606               	rlcf	___lldiv@divisor+1,f,c
  1424  001160  3607               	rlcf	___lldiv@divisor+2,f,c
  1425  001162  3608               	rlcf	___lldiv@divisor+3,f,c
  1426  001164  2A0D               	incf	___lldiv@counter,f,c
  1427  001166                     l528:
  1428  001166  AE08               	btfss	___lldiv@divisor+3,7,c
  1429  001168  D7F8               	goto	l529
  1430  00116A                     u290:
  1431  00116A  90D8               	bcf	status,0,c
  1432  00116C  3609               	rlcf	___lldiv@quotient,f,c
  1433  00116E  360A               	rlcf	___lldiv@quotient+1,f,c
  1434  001170  360B               	rlcf	___lldiv@quotient+2,f,c
  1435  001172  360C               	rlcf	___lldiv@quotient+3,f,c
  1436  001174  5005               	movf	___lldiv@divisor,w,c
  1437  001176  5C01               	subwf	___lldiv@dividend,w,c
  1438  001178  5006               	movf	___lldiv@divisor+1,w,c
  1439  00117A  5802               	subwfb	___lldiv@dividend+1,w,c
  1440  00117C  5007               	movf	___lldiv@divisor+2,w,c
  1441  00117E  5803               	subwfb	___lldiv@dividend+2,w,c
  1442  001180  5008               	movf	___lldiv@divisor+3,w,c
  1443  001182  5804               	subwfb	___lldiv@dividend+3,w,c
  1444  001184  A0D8               	btfss	status,0,c
  1445  001186  D009               	goto	l532
  1446  001188  5005               	movf	___lldiv@divisor,w,c
  1447  00118A  5E01               	subwf	___lldiv@dividend,f,c
  1448  00118C  5006               	movf	___lldiv@divisor+1,w,c
  1449  00118E  5A02               	subwfb	___lldiv@dividend+1,f,c
  1450  001190  5007               	movf	___lldiv@divisor+2,w,c
  1451  001192  5A03               	subwfb	___lldiv@dividend+2,f,c
  1452  001194  5008               	movf	___lldiv@divisor+3,w,c
  1453  001196  5A04               	subwfb	___lldiv@dividend+3,f,c
  1454  001198  8009               	bsf	___lldiv@quotient,0,c
  1455  00119A                     l532:
  1456  00119A  90D8               	bcf	status,0,c
  1457  00119C  3208               	rrcf	___lldiv@divisor+3,f,c
  1458  00119E  3207               	rrcf	___lldiv@divisor+2,f,c
  1459  0011A0  3206               	rrcf	___lldiv@divisor+1,f,c
  1460  0011A2  3205               	rrcf	___lldiv@divisor,f,c
  1461  0011A4  2E0D               	decfsz	___lldiv@counter,f,c
  1462  0011A6  D7E1               	goto	u290
  1463  0011A8                     l533:
  1464  0011A8  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1465  0011AC  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1466  0011B0  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1467  0011B4  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1468  0011B8  0012               	return		;funcret
  1469  0011BA                     __end_of___lldiv:
  1470                           	opt stack 0
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           prodh	equ	0xFF4
  1476                           prodl	equ	0xFF3
  1477                           intcon	equ	0xFF2
  1478                           wreg	equ	0xFE8
  1479                           indf2	equ	0xFDF
  1480                           fsr2h	equ	0xFDA
  1481                           fsr2l	equ	0xFD9
  1482                           status	equ	0xFD8
  1483                           tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           prodh	equ	0xFF4
  1488                           prodl	equ	0xFF3
  1489                           intcon	equ	0xFF2
  1490                           wreg	equ	0xFE8
  1491                           indf2	equ	0xFDF
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8
  1495                           
  1496                           	psect	rparam
  1497  0000                     tblptru	equ	0xFF8
  1498                           tblptrh	equ	0xFF7
  1499                           tblptrl	equ	0xFF6
  1500                           tablat	equ	0xFF5
  1501                           prodh	equ	0xFF4
  1502                           prodl	equ	0xFF3
  1503                           intcon	equ	0xFF2
  1504                           wreg	equ	0xFE8
  1505                           indf2	equ	0xFDF
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    23
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     29      32
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_I2C_Master_Init
    _putch->_lcdNibble
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1351
                                             21 COMRAM     8     8      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0     135
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     135
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _lcdNibble                                            2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     326
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _lcdNibble
   _putch
     _lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       1       0        0.8%
COMRAM              7F     1D      20       1       25.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      34        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Sep 15 00:37:57 2017

                         l71 1088                           l65 1078                           l66 110E  
                         l74 10E6                           l76 10EE                  __CFG_CPD$ON 000000  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l532 119A  
                        l533 11A8                          l528 1166                          l529 115A  
               __CFG_CPB$OFF 000000                          u330 107C                          u315 126C  
                        u325 12FC                          u245 11F4                          u326 12FE  
                        u246 11F6                          u255 1234                          u256 1236  
                        u290 116A                          u507 1338                          u517 11DC  
                        u527 11E6                          u537 121C                          u547 1226  
                        u477 1324                          u487 129A                          u497 12CE  
                        prod 000FF3                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         _LATA 000F89                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         _LATE 000F8D  
                main@counter 001C                         _main 101A                         _keys 1001  
                       indf2 000FDF                         fsr2l 000FD9                         prodh 000FF4  
                       prodl 000FF3                         start 0000                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000             __end_of_LCD_LEFT 1013  
      I2C_Master_Read@ackBit 0002             ?_I2C_Master_Init 000E             ?_I2C_Master_Read 0001  
           ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001                        ?_main 0001  
            __end_of___lldiv 11BA                        _PORTB 000F81                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_lcdInst 1340               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000                 main@keypress 001B  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000              __end_of_initLCD 12E0               __CFG_EBTRB$OFF 000000  
                      _putch 1318               __pbitbssCOMRAM 0100                        tablat 000FF5  
          _LCDinterruptState 001F                        status 000FD8  I2C_Master_Read@receivedByte 0003  
             __CFG_PBADEN$ON 000000              __initialization 1304                 __end_of_main 1138  
               __end_of_keys 1012               __CFG_OSC$HSPLL 000000            __end_of_LCD_RIGHT 1014  
                     ??_main 0016                __activetblptr 000001            ?_I2C_Master_Start 0001  
          ?_I2C_Master_Write 0002           ??_I2C_Master_Start 0002                       _ADCON0 000FC2  
                     _ADCON1 000FC1           ??_I2C_Master_Write 0004                       ?_putch 0001  
                     _SSPADD 000FC8                       _SSPBUF 000FC9               __CFG_XINST$OFF 000000  
             __CFG_STVREN$ON 000000                    ??___lldiv 0009                    ??_lcdInst 0003  
                  ??_initLCD 0004                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   __accesstop 0080  
    __end_of__initialization 130A                ___rparam_used 000001               __pcstackCOMRAM 0001  
              __end_of_putch 132C           __size_of_lcdNibble 007E                      ??_putch 0003  
       lcd@LCDinterruptState 001E                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
                    _SSPSTAT 000FC7            __end_of_lcdNibble 1238                      __Hparam 0000  
                    __Lparam 0000                      ___lldiv 1138                 __psmallconst 1000  
                    __pcinit 1304                      __ramtop 1000                      _lcdInst 132C  
                    __ptext0 101A                      __ptext1 1318                      __ptext2 1294  
                    __ptext3 132C                      __ptext4 11BA                      __ptext5 1352  
                    __ptext6 135C                      __ptext7 1364                      __ptext8 12E0  
                    __ptext9 1340                      _initLCD 1294                    _LCD_RIGHT 1013  
   __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Read 0024     __size_of_I2C_Master_Wait 0012  
   __size_of_I2C_Master_Stop 0008                      main@mem 0018         end_of_initialization 130A  
      __end_of_LCD_SIZE_HORZ 1016        __end_of_LCD_SIZE_VERT 1015    __size_of_I2C_Master_Start 0008  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0005              ___lldiv@counter 000D  
                  _PORTBbits 000F81                    _TRISCbits 000F94          start_initialization 1304  
          ??_I2C_Master_Init 0012            ??_I2C_Master_Read 0002            ??_I2C_Master_Wait 0001  
          ??_I2C_Master_Stop 0002     I2C_Master_Init@clockFreq 000E             __CFG_LPT1OSC$OFF 000000  
                __pbssCOMRAM 001E             _I2C_Master_Start 1364             _I2C_Master_Write 1352  
          __CFG_CCP2MX$PORTC 000000                    _lcdNibble 11BA                     ?___lldiv 0001  
                   ?_lcdInst 0001                     ?_initLCD 0001                  __smallconst 1000  
             __size_of_putch 0014                     _LCD_LEFT 1012                     _LATDbits 000F8C  
           __CFG_WDTPS$32768 000000                   ?_lcdNibble 0001                lcdNibble@data 0002  
              lcdNibble@temp 0001               _LCD_HORZ_LIMIT 1017                     __Hrparam 0000  
                   __Lrparam 0000                 __Lsmallconst 1000           __CFG_BOREN$SBORDIS 000000  
           __size_of___lldiv 0082             __size_of_lcdInst 0014              _I2C_Master_Init 1238  
            _I2C_Master_Read 12E0             __size_of_initLCD 004C              _I2C_Master_Wait 1340  
            _I2C_Master_Stop 135C       __end_of_LCD_HORZ_LIMIT 1018                     _main$158 0016  
                   __ptext10 1238                     __ptext11 1138               _LCD_VERT_LIMIT 1016  
              __size_of_main 011E                  ??_lcdNibble 0001                     main@SEND 0100  
                   main@data 001D  I2C_Master_Write@byteToWrite 0002                    putch@data 0003  
   __end_of_I2C_Master_Start 136C     __end_of_I2C_Master_Write 135C                   _INTCONbits 000FF2  
     __end_of_LCD_VERT_LIMIT 1017                _LCD_SIZE_HORZ 1015                _LCD_SIZE_VERT 1014  
           ___lldiv@dividend 0001      __end_of_I2C_Master_Init 1294      __end_of_I2C_Master_Read 1304  
    __end_of_I2C_Master_Wait 1352      __end_of_I2C_Master_Stop 1364                  lcdInst@data 0003  
           ___lldiv@quotient 0009                  _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
