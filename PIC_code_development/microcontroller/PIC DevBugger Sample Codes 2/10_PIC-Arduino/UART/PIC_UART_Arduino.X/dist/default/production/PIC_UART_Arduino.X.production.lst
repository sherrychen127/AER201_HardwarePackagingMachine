

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Sep 15 00:38:45 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.42
    19                           ; Generated 13/04/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4620 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  001294                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _UART
    58  001294  14                 	db	low _uart
    59  001295  00                 	db	high _uart
    60                           
    61                           ;initializer for main@F3010
    62  001296  48                 	db	72
    63                           
    64                           	psect	smallconst
    65  001000                     __psmallconst:
    66                           	opt stack 0
    67  001000  00                 	db	0
    68  001001                     _LCD_LEFT:
    69                           	opt stack 0
    70  001001  00                 	db	0
    71  001002                     __end_of_LCD_LEFT:
    72                           	opt stack 0
    73  001002                     _LCD_RIGHT:
    74                           	opt stack 0
    75  001002  01                 	db	1
    76  001003                     __end_of_LCD_RIGHT:
    77                           	opt stack 0
    78  001003                     _LCD_SIZE_VERT:
    79                           	opt stack 0
    80  001003  02                 	db	2
    81  001004                     __end_of_LCD_SIZE_VERT:
    82                           	opt stack 0
    83  001004                     _LCD_SIZE_HORZ:
    84                           	opt stack 0
    85  001004  10                 	db	16
    86  001005                     __end_of_LCD_SIZE_HORZ:
    87                           	opt stack 0
    88  001005                     _LCD_VERT_LIMIT:
    89                           	opt stack 0
    90  001005  02                 	db	2
    91  001006                     __end_of_LCD_VERT_LIMIT:
    92                           	opt stack 0
    93  001006                     _LCD_HORZ_LIMIT:
    94                           	opt stack 0
    95  001006  28                 	db	40
    96  001007                     __end_of_LCD_HORZ_LIMIT:
    97                           	opt stack 0
    98  0000                     _SPBRG	set	4015
    99  0000                     _RCREG	set	4014
   100  0000                     _RCSTAbits	set	4011
   101  0000                     _TXREG	set	4013
   102  0000                     _TXSTAbits	set	4012
   103  0000                     _ADCON1	set	4033
   104  0000                     _ADCON0	set	4034
   105  0000                     _TRISE	set	3990
   106  0000                     _TRISD	set	3989
   107  0000                     _TRISC	set	3988
   108  0000                     _TRISB	set	3987
   109  0000                     _TRISA	set	3986
   110  0000                     _LATE	set	3981
   111  0000                     _LATC	set	3979
   112  0000                     _LATB	set	3978
   113  0000                     _LATA	set	3977
   114  0000                     _INTCONbits	set	4082
   115  0000                     _LATD	set	3980
   116  0000                     _LATDbits	set	3980
   117  0000                     _TRISC7	set	31911
   118  0000                     _TRISC6	set	31910
   119  0000                     _RCIE	set	31981
   120  0000                     _RCIF	set	31989
   121  0000                     _TXIE	set	31980
   122  0000                     _TRMT	set	32097
   123  0000                     _TXIF	set	31988
   124                           
   125                           ; #config settings
   126  001007  00                 	db	0	; dummy byte at the end
   127  0000                     
   128                           	psect	cinit
   129  00125C                     __pcinit:
   130                           	opt stack 0
   131  00125C                     start_initialization:
   132                           	opt stack 0
   133  00125C                     __initialization:
   134                           	opt stack 0
   135                           
   136                           ; Initialize objects allocated to COMRAM (3 bytes)
   137                           ; load TBLPTR registers with __pidataCOMRAM
   138  00125C  0E94               	movlw	low __pidataCOMRAM
   139  00125E  6EF6               	movwf	tblptrl,c
   140  001260  0E12               	movlw	high __pidataCOMRAM
   141  001262  6EF7               	movwf	tblptrh,c
   142  001264  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   143  001266  6EF8               	movwf	tblptru,c
   144  001268  0009               	tblrd		*+	;fetch initializer
   145  00126A  CFF5 F039          	movff	tablat,__pdataCOMRAM
   146  00126E  0009               	tblrd		*+	;fetch initializer
   147  001270  CFF5 F03A          	movff	tablat,__pdataCOMRAM+1
   148  001274  0009               	tblrd		*+	;fetch initializer
   149  001276  CFF5 F03B          	movff	tablat,__pdataCOMRAM+2
   150                           
   151                           ; Clear objects allocated to COMRAM (31 bytes)
   152  00127A  EE00  F001         	lfsr	0,__pbssCOMRAM
   153  00127E  0E1F               	movlw	31
   154  001280                     clear_0:
   155  001280  6AEE               	clrf	postinc0,c
   156  001282  06E8               	decf	wreg,f,c
   157  001284  E1FD               	bnz	clear_0
   158  001286                     end_of_initialization:
   159                           	opt stack 0
   160  001286                     __end_of__initialization:
   161                           	opt stack 0
   162  001286  0E00               	movlw	low (__Lsmallconst shr (0+16))
   163  001288  6EF8               	movwf	tblptru,c
   164  00128A  0E10               	movlw	high __Lsmallconst
   165  00128C  6EF7               	movwf	tblptrh,c
   166  00128E  0100               	movlb	0
   167  001290  EFF8  F008         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           
   175                           	psect	bssCOMRAM
   176  000001                     __pbssCOMRAM:
   177                           	opt stack 0
   178  000001                     _UARTinterruptState:
   179                           	opt stack 0
   180  000001                     	ds	1
   181  000002                     	ds	1
   182  000003                     _LCDinterruptState:
   183                           	opt stack 0
   184  000003                     	ds	1
   185  000004                     _arr_dataRX:
   186                           	opt stack 0
   187  000004                     	ds	16
   188  000014                     _uart:
   189                           	opt stack 0
   190  000014                     	ds	12
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	dataCOMRAM
   199  000039                     __pdataCOMRAM:
   200                           	opt stack 0
   201  000039                     _UART:
   202                           	opt stack 0
   203  000039                     	ds	2
   204  00003B                     main@F3010:
   205                           	opt stack 0
   206  00003B                     	ds	1
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	cstackCOMRAM
   215  000020                     __pcstackCOMRAM:
   216                           	opt stack 0
   217  000020                     ?___aldiv:
   218                           	opt stack 0
   219  000020                     uartTransmitBlocking@data:
   220                           	opt stack 0
   221  000020                     ___aldiv@dividend:
   222                           	opt stack 0
   223                           
   224                           ; 4 bytes @ 0x0
   225  000020                     	ds	2
   226  000022                     uartTransmitBlocking@numBytes:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x2
   230  000022                     	ds	1
   231  000023                     ??_uartTransmitBlocking:
   232                           
   233                           ; 1 bytes @ 0x3
   234  000023                     	ds	1
   235  000024                     uartTransmitBlocking@numTransmits:
   236                           	opt stack 0
   237  000024                     ___aldiv@divisor:
   238                           	opt stack 0
   239                           
   240                           ; 4 bytes @ 0x4
   241  000024                     	ds	4
   242  000028                     ___aldiv@counter:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x8
   246  000028                     	ds	1
   247  000029                     ___aldiv@sign:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x9
   251  000029                     	ds	1
   252  00002A                     ___aldiv@quotient:
   253                           	opt stack 0
   254                           
   255                           ; 4 bytes @ 0xA
   256  00002A                     	ds	4
   257  00002E                     UART_Init@baud:
   258                           	opt stack 0
   259                           
   260                           ; 4 bytes @ 0xE
   261  00002E                     	ds	4
   262  000032                     ??_UART_Init:
   263                           
   264                           ; 1 bytes @ 0x12
   265  000032                     	ds	4
   266  000036                     ??_main:
   267                           
   268                           ; 1 bytes @ 0x16
   269  000036                     	ds	2
   270  000038                     main@arr:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x18
   274  000038                     	ds	1
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 28 in file "main.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;  arr             1   24[COMRAM] unsigned char [1]
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;Total ram usage:        3 bytes
   306 ;; Hardware stack levels required when called:    2
   307 ;; This function calls:
   308 ;;		_UART_Init
   309 ;;		_uartTransmitBlocking
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text0
   316  0011F0                     __ptext0:
   317                           	opt stack 0
   318  0011F0                     _main:
   319                           	opt stack 29
   320                           
   321                           ;main.c: 34: LATA = 0x00;
   322                           
   323                           ;incstack = 0
   324  0011F0  0E00               	movlw	0
   325  0011F2  6E89               	movwf	3977,c	;volatile
   326                           
   327                           ;main.c: 35: LATB = 0x00;
   328  0011F4  0E00               	movlw	0
   329  0011F6  6E8A               	movwf	3978,c	;volatile
   330                           
   331                           ;main.c: 36: LATC = 0x00;
   332  0011F8  0E00               	movlw	0
   333  0011FA  6E8B               	movwf	3979,c	;volatile
   334                           
   335                           ;main.c: 37: LATD = 0x00;
   336  0011FC  0E00               	movlw	0
   337  0011FE  6E8C               	movwf	3980,c	;volatile
   338                           
   339                           ;main.c: 38: LATE = 0x00;
   340  001200  0E00               	movlw	0
   341  001202  6E8D               	movwf	3981,c	;volatile
   342                           
   343                           ;main.c: 42: TRISA = 0xFF;
   344  001204  6892               	setf	3986,c	;volatile
   345                           
   346                           ;main.c: 43: TRISB = 0xFF;
   347  001206  6893               	setf	3987,c	;volatile
   348                           
   349                           ;main.c: 44: TRISC = 0b10000000;
   350  001208  0E80               	movlw	128
   351  00120A  6E94               	movwf	3988,c	;volatile
   352                           
   353                           ;main.c: 48: TRISD = 0x00;
   354  00120C  0E00               	movlw	0
   355  00120E  6E95               	movwf	3989,c	;volatile
   356                           
   357                           ;main.c: 49: TRISE = 0x00;
   358  001210  0E00               	movlw	0
   359  001212  6E96               	movwf	3990,c	;volatile
   360                           
   361                           ;main.c: 52: ADCON0 = 0x00;
   362  001214  0E00               	movlw	0
   363  001216  6EC2               	movwf	4034,c	;volatile
   364                           
   365                           ;main.c: 53: ADCON1 = 0b00001111;
   366  001218  0E0F               	movlw	15
   367  00121A  6EC1               	movwf	4033,c	;volatile
   368                           
   369                           ;main.c: 57: UART_Init(9600);
   370  00121C  0E80               	movlw	128
   371  00121E  6E2E               	movwf	UART_Init@baud,c
   372  001220  0E25               	movlw	37
   373  001222  6E2F               	movwf	UART_Init@baud+1,c
   374  001224  0E00               	movlw	0
   375  001226  6E30               	movwf	UART_Init@baud+2,c
   376  001228  0E00               	movlw	0
   377  00122A  6E31               	movwf	UART_Init@baud+3,c
   378  00122C  ECB7  F008         	call	_UART_Init	;wreg free
   379                           
   380                           ;main.c: 60: unsigned char arr[1] = {'H'};
   381  001230  C03B  F038         	movff	main@F3010,main@arr
   382  001234                     l1208:
   383                           
   384                           ;main.c: 63: uartTransmitBlocking(arr, 1);
   385  001234  0E38               	movlw	low main@arr
   386  001236  6E20               	movwf	uartTransmitBlocking@data,c
   387  001238  0E00               	movlw	high main@arr
   388  00123A  6E21               	movwf	uartTransmitBlocking@data+1,c
   389  00123C  0E01               	movlw	1
   390  00123E  6E22               	movwf	uartTransmitBlocking@numBytes,c
   391  001240  EC6A  F008         	call	_uartTransmitBlocking	;wreg free
   392                           
   393                           ;main.c: 64: _delay((unsigned long)((1000)*(40000000/4000.0)));
   394  001244  0E33               	movlw	51
   395  001246  6E37               	movwf	(??_main+1)& (0+255),c
   396  001248  0EBB               	movlw	187
   397  00124A  6E36               	movwf	??_main& (0+255),c
   398  00124C  0EE0               	movlw	224
   399  00124E                     u417:
   400  00124E  2EE8               	decfsz	wreg,f,c
   401  001250  D7FE               	bra	u417
   402  001252  2E36               	decfsz	??_main& (0+255),f,c
   403  001254  D7FC               	bra	u417
   404  001256  2E37               	decfsz	(??_main+1)& (0+255),f,c
   405  001258  D7FA               	bra	u417
   406  00125A  D7EC               	goto	l1208
   407  00125C                     __end_of_main:
   408                           	opt stack 0
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           
   416 ;; *************** function _uartTransmitBlocking *****************
   417 ;; Defined at:
   418 ;;		line 22 in file "UART_PIC.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  data            2    0[COMRAM] PTR unsigned char 
   421 ;;		 -> main@arr(1), 
   422 ;;  numBytes        1    2[COMRAM] unsigned char 
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  numTransmits    1    4[COMRAM] unsigned char 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   434 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;Total ram usage:        5 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text1
   448  0010D4                     __ptext1:
   449                           	opt stack 0
   450  0010D4                     _uartTransmitBlocking:
   451                           	opt stack 30
   452  0010D4                     l1172:
   453  0010D4  EE20 F008          	lfsr	2,8
   454  0010D8  5039               	movf	_UART,w,c
   455  0010DA  26D9               	addwf	fsr2l,f,c
   456  0010DC  503A               	movf	_UART+1,w,c
   457  0010DE  22DA               	addwfc	fsr2h,f,c
   458  0010E0  50DF               	movf	indf2,w,c
   459  0010E2  B4D8               	btfsc	status,2,c
   460  0010E4  D7F7               	goto	l1172
   461                           
   462                           ;UART_PIC.c: 39: UART -> _stateTX = UART_STATE_BUSY;
   463  0010E6  EE20 F008          	lfsr	2,8
   464  0010EA  5039               	movf	_UART,w,c
   465  0010EC  26D9               	addwf	fsr2l,f,c
   466  0010EE  503A               	movf	_UART+1,w,c
   467  0010F0  22DA               	addwfc	fsr2h,f,c
   468  0010F2  0E00               	movlw	0
   469  0010F4  6EDF               	movwf	indf2,c
   470                           
   471                           ;UART_PIC.c: 42: unsigned char numTransmits = 0;
   472  0010F6  0E00               	movlw	0
   473  0010F8  6E24               	movwf	uartTransmitBlocking@numTransmits,c
   474                           
   475                           ;UART_PIC.c: 45: TXSTAbits.TXEN = 1; _delay((unsigned long)((5)*(40000000/4000.0)));;
   476  0010FA  8AAC               	bsf	4012,5,c	;volatile
   477  0010FC  0E41               	movlw	65
   478  0010FE  6E23               	movwf	??_uartTransmitBlocking& (0+255),c
   479  001100  0EEE               	movlw	238
   480  001102                     u427:
   481  001102  2EE8               	decfsz	wreg,f,c
   482  001104  D7FE               	bra	u427
   483  001106  2E23               	decfsz	??_uartTransmitBlocking& (0+255),f,c
   484  001108  D7FC               	bra	u427
   485  00110A  D000               	nop2	
   486                           
   487                           ;UART_PIC.c: 48: while(numTransmits < numBytes){
   488  00110C  D023               	goto	l1194
   489  00110E                     l1182:
   490  00110E  B2AC               	btfsc	4012,1,c	;volatile
   491  001110  D002               	goto	u370
   492  001112  0E01               	movlw	1
   493  001114  D001               	goto	u372
   494  001116                     u370:
   495  001116  0E00               	movlw	0
   496  001118                     u372:
   497  001118  6E23               	movwf	??_uartTransmitBlocking& (0+255),c
   498  00111A  B89E               	btfsc	3998,4,c	;volatile
   499  00111C  D002               	goto	u380
   500  00111E  0E01               	movlw	1
   501  001120  D001               	goto	u382
   502  001122                     u380:
   503  001122  0E00               	movlw	0
   504  001124                     u382:
   505  001124  1023               	iorwf	??_uartTransmitBlocking,w,c
   506  001126  E1F3               	bnz	l1182
   507                           
   508                           ;UART_PIC.c: 53: __nop();
   509  001128  F000               	nop	
   510                           
   511                           ;UART_PIC.c: 56: UARTinterruptState = INTCONbits.GIE;
   512  00112A  0E00               	movlw	0
   513  00112C  BEF2               	btfsc	intcon,7,c	;volatile
   514  00112E  0E01               	movlw	1
   515  001130  6E01               	movwf	_UARTinterruptState,c	;volatile
   516                           
   517                           ;UART_PIC.c: 57: (INTCONbits.GIE = 0);
   518  001132  9EF2               	bcf	intcon,7,c	;volatile
   519                           
   520                           ;UART_PIC.c: 58: TXREG = data[numTransmits];
   521  001134  5024               	movf	uartTransmitBlocking@numTransmits,w,c
   522  001136  0D01               	mullw	1
   523  001138  50F3               	movf	prodl,w,c
   524  00113A  2420               	addwf	uartTransmitBlocking@data,w,c
   525  00113C  6ED9               	movwf	fsr2l,c
   526  00113E  50F4               	movf	prodh,w,c
   527  001140  2021               	addwfc	uartTransmitBlocking@data+1,w,c
   528  001142  6EDA               	movwf	fsr2h,c
   529  001144  50DF               	movf	indf2,w,c
   530  001146  6EAD               	movwf	4013,c	;volatile
   531                           
   532                           ;UART_PIC.c: 59: INTCONbits.GIE = UARTinterruptState;
   533  001148  B001               	btfsc	_UARTinterruptState,0,c	;volatile
   534  00114A  D002               	bra	u395
   535  00114C  9EF2               	bcf	intcon,7,c	;volatile
   536  00114E  D001               	bra	u396
   537  001150                     u395:
   538  001150  8EF2               	bsf	intcon,7,c	;volatile
   539  001152                     u396:
   540                           
   541                           ;UART_PIC.c: 61: numTransmits++;
   542  001152  2A24               	incf	uartTransmitBlocking@numTransmits,f,c
   543  001154                     l1194:
   544  001154  5022               	movf	uartTransmitBlocking@numBytes,w,c
   545  001156  5C24               	subwf	uartTransmitBlocking@numTransmits,w,c
   546  001158  A0D8               	btfss	status,0,c
   547  00115A  D7D9               	goto	l1182
   548                           
   549                           ;UART_PIC.c: 65: }
   550                           ;UART_PIC.c: 68: UART -> _stateTX = UART_STATE_READY;
   551  00115C  EE20 F008          	lfsr	2,8
   552  001160  5039               	movf	_UART,w,c
   553  001162  26D9               	addwf	fsr2l,f,c
   554  001164  503A               	movf	_UART+1,w,c
   555  001166  22DA               	addwfc	fsr2h,f,c
   556  001168  0E01               	movlw	1
   557  00116A  6EDF               	movwf	indf2,c
   558  00116C  0012               	return		;funcret
   559  00116E                     __end_of_uartTransmitBlocking:
   560                           	opt stack 0
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           prodh	equ	0xFF4
   566                           prodl	equ	0xFF3
   567                           intcon	equ	0xFF2
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           indf2	equ	0xFDF
   571                           fsr2h	equ	0xFDA
   572                           fsr2l	equ	0xFD9
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _UART_Init *****************
   576 ;; Defined at:
   577 ;;		line 200 in file "UART_PIC.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  baud            4   14[COMRAM] long 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:        8 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    1
   598 ;; This function calls:
   599 ;;		___aldiv
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text2
   606  00116E                     __ptext2:
   607                           	opt stack 0
   608  00116E                     _UART_Init:
   609                           	opt stack 29
   610                           
   611                           ;UART_PIC.c: 213: SPBRG = (unsigned char)((40000000 / (64 * baud)) - 1);
   612                           
   613                           ;incstack = 0
   614  00116E  0E00               	movlw	0
   615  001170  6E20               	movwf	___aldiv@dividend,c
   616  001172  0E5A               	movlw	90
   617  001174  6E21               	movwf	___aldiv@dividend+1,c
   618  001176  0E62               	movlw	98
   619  001178  6E22               	movwf	___aldiv@dividend+2,c
   620  00117A  0E02               	movlw	2
   621  00117C  6E23               	movwf	___aldiv@dividend+3,c
   622  00117E  C02E  F032         	movff	UART_Init@baud,??_UART_Init
   623  001182  C02F  F033         	movff	UART_Init@baud+1,??_UART_Init+1
   624  001186  C030  F034         	movff	UART_Init@baud+2,??_UART_Init+2
   625  00118A  C031  F035         	movff	UART_Init@baud+3,??_UART_Init+3
   626  00118E  0E06               	movlw	6
   627  001190                     u355:
   628  001190  90D8               	bcf	status,0,c
   629  001192  3632               	rlcf	??_UART_Init,f,c
   630  001194  3633               	rlcf	??_UART_Init+1,f,c
   631  001196  3634               	rlcf	??_UART_Init+2,f,c
   632  001198  3635               	rlcf	??_UART_Init+3,f,c
   633  00119A  2EE8               	decfsz	wreg,f,c
   634  00119C  D7F9               	goto	u355
   635  00119E  C032  F024         	movff	??_UART_Init,___aldiv@divisor
   636  0011A2  C033  F025         	movff	??_UART_Init+1,___aldiv@divisor+1
   637  0011A6  C034  F026         	movff	??_UART_Init+2,___aldiv@divisor+2
   638  0011AA  C035  F027         	movff	??_UART_Init+3,___aldiv@divisor+3
   639  0011AE  EC04  F008         	call	___aldiv	;wreg free
   640  0011B2  0420               	decf	?___aldiv,w,c
   641  0011B4  6EAF               	movwf	4015,c	;volatile
   642                           
   643                           ;UART_PIC.c: 216: TXSTAbits.TX9 = 0;
   644  0011B6  9CAC               	bcf	4012,6,c	;volatile
   645                           
   646                           ;UART_PIC.c: 217: TXSTAbits.SYNC = 0;
   647  0011B8  98AC               	bcf	4012,4,c	;volatile
   648                           
   649                           ;UART_PIC.c: 218: TXSTAbits.TXEN = 1;
   650  0011BA  8AAC               	bsf	4012,5,c	;volatile
   651                           
   652                           ;UART_PIC.c: 221: RCSTAbits.RX9 = 0;
   653  0011BC  9CAB               	bcf	4011,6,c	;volatile
   654                           
   655                           ;UART_PIC.c: 222: RCSTAbits.CREN = 1;
   656  0011BE  88AB               	bsf	4011,4,c	;volatile
   657                           
   658                           ;UART_PIC.c: 225: UART -> _stateTX = UART_STATE_READY;
   659  0011C0  EE20 F008          	lfsr	2,8
   660  0011C4  5039               	movf	_UART,w,c
   661  0011C6  26D9               	addwf	fsr2l,f,c
   662  0011C8  503A               	movf	_UART+1,w,c
   663  0011CA  22DA               	addwfc	fsr2h,f,c
   664  0011CC  0E01               	movlw	1
   665  0011CE  6EDF               	movwf	indf2,c
   666                           
   667                           ;UART_PIC.c: 226: UART -> _stateRX = UART_STATE_READY;
   668  0011D0  EE20 F009          	lfsr	2,9
   669  0011D4  5039               	movf	_UART,w,c
   670  0011D6  26D9               	addwf	fsr2l,f,c
   671  0011D8  503A               	movf	_UART+1,w,c
   672  0011DA  22DA               	addwfc	fsr2h,f,c
   673  0011DC  0E01               	movlw	1
   674  0011DE  6EDF               	movwf	indf2,c
   675                           
   676                           ;UART_PIC.c: 229: uart._dataRX = arr_dataRX;
   677  0011E0  0E04               	movlw	low _arr_dataRX
   678  0011E2  6E18               	movwf	_uart+4,c	;volatile
   679  0011E4  0E00               	movlw	high _arr_dataRX
   680  0011E6  6E19               	movwf	_uart+5,c	;volatile
   681                           
   682                           ;UART_PIC.c: 232: TRISC6 = 0;
   683  0011E8  9C94               	bcf	3988,6,c	;volatile
   684                           
   685                           ;UART_PIC.c: 233: TRISC7 = 1;
   686  0011EA  8E94               	bsf	3988,7,c	;volatile
   687                           
   688                           ;UART_PIC.c: 236: RCSTAbits.SPEN = 1;
   689  0011EC  8EAB               	bsf	4011,7,c	;volatile
   690  0011EE  0012               	return		;funcret
   691  0011F0                     __end_of_UART_Init:
   692                           	opt stack 0
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           prodh	equ	0xFF4
   698                           prodl	equ	0xFF3
   699                           intcon	equ	0xFF2
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           indf2	equ	0xFDF
   703                           fsr2h	equ	0xFDA
   704                           fsr2l	equ	0xFD9
   705                           status	equ	0xFD8
   706                           
   707 ;; *************** function ___aldiv *****************
   708 ;; Defined at:
   709 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;  dividend        4    0[COMRAM] long 
   712 ;;  divisor         4    4[COMRAM] long 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  quotient        4   10[COMRAM] long 
   715 ;;  sign            1    9[COMRAM] unsigned char 
   716 ;;  counter         1    8[COMRAM] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  4    0[COMRAM] long 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   726 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;Total ram usage:       14 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_UART_Init
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text3
   740  001008                     __ptext3:
   741                           	opt stack 0
   742  001008                     ___aldiv:
   743                           	opt stack 29
   744                           
   745                           ;incstack = 0
   746  001008  0E00               	movlw	0
   747  00100A  6E29               	movwf	___aldiv@sign,c
   748  00100C  AE27               	btfss	___aldiv@divisor+3,7,c
   749  00100E  D00A               	goto	l1110
   750  001010  1E27               	comf	___aldiv@divisor+3,f,c
   751  001012  1E26               	comf	___aldiv@divisor+2,f,c
   752  001014  1E25               	comf	___aldiv@divisor+1,f,c
   753  001016  6C24               	negf	___aldiv@divisor,c
   754  001018  0E00               	movlw	0
   755  00101A  2225               	addwfc	___aldiv@divisor+1,f,c
   756  00101C  2226               	addwfc	___aldiv@divisor+2,f,c
   757  00101E  2227               	addwfc	___aldiv@divisor+3,f,c
   758  001020  0E01               	movlw	1
   759  001022  6E29               	movwf	___aldiv@sign,c
   760  001024                     l1110:
   761  001024  AE23               	btfss	___aldiv@dividend+3,7,c
   762  001026  D00A               	goto	l1116
   763  001028  1E23               	comf	___aldiv@dividend+3,f,c
   764  00102A  1E22               	comf	___aldiv@dividend+2,f,c
   765  00102C  1E21               	comf	___aldiv@dividend+1,f,c
   766  00102E  6C20               	negf	___aldiv@dividend,c
   767  001030  0E00               	movlw	0
   768  001032  2221               	addwfc	___aldiv@dividend+1,f,c
   769  001034  2222               	addwfc	___aldiv@dividend+2,f,c
   770  001036  2223               	addwfc	___aldiv@dividend+3,f,c
   771  001038  0E01               	movlw	1
   772  00103A  1A29               	xorwf	___aldiv@sign,f,c
   773  00103C                     l1116:
   774  00103C  0E00               	movlw	0
   775  00103E  6E2A               	movwf	___aldiv@quotient,c
   776  001040  0E00               	movlw	0
   777  001042  6E2B               	movwf	___aldiv@quotient+1,c
   778  001044  0E00               	movlw	0
   779  001046  6E2C               	movwf	___aldiv@quotient+2,c
   780  001048  0E00               	movlw	0
   781  00104A  6E2D               	movwf	___aldiv@quotient+3,c
   782  00104C  5024               	movf	___aldiv@divisor,w,c
   783  00104E  1025               	iorwf	___aldiv@divisor+1,w,c
   784  001050  1026               	iorwf	___aldiv@divisor+2,w,c
   785  001052  1027               	iorwf	___aldiv@divisor+3,w,c
   786  001054  B4D8               	btfsc	status,2,c
   787  001056  D02A               	goto	l1138
   788  001058  0E01               	movlw	1
   789  00105A  6E28               	movwf	___aldiv@counter,c
   790  00105C  D006               	goto	l1124
   791  00105E                     l1122:
   792  00105E  90D8               	bcf	status,0,c
   793  001060  3624               	rlcf	___aldiv@divisor,f,c
   794  001062  3625               	rlcf	___aldiv@divisor+1,f,c
   795  001064  3626               	rlcf	___aldiv@divisor+2,f,c
   796  001066  3627               	rlcf	___aldiv@divisor+3,f,c
   797  001068  2A28               	incf	___aldiv@counter,f,c
   798  00106A                     l1124:
   799  00106A  AE27               	btfss	___aldiv@divisor+3,7,c
   800  00106C  D7F8               	goto	l1122
   801  00106E                     l1126:
   802  00106E  90D8               	bcf	status,0,c
   803  001070  362A               	rlcf	___aldiv@quotient,f,c
   804  001072  362B               	rlcf	___aldiv@quotient+1,f,c
   805  001074  362C               	rlcf	___aldiv@quotient+2,f,c
   806  001076  362D               	rlcf	___aldiv@quotient+3,f,c
   807  001078  5024               	movf	___aldiv@divisor,w,c
   808  00107A  5C20               	subwf	___aldiv@dividend,w,c
   809  00107C  5025               	movf	___aldiv@divisor+1,w,c
   810  00107E  5821               	subwfb	___aldiv@dividend+1,w,c
   811  001080  5026               	movf	___aldiv@divisor+2,w,c
   812  001082  5822               	subwfb	___aldiv@dividend+2,w,c
   813  001084  5027               	movf	___aldiv@divisor+3,w,c
   814  001086  5823               	subwfb	___aldiv@dividend+3,w,c
   815  001088  A0D8               	btfss	status,0,c
   816  00108A  D009               	goto	l1134
   817  00108C  5024               	movf	___aldiv@divisor,w,c
   818  00108E  5E20               	subwf	___aldiv@dividend,f,c
   819  001090  5025               	movf	___aldiv@divisor+1,w,c
   820  001092  5A21               	subwfb	___aldiv@dividend+1,f,c
   821  001094  5026               	movf	___aldiv@divisor+2,w,c
   822  001096  5A22               	subwfb	___aldiv@dividend+2,f,c
   823  001098  5027               	movf	___aldiv@divisor+3,w,c
   824  00109A  5A23               	subwfb	___aldiv@dividend+3,f,c
   825  00109C  802A               	bsf	___aldiv@quotient,0,c
   826  00109E                     l1134:
   827  00109E  90D8               	bcf	status,0,c
   828  0010A0  3227               	rrcf	___aldiv@divisor+3,f,c
   829  0010A2  3226               	rrcf	___aldiv@divisor+2,f,c
   830  0010A4  3225               	rrcf	___aldiv@divisor+1,f,c
   831  0010A6  3224               	rrcf	___aldiv@divisor,f,c
   832  0010A8  2E28               	decfsz	___aldiv@counter,f,c
   833  0010AA  D7E1               	goto	l1126
   834  0010AC                     l1138:
   835  0010AC  5029               	movf	___aldiv@sign,w,c
   836  0010AE  B4D8               	btfsc	status,2,c
   837  0010B0  D008               	goto	l1142
   838  0010B2  1E2D               	comf	___aldiv@quotient+3,f,c
   839  0010B4  1E2C               	comf	___aldiv@quotient+2,f,c
   840  0010B6  1E2B               	comf	___aldiv@quotient+1,f,c
   841  0010B8  6C2A               	negf	___aldiv@quotient,c
   842  0010BA  0E00               	movlw	0
   843  0010BC  222B               	addwfc	___aldiv@quotient+1,f,c
   844  0010BE  222C               	addwfc	___aldiv@quotient+2,f,c
   845  0010C0  222D               	addwfc	___aldiv@quotient+3,f,c
   846  0010C2                     l1142:
   847  0010C2  C02A  F020         	movff	___aldiv@quotient,?___aldiv
   848  0010C6  C02B  F021         	movff	___aldiv@quotient+1,?___aldiv+1
   849  0010CA  C02C  F022         	movff	___aldiv@quotient+2,?___aldiv+2
   850  0010CE  C02D  F023         	movff	___aldiv@quotient+3,?___aldiv+3
   851  0010D2  0012               	return	
   852  0010D4                     __end_of___aldiv:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           prodh	equ	0xFF4
   859                           prodl	equ	0xFF3
   860                           intcon	equ	0xFF2
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           indf2	equ	0xFDF
   864                           fsr2h	equ	0xFDA
   865                           fsr2l	equ	0xFD9
   866                           status	equ	0xFD8
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           prodh	equ	0xFF4
   872                           prodl	equ	0xFF3
   873                           intcon	equ	0xFF2
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           indf2	equ	0xFDF
   877                           fsr2h	equ	0xFDA
   878                           fsr2l	equ	0xFD9
   879                           status	equ	0xFD8
   880                           
   881                           	psect	rparam
   882  0000                     tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           prodh	equ	0xFF4
   887                           prodl	equ	0xFF3
   888                           intcon	equ	0xFF2
   889                           postinc0	equ	0xFEE
   890                           wreg	equ	0xFE8
   891                           indf2	equ	0xFDF
   892                           fsr2h	equ	0xFDA
   893                           fsr2l	equ	0xFD9
   894                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    6
    Data        3
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     25      59
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    uartTransmitBlocking@data	PTR unsigned char  size(2) Largest target is 1
		 -> main@arr(COMRAM[1]), 

    UART._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(COMRAM[16]), 

    UART._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    UART	PTR volatile struct . size(2) Largest target is 14
		 -> uart(COMRAM[12]), 

    S172$_dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(COMRAM[16]), 

    uart._dataRX	PTR unsigned char  size(2) Largest target is 16
		 -> arr_dataRX(COMRAM[16]), 

    S172$_dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    uart._dataTX	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     816
                                             22 COMRAM     3     3      0
                          _UART_Init
               _uartTransmitBlocking
 ---------------------------------------------------------------------------------
 (1) _uartTransmitBlocking                                 5     2      3     242
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            8     4      4     550
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _uartTransmitBlocking

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     19      3B       1       46.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      34        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Sep 15 00:38:45 2017

                     __CFG_CPD$ON 000000                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                    __CFG_CPB$OFF 000000                               u417 124E  
                             u370 1116                               u355 1190  
                             u427 1102                               u380 1122  
                             u372 1118                               u382 1124  
                             u395 1150                               u396 1152  
                             wreg 000FE8      uartTransmitBlocking@numBytes 0022  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            l1110 1024                              l1122 105E  
                            l1124 106A                              l1116 103C  
                            l1142 10C2                              l1134 109E  
                            l1126 106E                              l1208 1234  
                            l1138 10AC                              l1172 10D4  
                            l1182 110E                              l1194 1154  
    __end_of_uartTransmitBlocking 116E                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              _LATE 000F8D  
                            _RCIE 007CED                              _RCIF 007CF5  
                            _UART 0039                              _TRMT 007D61  
                            _TXIE 007CEC                              _TXIF 007CF4  
                            _main 11F0                              _uart 0014  
                            fsr2h 000FDA                              indf2 000FDF  
                            fsr2l 000FD9                              prodh 000FF4  
                            prodl 000FF3                              start 0000  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                  __end_of_LCD_LEFT 1002  
                 __end_of___aldiv 10D4                             ?_main 0020  
                           _RCREG 000FAE                             _SPBRG 000FAF  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             _TXREG 000FAD  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
              __size_of_UART_Init 0082                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             tablat 000FF5  
               _LCDinterruptState 0003                             status 000FD8  
                  __CFG_PBADEN$ON 000000                   __initialization 125C  
                    __end_of_main 125C                    __CFG_OSC$HSPLL 000000  
               __end_of_LCD_RIGHT 1003                            ??_main 0036  
                   __activetblptr 000001                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _TRISC6 007CA6  
                          _TRISC7 007CA7                    __CFG_XINST$OFF 000000  
               __end_of_UART_Init 11F0                         ??___aldiv 0028  
                  __CFG_STVREN$ON 000000              _uartTransmitBlocking 10D4  
                          clear_0 1280                      __pdataCOMRAM 0039  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                      __accesstop 0080           __end_of__initialization 1286  
                   ___rparam_used 000001                    __pcstackCOMRAM 0020  
           ?_uartTransmitBlocking 0020                        _arr_dataRX 0004  
            lcd@LCDinterruptState 0002                           __Hparam 0000  
                         __Lparam 0000                           ___aldiv 1008  
          ??_uartTransmitBlocking 0023                      __psmallconst 1000  
                         __pcinit 125C                           __ramtop 1000  
                         __ptext0 11F0                           __ptext1 10D4  
                         __ptext2 116E                           __ptext3 1008  
                ___aldiv@dividend 0020                         _LCD_RIGHT 1002  
                         main@arr 0038              end_of_initialization 1286  
           __end_of_LCD_SIZE_HORZ 1005             __end_of_LCD_SIZE_VERT 1004  
                       _RCSTAbits 000FAB                  ___aldiv@quotient 002A  
                         postinc0 000FEE                         _UART_Init 116E  
                       _TXSTAbits 000FAC                        ?_UART_Init 002E  
                   __pidataCOMRAM 1294               start_initialization 125C  
                __CFG_LPT1OSC$OFF 000000  uartTransmitBlocking@numTransmits 0024  
                     __pbssCOMRAM 0001                 __CFG_CCP2MX$PORTC 000000  
              _UARTinterruptState 0001                     UART_Init@baud 002E  
                        ?___aldiv 0020                       ??_UART_Init 0032  
                     __smallconst 1000                          _LCD_LEFT 1001  
                 ___aldiv@divisor 0024                   ___aldiv@counter 0028  
                        _LATDbits 000F8C                  __CFG_WDTPS$32768 000000  
                       main@F3010 003B     __size_of_uartTransmitBlocking 009A  
                  _LCD_HORZ_LIMIT 1006                          __Hrparam 0000  
                        __Lrparam 0000                      __Lsmallconst 1000  
              __CFG_BOREN$SBORDIS 000000                  __size_of___aldiv 00CC  
          __end_of_LCD_HORZ_LIMIT 1007                    _LCD_VERT_LIMIT 1005  
                   __size_of_main 006C                        _INTCONbits 000FF2  
          __end_of_LCD_VERT_LIMIT 1006                     _LCD_SIZE_HORZ 1004  
                   _LCD_SIZE_VERT 1003          uartTransmitBlocking@data 0020  
                    ___aldiv@sign 0029  
