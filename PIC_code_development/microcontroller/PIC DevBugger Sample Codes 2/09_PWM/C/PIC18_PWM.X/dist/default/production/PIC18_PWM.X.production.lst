

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Sep 13 13:56:37 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24  0000                     
    25                           ; Version 1.43
    26                           ; Generated 25/07/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	nvCOMRAM
    61  00003F                     __pnvCOMRAM:
    62                           	opt stack 0
    63  00003F                     _freq:
    64                           	opt stack 0
    65  00003F                     	ds	4
    66  0000                     _LATB	set	3978
    67  0000                     _TRISB	set	3987
    68  0000                     _TRISC	set	3988
    69  0000                     _OSCTUNEbits	set	3995
    70  0000                     _OSCCON	set	4051
    71  0000                     _TRISCbits	set	3988
    72  0000                     _CCPR2L	set	4027
    73  0000                     _CCPR1L	set	4030
    74  0000                     _PR2	set	4043
    75  0000                     _CCP2M0	set	32208
    76  0000                     _CCP2M1	set	32209
    77  0000                     _CCP2M2	set	32210
    78  0000                     _CCP2M3	set	32211
    79  0000                     _TMR2ON	set	32338
    80  0000                     _CCP1M0	set	32232
    81  0000                     _CCP1M1	set	32233
    82  0000                     _CCP1M2	set	32234
    83  0000                     _CCP1M3	set	32235
    84  0000                     _P1M0	set	32238
    85  0000                     _P1M1	set	32239
    86  0000                     _CCP2Y	set	32212
    87  0000                     _CCP2X	set	32213
    88  0000                     _CCP1Y	set	32236
    89  0000                     _CCP1X	set	32237
    90                           
    91                           ; #config settings
    92  0000                     
    93                           	psect	cinit
    94  00F94E                     __pcinit:
    95                           	opt stack 0
    96  00F94E                     start_initialization:
    97                           	opt stack 0
    98  00F94E                     __initialization:
    99                           	opt stack 0
   100                           
   101                           ; Clear objects allocated to COMRAM (2 bytes)
   102  00F94E  6A44               	clrf	(__pbssCOMRAM+1)& (0+255),c
   103  00F950  6A43               	clrf	__pbssCOMRAM& (0+255),c
   104  00F952                     end_of_initialization:
   105                           	opt stack 0
   106  00F952                     __end_of__initialization:
   107                           	opt stack 0
   108  00F952  0100               	movlb	0
   109  00F954  EF4E  F07D         	goto	_main	;jump to C main() function
   110                           
   111                           	psect	bssCOMRAM
   112  000043                     __pbssCOMRAM:
   113                           	opt stack 0
   114  000043                     _i:
   115                           	opt stack 0
   116  000043                     	ds	2
   117                           
   118                           	psect	cstackCOMRAM
   119  000001                     __pcstackCOMRAM:
   120                           	opt stack 0
   121  000001                     ??_delay_10ms:
   122  000001                     ?___ftpack:
   123                           	opt stack 0
   124  000001                     ?___aldiv:
   125                           	opt stack 0
   126  000001                     ___ftpack@arg:
   127                           	opt stack 0
   128  000001                     ___aldiv@dividend:
   129                           	opt stack 0
   130                           
   131                           ; 4 bytes @ 0x0
   132  000001                     	ds	1
   133  000002                     delay_10ms@n:
   134                           	opt stack 0
   135                           
   136                           ; 1 bytes @ 0x1
   137  000002                     	ds	2
   138  000004                     ___ftpack@exp:
   139                           	opt stack 0
   140                           
   141                           ; 1 bytes @ 0x3
   142  000004                     	ds	1
   143  000005                     ___ftpack@sign:
   144                           	opt stack 0
   145  000005                     ___aldiv@divisor:
   146                           	opt stack 0
   147                           
   148                           ; 4 bytes @ 0x4
   149  000005                     	ds	1
   150  000006                     ??___ftpack:
   151                           
   152                           ; 1 bytes @ 0x5
   153  000006                     	ds	3
   154  000009                     ?___lwtoft:
   155                           	opt stack 0
   156  000009                     ___aldiv@counter:
   157                           	opt stack 0
   158  000009                     ___lwtoft@c:
   159                           	opt stack 0
   160                           
   161                           ; 2 bytes @ 0x8
   162  000009                     	ds	1
   163  00000A                     ___aldiv@sign:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x9
   167  00000A                     	ds	1
   168  00000B                     ___aldiv@quotient:
   169                           	opt stack 0
   170                           
   171                           ; 4 bytes @ 0xA
   172  00000B                     	ds	1
   173  00000C                     ?___ftdiv:
   174                           	opt stack 0
   175  00000C                     ___ftdiv@f1:
   176                           	opt stack 0
   177                           
   178                           ; 3 bytes @ 0xB
   179  00000C                     	ds	3
   180  00000F                     ?_PWM_Max_Duty:
   181                           	opt stack 0
   182  00000F                     ___ftdiv@f2:
   183                           	opt stack 0
   184  00000F                     set_PWM_freq@fre:
   185                           	opt stack 0
   186                           
   187                           ; 4 bytes @ 0xE
   188  00000F                     	ds	2
   189  000011                     ??_PWM_Max_Duty:
   190                           
   191                           ; 1 bytes @ 0x10
   192  000011                     	ds	1
   193  000012                     ??___ftdiv:
   194                           
   195                           ; 1 bytes @ 0x11
   196  000012                     	ds	1
   197  000013                     ??_set_PWM_freq:
   198                           
   199                           ; 1 bytes @ 0x12
   200  000013                     	ds	2
   201  000015                     ?___awtoft:
   202                           	opt stack 0
   203  000015                     ___ftdiv@cntr:
   204                           	opt stack 0
   205  000015                     ___awtoft@c:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x14
   209  000015                     	ds	1
   210  000016                     ___ftdiv@f3:
   211                           	opt stack 0
   212                           
   213                           ; 3 bytes @ 0x15
   214  000016                     	ds	2
   215  000018                     ___awtoft@sign:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x17
   219  000018                     	ds	1
   220  000019                     ___ftdiv@exp:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x18
   224  000019                     	ds	1
   225  00001A                     ___ftdiv@sign:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x19
   229  00001A                     	ds	1
   230  00001B                     ?___ftmul:
   231                           	opt stack 0
   232  00001B                     ___ftmul@f1:
   233                           	opt stack 0
   234                           
   235                           ; 3 bytes @ 0x1A
   236  00001B                     	ds	3
   237  00001E                     ___ftmul@f2:
   238                           	opt stack 0
   239                           
   240                           ; 3 bytes @ 0x1D
   241  00001E                     	ds	3
   242  000021                     ??___ftmul:
   243                           
   244                           ; 1 bytes @ 0x20
   245  000021                     	ds	3
   246  000024                     ___ftmul@exp:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x23
   250  000024                     	ds	1
   251  000025                     ___ftmul@f3_as_product:
   252                           	opt stack 0
   253                           
   254                           ; 3 bytes @ 0x24
   255  000025                     	ds	3
   256  000028                     ___ftmul@cntr:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x27
   260  000028                     	ds	1
   261  000029                     ___ftmul@sign:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x28
   265  000029                     	ds	1
   266  00002A                     ?___fttol:
   267                           	opt stack 0
   268  00002A                     ___fttol@f1:
   269                           	opt stack 0
   270                           
   271                           ; 3 bytes @ 0x29
   272  00002A                     	ds	4
   273  00002E                     ??___fttol:
   274                           
   275                           ; 1 bytes @ 0x2D
   276  00002E                     	ds	5
   277  000033                     ___fttol@sign1:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x32
   281  000033                     	ds	1
   282  000034                     ___fttol@lval:
   283                           	opt stack 0
   284                           
   285                           ; 4 bytes @ 0x33
   286  000034                     	ds	4
   287  000038                     ___fttol@exp1:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x37
   291  000038                     	ds	1
   292  000039                     set_PWM1_duty@duty:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x38
   296  000039                     	ds	2
   297  00003B                     ??_set_PWM1_duty:
   298                           
   299                           ; 1 bytes @ 0x3A
   300  00003B                     	ds	2
   301  00003D                     ??_main:
   302                           
   303                           ; 1 bytes @ 0x3C
   304  00003D                     	ds	2
   305                           
   306 ;;
   307 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   308 ;;
   309 ;; *************** function _main *****************
   310 ;; Defined at:
   311 ;;		line 203 in file "PWM.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2, status,0, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;Total ram usage:        2 bytes
   330 ;; Hardware stack levels required when called:    3
   331 ;; This function calls:
   332 ;;		_PWM1_Start
   333 ;;		_delay_10ms
   334 ;;		_set_PWM1_duty
   335 ;;		_set_PWM_freq
   336 ;; This function is called by:
   337 ;;		Startup code after reset
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text0
   342  00FA9C                     __ptext0:
   343                           	opt stack 0
   344  00FA9C                     _main:
   345                           	opt stack 28
   346                           
   347                           ;PWM.c: 205: OSCCON = OSCCON | 0b01110000;
   348                           
   349                           ;incstack = 0
   350  00FA9C  50D3               	movf	4051,w,c	;volatile
   351  00FA9E  0970               	iorlw	112
   352  00FAA0  6ED3               	movwf	4051,c	;volatile
   353                           
   354                           ;PWM.c: 207: OSCTUNEbits.PLLEN = 1;
   355  00FAA2  8C9B               	bsf	3995,6,c	;volatile
   356                           
   357                           ;PWM.c: 211: set_PWM_freq (3100);
   358  00FAA4  0E1C               	movlw	28
   359  00FAA6  6E0F               	movwf	set_PWM_freq@fre,c
   360  00FAA8  0E0C               	movlw	12
   361  00FAAA  6E10               	movwf	set_PWM_freq@fre+1,c
   362  00FAAC  0E00               	movlw	0
   363  00FAAE  6E11               	movwf	set_PWM_freq@fre+2,c
   364  00FAB0  0E00               	movlw	0
   365  00FAB2  6E12               	movwf	set_PWM_freq@fre+3,c
   366  00FAB4  EC19  F07D         	call	_set_PWM_freq	;wreg free
   367                           
   368                           ;PWM.c: 213: PWM1_Start();
   369  00FAB8  ECAC  F07C         	call	_PWM1_Start	;wreg free
   370                           
   371                           ;PWM.c: 216: TRISC = 0x11110001;
   372  00FABC  0E01               	movlw	1
   373  00FABE  6E94               	movwf	3988,c	;volatile
   374                           
   375                           ;PWM.c: 217: set_PWM1_duty(512);
   376  00FAC0  0E02               	movlw	2
   377  00FAC2  6E3A               	movwf	set_PWM1_duty@duty+1,c
   378  00FAC4  0E00               	movlw	0
   379  00FAC6  6E39               	movwf	set_PWM1_duty@duty,c
   380  00FAC8  EC8F  F07D         	call	_set_PWM1_duty	;wreg free
   381                           
   382                           ;PWM.c: 218: TRISB = 0x00;
   383  00FACC  0E00               	movlw	0
   384  00FACE  6E93               	movwf	3987,c	;volatile
   385  00FAD0                     
   386                           ;PWM.c: 221: set_PWM1_duty(i);
   387  00FAD0  C043  F039         	movff	_i,set_PWM1_duty@duty
   388  00FAD4  C044  F03A         	movff	_i+1,set_PWM1_duty@duty+1
   389  00FAD8  EC8F  F07D         	call	_set_PWM1_duty	;wreg free
   390                           
   391                           ;PWM.c: 222: LATB = i>>2;
   392  00FADC  C043  F03D         	movff	_i,??_main
   393  00FAE0  C044  F03E         	movff	_i+1,??_main+1
   394  00FAE4  90D8               	bcf	status,0,c
   395  00FAE6  323E               	rrcf	??_main+1,f,c
   396  00FAE8  323D               	rrcf	??_main,f,c
   397  00FAEA  90D8               	bcf	status,0,c
   398  00FAEC  323E               	rrcf	??_main+1,f,c
   399  00FAEE  323D               	rrcf	??_main,f,c
   400  00FAF0  503D               	movf	??_main,w,c
   401  00FAF2  6E8A               	movwf	3978,c	;volatile
   402                           
   403                           ;PWM.c: 223: if(i <= 1020)
   404  00FAF4  0EFD               	movlw	253
   405  00FAF6  5C43               	subwf	_i,w,c
   406  00FAF8  0E03               	movlw	3
   407  00FAFA  5844               	subwfb	_i+1,w,c
   408  00FAFC  B0D8               	btfsc	status,0,c
   409  00FAFE  D007               	goto	l92
   410                           
   411                           ;PWM.c: 224: i= i+10;
   412  00FB00  0E0A               	movlw	10
   413  00FB02  2443               	addwf	_i,w,c
   414  00FB04  6E43               	movwf	_i,c
   415  00FB06  0E00               	movlw	0
   416  00FB08  2044               	addwfc	_i+1,w,c
   417  00FB0A  6E44               	movwf	_i+1,c
   418  00FB0C  D004               	goto	l93
   419  00FB0E                     l92:
   420                           
   421                           ;PWM.c: 225: else
   422                           ;PWM.c: 226: i = 0;
   423  00FB0E  0E00               	movlw	0
   424  00FB10  6E44               	movwf	_i+1,c
   425  00FB12  0E00               	movlw	0
   426  00FB14  6E43               	movwf	_i,c
   427  00FB16                     l93:
   428                           
   429                           ;PWM.c: 227: delay_10ms(10);
   430  00FB16  0E0A               	movlw	10
   431  00FB18  ECB5  F07C         	call	_delay_10ms
   432  00FB1C  D7D9               	goto	l91
   433  00FB1E                     __end_of_main:
   434                           	opt stack 0
   435                           status	equ	0xFD8
   436                           
   437 ;; *************** function _set_PWM_freq *****************
   438 ;; Defined at:
   439 ;;		line 92 in file "PWM.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  fre             4   14[COMRAM] long 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   453 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;Total ram usage:        8 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    1
   460 ;; This function calls:
   461 ;;		___aldiv
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text1
   468  00FA32                     __ptext1:
   469                           	opt stack 0
   470  00FA32                     _set_PWM_freq:
   471                           	opt stack 29
   472                           
   473                           ;PWM.c: 97: PR2 = (32000000/(fre*4*16)) - 1;
   474                           
   475                           ;incstack = 0
   476  00FA32  0E00               	movlw	0
   477  00FA34  6E01               	movwf	___aldiv@dividend,c
   478  00FA36  0E48               	movlw	72
   479  00FA38  6E02               	movwf	___aldiv@dividend+1,c
   480  00FA3A  0EE8               	movlw	232
   481  00FA3C  6E03               	movwf	___aldiv@dividend+2,c
   482  00FA3E  0E01               	movlw	1
   483  00FA40  6E04               	movwf	___aldiv@dividend+3,c
   484  00FA42  C00F  F013         	movff	set_PWM_freq@fre,??_set_PWM_freq
   485  00FA46  C010  F014         	movff	set_PWM_freq@fre+1,??_set_PWM_freq+1
   486  00FA4A  C011  F015         	movff	set_PWM_freq@fre+2,??_set_PWM_freq+2
   487  00FA4E  C012  F016         	movff	set_PWM_freq@fre+3,??_set_PWM_freq+3
   488  00FA52  0E02               	movlw	2
   489  00FA54                     u815:
   490  00FA54  90D8               	bcf	status,0,c
   491  00FA56  3613               	rlcf	??_set_PWM_freq,f,c
   492  00FA58  3614               	rlcf	??_set_PWM_freq+1,f,c
   493  00FA5A  3615               	rlcf	??_set_PWM_freq+2,f,c
   494  00FA5C  3616               	rlcf	??_set_PWM_freq+3,f,c
   495  00FA5E  2EE8               	decfsz	wreg,f,c
   496  00FA60  D7F9               	goto	u815
   497  00FA62  0E04               	movlw	4
   498  00FA64                     u825:
   499  00FA64  90D8               	bcf	status,0,c
   500  00FA66  3613               	rlcf	??_set_PWM_freq,f,c
   501  00FA68  3614               	rlcf	??_set_PWM_freq+1,f,c
   502  00FA6A  3615               	rlcf	??_set_PWM_freq+2,f,c
   503  00FA6C  3616               	rlcf	??_set_PWM_freq+3,f,c
   504  00FA6E  2EE8               	decfsz	wreg,f,c
   505  00FA70  D7F9               	goto	u825
   506  00FA72  C013  F005         	movff	??_set_PWM_freq,___aldiv@divisor
   507  00FA76  C014  F006         	movff	??_set_PWM_freq+1,___aldiv@divisor+1
   508  00FA7A  C015  F007         	movff	??_set_PWM_freq+2,___aldiv@divisor+2
   509  00FA7E  C016  F008         	movff	??_set_PWM_freq+3,___aldiv@divisor+3
   510  00FA82  EC33  F07E         	call	___aldiv	;wreg free
   511  00FA86  0401               	decf	?___aldiv,w,c
   512  00FA88  6ECB               	movwf	4043,c	;volatile
   513                           
   514                           ;PWM.c: 98: freq = fre;
   515  00FA8A  C00F  F03F         	movff	set_PWM_freq@fre,_freq
   516  00FA8E  C010  F040         	movff	set_PWM_freq@fre+1,_freq+1
   517  00FA92  C011  F041         	movff	set_PWM_freq@fre+2,_freq+2
   518  00FA96  C012  F042         	movff	set_PWM_freq@fre+3,_freq+3
   519  00FA9A  0012               	return		;funcret
   520  00FA9C                     __end_of_set_PWM_freq:
   521                           	opt stack 0
   522                           wreg	equ	0xFE8
   523                           status	equ	0xFD8
   524                           
   525 ;; *************** function _set_PWM1_duty *****************
   526 ;; Defined at:
   527 ;;		line 101 in file "PWM.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;  duty            2   56[COMRAM] unsigned int 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;Total ram usage:        4 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    2
   548 ;; This function calls:
   549 ;;		_PWM_Max_Duty
   550 ;;		___awtoft
   551 ;;		___ftdiv
   552 ;;		___ftmul
   553 ;;		___fttol
   554 ;;		___lwtoft
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text2
   561  00FB1E                     __ptext2:
   562                           	opt stack 0
   563  00FB1E                     _set_PWM1_duty:
   564                           	opt stack 28
   565                           
   566                           ;PWM.c: 106: if(duty<1024)
   567                           
   568                           ;incstack = 0
   569  00FB1E  0E04               	movlw	4
   570  00FB20  5C3A               	subwf	set_PWM1_duty@duty+1,w,c
   571  00FB22  B0D8               	btfsc	status,0,c
   572  00FB24  0012               	return	
   573                           
   574                           ;PWM.c: 107: {
   575                           ;PWM.c: 108: duty = ((float)duty/1023)*PWM_Max_Duty();
   576  00FB26  ECF2  F07C         	call	_PWM_Max_Duty	;wreg free
   577  00FB2A  C00F  F015         	movff	?_PWM_Max_Duty,___awtoft@c
   578  00FB2E  C010  F016         	movff	?_PWM_Max_Duty+1,___awtoft@c+1
   579  00FB32  ECD6  F07C         	call	___awtoft	;wreg free
   580  00FB36  C015  F01E         	movff	?___awtoft,___ftmul@f2
   581  00FB3A  C016  F01F         	movff	?___awtoft+1,___ftmul@f2+1
   582  00FB3E  C017  F020         	movff	?___awtoft+2,___ftmul@f2+2
   583  00FB42  0EC0               	movlw	192
   584  00FB44  6E0F               	movwf	___ftdiv@f2,c
   585  00FB46  0E7F               	movlw	127
   586  00FB48  6E10               	movwf	___ftdiv@f2+1,c
   587  00FB4A  0E44               	movlw	68
   588  00FB4C  6E11               	movwf	___ftdiv@f2+2,c
   589  00FB4E  C039  F009         	movff	set_PWM1_duty@duty,___lwtoft@c
   590  00FB52  C03A  F00A         	movff	set_PWM1_duty@duty+1,___lwtoft@c+1
   591  00FB56  ECC4  F07C         	call	___lwtoft	;wreg free
   592  00FB5A  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
   593  00FB5E  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
   594  00FB62  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
   595  00FB66  EC99  F07E         	call	___ftdiv	;wreg free
   596  00FB6A  C00C  F01B         	movff	?___ftdiv,___ftmul@f1
   597  00FB6E  C00D  F01C         	movff	?___ftdiv+1,___ftmul@f1+1
   598  00FB72  C00E  F01D         	movff	?___ftdiv+2,___ftmul@f1+2
   599  00FB76  EC0C  F07F         	call	___ftmul	;wreg free
   600  00FB7A  C01B  F02A         	movff	?___ftmul,___fttol@f1
   601  00FB7E  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   602  00FB82  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   603  00FB86  EC86  F07F         	call	___fttol	;wreg free
   604  00FB8A  C02A  F039         	movff	?___fttol,set_PWM1_duty@duty
   605  00FB8E  C02B  F03A         	movff	?___fttol+1,set_PWM1_duty@duty+1
   606                           
   607                           ;PWM.c: 109: CCP1X = duty & 2;
   608  00FB92  9ABD               	bcf	4029,5,c	;volatile
   609                           
   610                           ;PWM.c: 110: CCP1Y = duty & 1;
   611  00FB94  A039               	btfss	set_PWM1_duty@duty,0,c
   612  00FB96  D002               	goto	u840
   613  00FB98  88BD               	bsf	4029,4,c	;volatile
   614  00FB9A  D001               	goto	u855
   615  00FB9C                     u840:
   616  00FB9C  98BD               	bcf	4029,4,c	;volatile
   617  00FB9E                     u855:
   618                           
   619                           ;PWM.c: 111: CCPR1L = duty>>2;
   620  00FB9E  C039  F03B         	movff	set_PWM1_duty@duty,??_set_PWM1_duty
   621  00FBA2  C03A  F03C         	movff	set_PWM1_duty@duty+1,??_set_PWM1_duty+1
   622  00FBA6  90D8               	bcf	status,0,c
   623  00FBA8  323C               	rrcf	??_set_PWM1_duty+1,f,c
   624  00FBAA  323B               	rrcf	??_set_PWM1_duty,f,c
   625  00FBAC  90D8               	bcf	status,0,c
   626  00FBAE  323C               	rrcf	??_set_PWM1_duty+1,f,c
   627  00FBB0  323B               	rrcf	??_set_PWM1_duty,f,c
   628  00FBB2  503B               	movf	??_set_PWM1_duty,w,c
   629  00FBB4  6EBE               	movwf	4030,c	;volatile
   630  00FBB6  0012               	return	
   631  00FBB8                     __end_of_set_PWM1_duty:
   632                           	opt stack 0
   633                           wreg	equ	0xFE8
   634                           status	equ	0xFD8
   635                           
   636 ;; *************** function ___lwtoft *****************
   637 ;; Defined at:
   638 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwtoft.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;  c               2    8[COMRAM] unsigned int 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  3    8[COMRAM] float 
   645 ;; Registers used:
   646 ;;		wreg, status,2, status,0, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   652 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;Total ram usage:        3 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    1
   659 ;; This function calls:
   660 ;;		___ftpack
   661 ;; This function is called by:
   662 ;;		_set_PWM1_duty
   663 ;;		_set_PWM2_duty
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text3
   668  00F988                     __ptext3:
   669                           	opt stack 0
   670  00F988                     ___lwtoft:
   671                           	opt stack 28
   672                           
   673                           ;incstack = 0
   674  00F988  C009  F001         	movff	___lwtoft@c,___ftpack@arg
   675  00F98C  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
   676  00F990  6A03               	clrf	___ftpack@arg+2,c
   677  00F992  0E8E               	movlw	142
   678  00F994  6E04               	movwf	___ftpack@exp,c
   679  00F996  0E00               	movlw	0
   680  00F998  6E05               	movwf	___ftpack@sign,c
   681  00F99A  ECDC  F07D         	call	___ftpack	;wreg free
   682  00F99E  C001  F009         	movff	?___ftpack,?___lwtoft
   683  00F9A2  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
   684  00F9A6  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
   685  00F9AA  0012               	return	
   686  00F9AC                     __end_of___lwtoft:
   687                           	opt stack 0
   688                           wreg	equ	0xFE8
   689                           status	equ	0xFD8
   690                           
   691 ;; *************** function ___fttol *****************
   692 ;; Defined at:
   693 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;  f1              3   41[COMRAM] float 
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  lval            4   51[COMRAM] unsigned long 
   698 ;;  exp1            1   55[COMRAM] unsigned char 
   699 ;;  sign1           1   50[COMRAM] unsigned char 
   700 ;; Return value:  Size  Location     Type
   701 ;;                  4   41[COMRAM] long 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;Total ram usage:       15 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_set_PWM1_duty
   719 ;;		_set_PWM2_duty
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text4
   724  00FF0C                     __ptext4:
   725                           	opt stack 0
   726  00FF0C                     ___fttol:
   727                           	opt stack 29
   728                           
   729                           ;incstack = 0
   730  00FF0C  C02C  F02E         	movff	___fttol@f1+2,??___fttol
   731  00FF10  6A2F               	clrf	(??___fttol+1)& (0+255),c
   732  00FF12  6A30               	clrf	(??___fttol+2)& (0+255),c
   733  00FF14  342B               	rlcf	___fttol@f1+1,w,c
   734  00FF16  362E               	rlcf	??___fttol& (0+255),f,c
   735  00FF18  E301               	bnc	u731
   736  00FF1A  802F               	bsf	(??___fttol+1)& (0+255),0,c
   737  00FF1C                     u731:
   738  00FF1C  502E               	movf	??___fttol,w,c
   739  00FF1E  6E38               	movwf	___fttol@exp1,c
   740  00FF20  5038               	movf	___fttol@exp1,w,c
   741  00FF22  A4D8               	btfss	status,2,c
   742  00FF24  D009               	goto	l411
   743  00FF26  0E00               	movlw	0
   744  00FF28  6E2A               	movwf	?___fttol,c
   745  00FF2A  0E00               	movlw	0
   746  00FF2C  6E2B               	movwf	?___fttol+1,c
   747  00FF2E  0E00               	movlw	0
   748  00FF30  6E2C               	movwf	?___fttol+2,c
   749  00FF32  0E00               	movlw	0
   750  00FF34  6E2D               	movwf	?___fttol+3,c
   751  00FF36  0012               	return	
   752  00FF38                     l411:
   753  00FF38  0E17               	movlw	23
   754  00FF3A  6E2E               	movwf	??___fttol& (0+255),c
   755  00FF3C  C02A  F02F         	movff	___fttol@f1,??___fttol+1
   756  00FF40  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
   757  00FF44  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
   758  00FF48  282E               	incf	??___fttol,w,c
   759  00FF4A  6E32               	movwf	(??___fttol+4)& (0+255),c
   760  00FF4C  D004               	goto	u750
   761  00FF4E                     u755:
   762  00FF4E  90D8               	bcf	status,0,c
   763  00FF50  3231               	rrcf	??___fttol+3,f,c
   764  00FF52  3230               	rrcf	??___fttol+2,f,c
   765  00FF54  322F               	rrcf	??___fttol+1,f,c
   766  00FF56                     u750:
   767  00FF56  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
   768  00FF58  D7FA               	goto	u755
   769  00FF5A  502F               	movf	??___fttol+1,w,c
   770  00FF5C  6E33               	movwf	___fttol@sign1,c
   771  00FF5E  8E2B               	bsf	___fttol@f1+1,7,c
   772  00FF60  0EFF               	movlw	255
   773  00FF62  162A               	andwf	___fttol@f1,f,c
   774  00FF64  0EFF               	movlw	255
   775  00FF66  162B               	andwf	___fttol@f1+1,f,c
   776  00FF68  0E00               	movlw	0
   777  00FF6A  162C               	andwf	___fttol@f1+2,f,c
   778  00FF6C  502A               	movf	___fttol@f1,w,c
   779  00FF6E  6E34               	movwf	___fttol@lval,c
   780  00FF70  502B               	movf	___fttol@f1+1,w,c
   781  00FF72  6E35               	movwf	___fttol@lval+1,c
   782  00FF74  502C               	movf	___fttol@f1+2,w,c
   783  00FF76  6E36               	movwf	___fttol@lval+2,c
   784  00FF78  6A37               	clrf	___fttol@lval+3,c
   785  00FF7A  0E8E               	movlw	142
   786  00FF7C  5E38               	subwf	___fttol@exp1,f,c
   787  00FF7E  AE38               	btfss	___fttol@exp1,7,c
   788  00FF80  D016               	goto	l413
   789  00FF82  5038               	movf	___fttol@exp1,w,c
   790  00FF84  0A80               	xorlw	128
   791  00FF86  0F8F               	addlw	143
   792  00FF88  B0D8               	btfsc	status,0,c
   793  00FF8A  D009               	goto	l414
   794  00FF8C  0E00               	movlw	0
   795  00FF8E  6E2A               	movwf	?___fttol,c
   796  00FF90  0E00               	movlw	0
   797  00FF92  6E2B               	movwf	?___fttol+1,c
   798  00FF94  0E00               	movlw	0
   799  00FF96  6E2C               	movwf	?___fttol+2,c
   800  00FF98  0E00               	movlw	0
   801  00FF9A  6E2D               	movwf	?___fttol+3,c
   802  00FF9C  0012               	return	
   803  00FF9E                     l414:
   804  00FF9E  90D8               	bcf	status,0,c
   805  00FFA0  3237               	rrcf	___fttol@lval+3,f,c
   806  00FFA2  3236               	rrcf	___fttol@lval+2,f,c
   807  00FFA4  3235               	rrcf	___fttol@lval+1,f,c
   808  00FFA6  3234               	rrcf	___fttol@lval,f,c
   809  00FFA8  3E38               	incfsz	___fttol@exp1,f,c
   810  00FFAA  D7F9               	goto	l414
   811  00FFAC  D015               	goto	u790
   812  00FFAE                     l413:
   813  00FFAE  0E17               	movlw	23
   814  00FFB0  6438               	cpfsgt	___fttol@exp1,c
   815  00FFB2  D00F               	goto	l419
   816  00FFB4  0E00               	movlw	0
   817  00FFB6  6E2A               	movwf	?___fttol,c
   818  00FFB8  0E00               	movlw	0
   819  00FFBA  6E2B               	movwf	?___fttol+1,c
   820  00FFBC  0E00               	movlw	0
   821  00FFBE  6E2C               	movwf	?___fttol+2,c
   822  00FFC0  0E00               	movlw	0
   823  00FFC2  6E2D               	movwf	?___fttol+3,c
   824  00FFC4  0012               	return	
   825  00FFC6  90D8               	bcf	status,0,c
   826  00FFC8  3634               	rlcf	___fttol@lval,f,c
   827  00FFCA  3635               	rlcf	___fttol@lval+1,f,c
   828  00FFCC  3636               	rlcf	___fttol@lval+2,f,c
   829  00FFCE  3637               	rlcf	___fttol@lval+3,f,c
   830  00FFD0  0638               	decf	___fttol@exp1,f,c
   831  00FFD2                     l419:
   832  00FFD2  5038               	movf	___fttol@exp1,w,c
   833  00FFD4  A4D8               	btfss	status,2,c
   834  00FFD6  D7F7               	goto	l420
   835  00FFD8                     u790:
   836  00FFD8  5033               	movf	___fttol@sign1,w,c
   837  00FFDA  B4D8               	btfsc	status,2,c
   838  00FFDC  D008               	goto	l422
   839  00FFDE  1E37               	comf	___fttol@lval+3,f,c
   840  00FFE0  1E36               	comf	___fttol@lval+2,f,c
   841  00FFE2  1E35               	comf	___fttol@lval+1,f,c
   842  00FFE4  6C34               	negf	___fttol@lval,c
   843  00FFE6  0E00               	movlw	0
   844  00FFE8  2235               	addwfc	___fttol@lval+1,f,c
   845  00FFEA  2236               	addwfc	___fttol@lval+2,f,c
   846  00FFEC  2237               	addwfc	___fttol@lval+3,f,c
   847  00FFEE                     l422:
   848  00FFEE  C034  F02A         	movff	___fttol@lval,?___fttol
   849  00FFF2  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
   850  00FFF6  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
   851  00FFFA  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
   852  00FFFE  0012               	return	
   853  010000                     __end_of___fttol:
   854                           	opt stack 0
   855                           wreg	equ	0xFE8
   856                           status	equ	0xFD8
   857                           
   858 ;; *************** function ___ftmul *****************
   859 ;; Defined at:
   860 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  f1              3   26[COMRAM] float 
   863 ;;  f2              3   29[COMRAM] float 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  f3_as_produc    3   36[COMRAM] unsigned um
   866 ;;  sign            1   40[COMRAM] unsigned char 
   867 ;;  cntr            1   39[COMRAM] unsigned char 
   868 ;;  exp             1   35[COMRAM] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  3   26[COMRAM] float 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   878 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;Total ram usage:       15 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    1
   885 ;; This function calls:
   886 ;;		___ftpack
   887 ;; This function is called by:
   888 ;;		_set_PWM1_duty
   889 ;;		_set_PWM2_duty
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text5
   894  00FE18                     __ptext5:
   895                           	opt stack 0
   896  00FE18                     ___ftmul:
   897                           	opt stack 28
   898                           
   899                           ;incstack = 0
   900  00FE18  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
   901  00FE1C  6A22               	clrf	(??___ftmul+1)& (0+255),c
   902  00FE1E  6A23               	clrf	(??___ftmul+2)& (0+255),c
   903  00FE20  341C               	rlcf	___ftmul@f1+1,w,c
   904  00FE22  3621               	rlcf	??___ftmul& (0+255),f,c
   905  00FE24  E301               	bnc	u661
   906  00FE26  8022               	bsf	(??___ftmul+1)& (0+255),0,c
   907  00FE28                     u661:
   908  00FE28  5021               	movf	??___ftmul,w,c
   909  00FE2A  6E24               	movwf	___ftmul@exp,c
   910  00FE2C  5024               	movf	___ftmul@exp,w,c
   911  00FE2E  A4D8               	btfss	status,2,c
   912  00FE30  D007               	goto	l390
   913  00FE32  0E00               	movlw	0
   914  00FE34  6E1B               	movwf	?___ftmul,c
   915  00FE36  0E00               	movlw	0
   916  00FE38  6E1C               	movwf	?___ftmul+1,c
   917  00FE3A  0E00               	movlw	0
   918  00FE3C  6E1D               	movwf	?___ftmul+2,c
   919  00FE3E  0012               	return	
   920  00FE40                     l390:
   921  00FE40  C020  F021         	movff	___ftmul@f2+2,??___ftmul
   922  00FE44  6A22               	clrf	(??___ftmul+1)& (0+255),c
   923  00FE46  6A23               	clrf	(??___ftmul+2)& (0+255),c
   924  00FE48  341F               	rlcf	___ftmul@f2+1,w,c
   925  00FE4A  3621               	rlcf	??___ftmul& (0+255),f,c
   926  00FE4C  E301               	bnc	u681
   927  00FE4E  8022               	bsf	(??___ftmul+1)& (0+255),0,c
   928  00FE50                     u681:
   929  00FE50  5021               	movf	??___ftmul,w,c
   930  00FE52  6E29               	movwf	___ftmul@sign,c
   931  00FE54  5029               	movf	___ftmul@sign,w,c
   932  00FE56  A4D8               	btfss	status,2,c
   933  00FE58  D007               	goto	l392
   934  00FE5A  0E00               	movlw	0
   935  00FE5C  6E1B               	movwf	?___ftmul,c
   936  00FE5E  0E00               	movlw	0
   937  00FE60  6E1C               	movwf	?___ftmul+1,c
   938  00FE62  0E00               	movlw	0
   939  00FE64  6E1D               	movwf	?___ftmul+2,c
   940  00FE66  0012               	return	
   941  00FE68                     l392:
   942  00FE68  5029               	movf	___ftmul@sign,w,c
   943  00FE6A  0F7B               	addlw	123
   944  00FE6C  2624               	addwf	___ftmul@exp,f,c
   945  00FE6E  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
   946  00FE72  5020               	movf	___ftmul@f2+2,w,c
   947  00FE74  1A29               	xorwf	___ftmul@sign,f,c
   948  00FE76  0E80               	movlw	128
   949  00FE78  1629               	andwf	___ftmul@sign,f,c
   950  00FE7A  8E1C               	bsf	___ftmul@f1+1,7,c
   951  00FE7C  8E1F               	bsf	___ftmul@f2+1,7,c
   952  00FE7E  0EFF               	movlw	255
   953  00FE80  161E               	andwf	___ftmul@f2,f,c
   954  00FE82  0EFF               	movlw	255
   955  00FE84  161F               	andwf	___ftmul@f2+1,f,c
   956  00FE86  0E00               	movlw	0
   957  00FE88  1620               	andwf	___ftmul@f2+2,f,c
   958  00FE8A  0E00               	movlw	0
   959  00FE8C  6E25               	movwf	___ftmul@f3_as_product,c
   960  00FE8E  0E00               	movlw	0
   961  00FE90  6E26               	movwf	___ftmul@f3_as_product+1,c
   962  00FE92  0E00               	movlw	0
   963  00FE94  6E27               	movwf	___ftmul@f3_as_product+2,c
   964  00FE96  0E07               	movlw	7
   965  00FE98  6E28               	movwf	___ftmul@cntr,c
   966  00FE9A  A01B               	btfss	___ftmul@f1,0,c
   967  00FE9C  D006               	goto	l394
   968  00FE9E  501E               	movf	___ftmul@f2,w,c
   969  00FEA0  2625               	addwf	___ftmul@f3_as_product,f,c
   970  00FEA2  501F               	movf	___ftmul@f2+1,w,c
   971  00FEA4  2226               	addwfc	___ftmul@f3_as_product+1,f,c
   972  00FEA6  5020               	movf	___ftmul@f2+2,w,c
   973  00FEA8  2227               	addwfc	___ftmul@f3_as_product+2,f,c
   974  00FEAA                     l394:
   975  00FEAA  90D8               	bcf	status,0,c
   976  00FEAC  321D               	rrcf	___ftmul@f1+2,f,c
   977  00FEAE  321C               	rrcf	___ftmul@f1+1,f,c
   978  00FEB0  321B               	rrcf	___ftmul@f1,f,c
   979  00FEB2  90D8               	bcf	status,0,c
   980  00FEB4  361E               	rlcf	___ftmul@f2,f,c
   981  00FEB6  361F               	rlcf	___ftmul@f2+1,f,c
   982  00FEB8  3620               	rlcf	___ftmul@f2+2,f,c
   983  00FEBA  2E28               	decfsz	___ftmul@cntr,f,c
   984  00FEBC  D7EE               	goto	l393
   985  00FEBE  0E09               	movlw	9
   986  00FEC0  6E28               	movwf	___ftmul@cntr,c
   987  00FEC2  A01B               	btfss	___ftmul@f1,0,c
   988  00FEC4  D006               	goto	l397
   989  00FEC6  501E               	movf	___ftmul@f2,w,c
   990  00FEC8  2625               	addwf	___ftmul@f3_as_product,f,c
   991  00FECA  501F               	movf	___ftmul@f2+1,w,c
   992  00FECC  2226               	addwfc	___ftmul@f3_as_product+1,f,c
   993  00FECE  5020               	movf	___ftmul@f2+2,w,c
   994  00FED0  2227               	addwfc	___ftmul@f3_as_product+2,f,c
   995  00FED2                     l397:
   996  00FED2  90D8               	bcf	status,0,c
   997  00FED4  321D               	rrcf	___ftmul@f1+2,f,c
   998  00FED6  321C               	rrcf	___ftmul@f1+1,f,c
   999  00FED8  321B               	rrcf	___ftmul@f1,f,c
  1000  00FEDA  90D8               	bcf	status,0,c
  1001  00FEDC  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  1002  00FEDE  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  1003  00FEE0  3225               	rrcf	___ftmul@f3_as_product,f,c
  1004  00FEE2  2E28               	decfsz	___ftmul@cntr,f,c
  1005  00FEE4  D7EE               	goto	l396
  1006  00FEE6  C025  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1007  00FEEA  C026  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1008  00FEEE  C027  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1009  00FEF2  C024  F004         	movff	___ftmul@exp,___ftpack@exp
  1010  00FEF6  C029  F005         	movff	___ftmul@sign,___ftpack@sign
  1011  00FEFA  ECDC  F07D         	call	___ftpack	;wreg free
  1012  00FEFE  C001  F01B         	movff	?___ftpack,?___ftmul
  1013  00FF02  C002  F01C         	movff	?___ftpack+1,?___ftmul+1
  1014  00FF06  C003  F01D         	movff	?___ftpack+2,?___ftmul+2
  1015  00FF0A  0012               	return	
  1016  00FF0C                     __end_of___ftmul:
  1017                           	opt stack 0
  1018                           wreg	equ	0xFE8
  1019                           status	equ	0xFD8
  1020                           
  1021 ;; *************** function ___ftdiv *****************
  1022 ;; Defined at:
  1023 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  f1              3   11[COMRAM] float 
  1026 ;;  f2              3   14[COMRAM] float 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  f3              3   21[COMRAM] float 
  1029 ;;  sign            1   25[COMRAM] unsigned char 
  1030 ;;  exp             1   24[COMRAM] unsigned char 
  1031 ;;  cntr            1   20[COMRAM] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  3   11[COMRAM] float 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1041 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;Total ram usage:       15 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    1
  1048 ;; This function calls:
  1049 ;;		___ftpack
  1050 ;; This function is called by:
  1051 ;;		_set_PWM1_duty
  1052 ;;		_set_PWM2_duty
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text6
  1057  00FD32                     __ptext6:
  1058                           	opt stack 0
  1059  00FD32                     ___ftdiv:
  1060                           	opt stack 28
  1061                           
  1062                           ;incstack = 0
  1063  00FD32  C00E  F012         	movff	___ftdiv@f1+2,??___ftdiv
  1064  00FD36  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  1065  00FD38  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  1066  00FD3A  340D               	rlcf	___ftdiv@f1+1,w,c
  1067  00FD3C  3612               	rlcf	??___ftdiv& (0+255),f,c
  1068  00FD3E  E301               	bnc	u611
  1069  00FD40  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  1070  00FD42                     u611:
  1071  00FD42  5012               	movf	??___ftdiv,w,c
  1072  00FD44  6E19               	movwf	___ftdiv@exp,c
  1073  00FD46  5019               	movf	___ftdiv@exp,w,c
  1074  00FD48  A4D8               	btfss	status,2,c
  1075  00FD4A  D007               	goto	l375
  1076  00FD4C  0E00               	movlw	0
  1077  00FD4E  6E0C               	movwf	?___ftdiv,c
  1078  00FD50  0E00               	movlw	0
  1079  00FD52  6E0D               	movwf	?___ftdiv+1,c
  1080  00FD54  0E00               	movlw	0
  1081  00FD56  6E0E               	movwf	?___ftdiv+2,c
  1082  00FD58  0012               	return	
  1083  00FD5A                     l375:
  1084  00FD5A  C011  F012         	movff	___ftdiv@f2+2,??___ftdiv
  1085  00FD5E  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  1086  00FD60  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  1087  00FD62  3410               	rlcf	___ftdiv@f2+1,w,c
  1088  00FD64  3612               	rlcf	??___ftdiv& (0+255),f,c
  1089  00FD66  E301               	bnc	u631
  1090  00FD68  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  1091  00FD6A                     u631:
  1092  00FD6A  5012               	movf	??___ftdiv,w,c
  1093  00FD6C  6E1A               	movwf	___ftdiv@sign,c
  1094  00FD6E  501A               	movf	___ftdiv@sign,w,c
  1095  00FD70  A4D8               	btfss	status,2,c
  1096  00FD72  D007               	goto	l377
  1097  00FD74  0E00               	movlw	0
  1098  00FD76  6E0C               	movwf	?___ftdiv,c
  1099  00FD78  0E00               	movlw	0
  1100  00FD7A  6E0D               	movwf	?___ftdiv+1,c
  1101  00FD7C  0E00               	movlw	0
  1102  00FD7E  6E0E               	movwf	?___ftdiv+2,c
  1103  00FD80  0012               	return	
  1104  00FD82                     l377:
  1105  00FD82  0E00               	movlw	0
  1106  00FD84  6E16               	movwf	___ftdiv@f3,c
  1107  00FD86  0E00               	movlw	0
  1108  00FD88  6E17               	movwf	___ftdiv@f3+1,c
  1109  00FD8A  0E00               	movlw	0
  1110  00FD8C  6E18               	movwf	___ftdiv@f3+2,c
  1111  00FD8E  501A               	movf	___ftdiv@sign,w,c
  1112  00FD90  0F89               	addlw	137
  1113  00FD92  5E19               	subwf	___ftdiv@exp,f,c
  1114  00FD94  C00E  F01A         	movff	___ftdiv@f1+2,___ftdiv@sign
  1115  00FD98  5011               	movf	___ftdiv@f2+2,w,c
  1116  00FD9A  1A1A               	xorwf	___ftdiv@sign,f,c
  1117  00FD9C  0E80               	movlw	128
  1118  00FD9E  161A               	andwf	___ftdiv@sign,f,c
  1119  00FDA0  8E0D               	bsf	___ftdiv@f1+1,7,c
  1120  00FDA2  0EFF               	movlw	255
  1121  00FDA4  160C               	andwf	___ftdiv@f1,f,c
  1122  00FDA6  0EFF               	movlw	255
  1123  00FDA8  160D               	andwf	___ftdiv@f1+1,f,c
  1124  00FDAA  0E00               	movlw	0
  1125  00FDAC  160E               	andwf	___ftdiv@f1+2,f,c
  1126  00FDAE  8E10               	bsf	___ftdiv@f2+1,7,c
  1127  00FDB0  0EFF               	movlw	255
  1128  00FDB2  160F               	andwf	___ftdiv@f2,f,c
  1129  00FDB4  0EFF               	movlw	255
  1130  00FDB6  1610               	andwf	___ftdiv@f2+1,f,c
  1131  00FDB8  0E00               	movlw	0
  1132  00FDBA  1611               	andwf	___ftdiv@f2+2,f,c
  1133  00FDBC  0E18               	movlw	24
  1134  00FDBE  6E15               	movwf	___ftdiv@cntr,c
  1135  00FDC0  90D8               	bcf	status,0,c
  1136  00FDC2  3616               	rlcf	___ftdiv@f3,f,c
  1137  00FDC4  3617               	rlcf	___ftdiv@f3+1,f,c
  1138  00FDC6  3618               	rlcf	___ftdiv@f3+2,f,c
  1139  00FDC8  500F               	movf	___ftdiv@f2,w,c
  1140  00FDCA  5C0C               	subwf	___ftdiv@f1,w,c
  1141  00FDCC  5010               	movf	___ftdiv@f2+1,w,c
  1142  00FDCE  580D               	subwfb	___ftdiv@f1+1,w,c
  1143  00FDD0  5011               	movf	___ftdiv@f2+2,w,c
  1144  00FDD2  580E               	subwfb	___ftdiv@f1+2,w,c
  1145  00FDD4  A0D8               	btfss	status,0,c
  1146  00FDD6  D007               	goto	l379
  1147  00FDD8  500F               	movf	___ftdiv@f2,w,c
  1148  00FDDA  5E0C               	subwf	___ftdiv@f1,f,c
  1149  00FDDC  5010               	movf	___ftdiv@f2+1,w,c
  1150  00FDDE  5A0D               	subwfb	___ftdiv@f1+1,f,c
  1151  00FDE0  5011               	movf	___ftdiv@f2+2,w,c
  1152  00FDE2  5A0E               	subwfb	___ftdiv@f1+2,f,c
  1153  00FDE4  8016               	bsf	___ftdiv@f3,0,c
  1154  00FDE6                     l379:
  1155  00FDE6  90D8               	bcf	status,0,c
  1156  00FDE8  360C               	rlcf	___ftdiv@f1,f,c
  1157  00FDEA  360D               	rlcf	___ftdiv@f1+1,f,c
  1158  00FDEC  360E               	rlcf	___ftdiv@f1+2,f,c
  1159  00FDEE  2E15               	decfsz	___ftdiv@cntr,f,c
  1160  00FDF0  D7E7               	goto	l378
  1161  00FDF2  C016  F001         	movff	___ftdiv@f3,___ftpack@arg
  1162  00FDF6  C017  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1163  00FDFA  C018  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1164  00FDFE  C019  F004         	movff	___ftdiv@exp,___ftpack@exp
  1165  00FE02  C01A  F005         	movff	___ftdiv@sign,___ftpack@sign
  1166  00FE06  ECDC  F07D         	call	___ftpack	;wreg free
  1167  00FE0A  C001  F00C         	movff	?___ftpack,?___ftdiv
  1168  00FE0E  C002  F00D         	movff	?___ftpack+1,?___ftdiv+1
  1169  00FE12  C003  F00E         	movff	?___ftpack+2,?___ftdiv+2
  1170  00FE16  0012               	return	
  1171  00FE18                     __end_of___ftdiv:
  1172                           	opt stack 0
  1173                           wreg	equ	0xFE8
  1174                           status	equ	0xFD8
  1175                           
  1176 ;; *************** function ___awtoft *****************
  1177 ;; Defined at:
  1178 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  c               2   20[COMRAM] int 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  sign            1   23[COMRAM] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  3   20[COMRAM] float 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1192 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;Total ram usage:        4 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    1
  1199 ;; This function calls:
  1200 ;;		___ftpack
  1201 ;; This function is called by:
  1202 ;;		_set_PWM1_duty
  1203 ;;		_set_PWM2_duty
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text7
  1208  00F9AC                     __ptext7:
  1209                           	opt stack 0
  1210  00F9AC                     ___awtoft:
  1211                           	opt stack 28
  1212                           
  1213                           ;incstack = 0
  1214  00F9AC  0E00               	movlw	0
  1215  00F9AE  6E18               	movwf	___awtoft@sign,c
  1216  00F9B0  AE16               	btfss	___awtoft@c+1,7,c
  1217  00F9B2  D006               	goto	l292
  1218  00F9B4  6C15               	negf	___awtoft@c,c
  1219  00F9B6  1E16               	comf	___awtoft@c+1,f,c
  1220  00F9B8  B0D8               	btfsc	status,0,c
  1221  00F9BA  2A16               	incf	___awtoft@c+1,f,c
  1222  00F9BC  0E01               	movlw	1
  1223  00F9BE  6E18               	movwf	___awtoft@sign,c
  1224  00F9C0                     l292:
  1225  00F9C0  C015  F001         	movff	___awtoft@c,___ftpack@arg
  1226  00F9C4  C016  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1227  00F9C8  6A03               	clrf	___ftpack@arg+2,c
  1228  00F9CA  0E8E               	movlw	142
  1229  00F9CC  6E04               	movwf	___ftpack@exp,c
  1230  00F9CE  C018  F005         	movff	___awtoft@sign,___ftpack@sign
  1231  00F9D2  ECDC  F07D         	call	___ftpack	;wreg free
  1232  00F9D6  C001  F015         	movff	?___ftpack,?___awtoft
  1233  00F9DA  C002  F016         	movff	?___ftpack+1,?___awtoft+1
  1234  00F9DE  C003  F017         	movff	?___ftpack+2,?___awtoft+2
  1235  00F9E2  0012               	return	
  1236  00F9E4                     __end_of___awtoft:
  1237                           	opt stack 0
  1238                           wreg	equ	0xFE8
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function ___ftpack *****************
  1242 ;; Defined at:
  1243 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  arg             3    0[COMRAM] unsigned um
  1246 ;;  exp             1    3[COMRAM] unsigned char 
  1247 ;;  sign            1    4[COMRAM] unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  3    0[COMRAM] float 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2, status,0
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1259 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;Total ram usage:        8 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		___awtoft
  1269 ;;		___ftdiv
  1270 ;;		___ftmul
  1271 ;;		___lwtoft
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text8
  1276  00FBB8                     __ptext8:
  1277                           	opt stack 0
  1278  00FBB8                     ___ftpack:
  1279                           	opt stack 28
  1280                           
  1281                           ;incstack = 0
  1282  00FBB8  5004               	movf	___ftpack@exp,w,c
  1283  00FBBA  B4D8               	btfsc	status,2,c
  1284  00FBBC  D005               	goto	u470
  1285  00FBBE  5001               	movf	___ftpack@arg,w,c
  1286  00FBC0  1002               	iorwf	___ftpack@arg+1,w,c
  1287  00FBC2  1003               	iorwf	___ftpack@arg+2,w,c
  1288  00FBC4  A4D8               	btfss	status,2,c
  1289  00FBC6  D00C               	goto	l311
  1290  00FBC8                     u470:
  1291  00FBC8  0E00               	movlw	0
  1292  00FBCA  6E01               	movwf	?___ftpack,c
  1293  00FBCC  0E00               	movlw	0
  1294  00FBCE  6E02               	movwf	?___ftpack+1,c
  1295  00FBD0  0E00               	movlw	0
  1296  00FBD2  6E03               	movwf	?___ftpack+2,c
  1297  00FBD4  0012               	return	
  1298  00FBD6  2A04               	incf	___ftpack@exp,f,c
  1299  00FBD8  90D8               	bcf	status,0,c
  1300  00FBDA  3203               	rrcf	___ftpack@arg+2,f,c
  1301  00FBDC  3202               	rrcf	___ftpack@arg+1,f,c
  1302  00FBDE  3201               	rrcf	___ftpack@arg,f,c
  1303  00FBE0                     l311:
  1304  00FBE0  0E00               	movlw	0
  1305  00FBE2  1401               	andwf	___ftpack@arg,w,c
  1306  00FBE4  6E06               	movwf	??___ftpack& (0+255),c
  1307  00FBE6  0E00               	movlw	0
  1308  00FBE8  1402               	andwf	___ftpack@arg+1,w,c
  1309  00FBEA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1310  00FBEC  0EFE               	movlw	254
  1311  00FBEE  1403               	andwf	___ftpack@arg+2,w,c
  1312  00FBF0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1313  00FBF2  5006               	movf	??___ftpack,w,c
  1314  00FBF4  1007               	iorwf	??___ftpack+1,w,c
  1315  00FBF6  1008               	iorwf	??___ftpack+2,w,c
  1316  00FBF8  B4D8               	btfsc	status,2,c
  1317  00FBFA  D00C               	goto	l314
  1318  00FBFC  D7EC               	goto	l312
  1319  00FBFE  2A04               	incf	___ftpack@exp,f,c
  1320  00FC00  0E01               	movlw	1
  1321  00FC02  2601               	addwf	___ftpack@arg,f,c
  1322  00FC04  0E00               	movlw	0
  1323  00FC06  2202               	addwfc	___ftpack@arg+1,f,c
  1324  00FC08  0E00               	movlw	0
  1325  00FC0A  2203               	addwfc	___ftpack@arg+2,f,c
  1326  00FC0C  90D8               	bcf	status,0,c
  1327  00FC0E  3203               	rrcf	___ftpack@arg+2,f,c
  1328  00FC10  3202               	rrcf	___ftpack@arg+1,f,c
  1329  00FC12  3201               	rrcf	___ftpack@arg,f,c
  1330  00FC14                     l314:
  1331  00FC14  0E00               	movlw	0
  1332  00FC16  1401               	andwf	___ftpack@arg,w,c
  1333  00FC18  6E06               	movwf	??___ftpack& (0+255),c
  1334  00FC1A  0E00               	movlw	0
  1335  00FC1C  1402               	andwf	___ftpack@arg+1,w,c
  1336  00FC1E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1337  00FC20  0EFF               	movlw	255
  1338  00FC22  1403               	andwf	___ftpack@arg+2,w,c
  1339  00FC24  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1340  00FC26  5006               	movf	??___ftpack,w,c
  1341  00FC28  1007               	iorwf	??___ftpack+1,w,c
  1342  00FC2A  1008               	iorwf	??___ftpack+2,w,c
  1343  00FC2C  B4D8               	btfsc	status,2,c
  1344  00FC2E  D006               	goto	l317
  1345  00FC30  D7E6               	goto	l315
  1346  00FC32  0604               	decf	___ftpack@exp,f,c
  1347  00FC34  90D8               	bcf	status,0,c
  1348  00FC36  3601               	rlcf	___ftpack@arg,f,c
  1349  00FC38  3602               	rlcf	___ftpack@arg+1,f,c
  1350  00FC3A  3603               	rlcf	___ftpack@arg+2,f,c
  1351  00FC3C                     l317:
  1352  00FC3C  BE02               	btfsc	___ftpack@arg+1,7,c
  1353  00FC3E  D003               	goto	u510
  1354  00FC40  0E02               	movlw	2
  1355  00FC42  6004               	cpfslt	___ftpack@exp,c
  1356  00FC44  D7F6               	goto	l318
  1357  00FC46                     u510:
  1358  00FC46  A004               	btfss	___ftpack@exp,0,c
  1359  00FC48  9E02               	bcf	___ftpack@arg+1,7,c
  1360  00FC4A  90D8               	bcf	status,0,c
  1361  00FC4C  3204               	rrcf	___ftpack@exp,f,c
  1362  00FC4E  5004               	movf	___ftpack@exp,w,c
  1363  00FC50  1203               	iorwf	___ftpack@arg+2,f,c
  1364  00FC52  5005               	movf	___ftpack@sign,w,c
  1365  00FC54  A4D8               	btfss	status,2,c
  1366  00FC56  8E03               	bsf	___ftpack@arg+2,7,c
  1367  00FC58  C001  F001         	movff	___ftpack@arg,?___ftpack
  1368  00FC5C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1369  00FC60  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1370  00FC64  0012               	return	
  1371  00FC66                     __end_of___ftpack:
  1372                           	opt stack 0
  1373                           wreg	equ	0xFE8
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _PWM_Max_Duty *****************
  1377 ;; Defined at:
  1378 ;;		line 84 in file "PWM.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  2   14[COMRAM] int 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;Total ram usage:        6 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    1
  1399 ;; This function calls:
  1400 ;;		___aldiv
  1401 ;; This function is called by:
  1402 ;;		_set_PWM1_duty
  1403 ;;		_set_PWM2_duty
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text9
  1408  00F9E4                     __ptext9:
  1409                           	opt stack 0
  1410  00F9E4                     _PWM_Max_Duty:
  1411                           	opt stack 28
  1412                           
  1413                           ;PWM.c: 89: return(32000000/(freq*16);
  1414                           
  1415                           ;incstack = 0
  1416  00F9E4  0E00               	movlw	0
  1417  00F9E6  6E01               	movwf	___aldiv@dividend,c
  1418  00F9E8  0E48               	movlw	72
  1419  00F9EA  6E02               	movwf	___aldiv@dividend+1,c
  1420  00F9EC  0EE8               	movlw	232
  1421  00F9EE  6E03               	movwf	___aldiv@dividend+2,c
  1422  00F9F0  0E01               	movlw	1
  1423  00F9F2  6E04               	movwf	___aldiv@dividend+3,c
  1424  00F9F4  C03F  F011         	movff	_freq,??_PWM_Max_Duty
  1425  00F9F8  C040  F012         	movff	_freq+1,??_PWM_Max_Duty+1
  1426  00F9FC  C041  F013         	movff	_freq+2,??_PWM_Max_Duty+2
  1427  00FA00  C042  F014         	movff	_freq+3,??_PWM_Max_Duty+3
  1428  00FA04  0E04               	movlw	4
  1429  00FA06                     u605:
  1430  00FA06  90D8               	bcf	status,0,c
  1431  00FA08  3611               	rlcf	??_PWM_Max_Duty,f,c
  1432  00FA0A  3612               	rlcf	??_PWM_Max_Duty+1,f,c
  1433  00FA0C  3613               	rlcf	??_PWM_Max_Duty+2,f,c
  1434  00FA0E  3614               	rlcf	??_PWM_Max_Duty+3,f,c
  1435  00FA10  2EE8               	decfsz	wreg,f,c
  1436  00FA12  D7F9               	goto	u605
  1437  00FA14  C011  F005         	movff	??_PWM_Max_Duty,___aldiv@divisor
  1438  00FA18  C012  F006         	movff	??_PWM_Max_Duty+1,___aldiv@divisor+1
  1439  00FA1C  C013  F007         	movff	??_PWM_Max_Duty+2,___aldiv@divisor+2
  1440  00FA20  C014  F008         	movff	??_PWM_Max_Duty+3,___aldiv@divisor+3
  1441  00FA24  EC33  F07E         	call	___aldiv	;wreg free
  1442  00FA28  C001  F00F         	movff	?___aldiv,?_PWM_Max_Duty
  1443  00FA2C  C002  F010         	movff	?___aldiv+1,?_PWM_Max_Duty+1
  1444  00FA30  0012               	return	
  1445  00FA32                     __end_of_PWM_Max_Duty:
  1446                           	opt stack 0
  1447                           wreg	equ	0xFE8
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function ___aldiv *****************
  1451 ;; Defined at:
  1452 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\aldiv.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  dividend        4    0[COMRAM] long 
  1455 ;;  divisor         4    4[COMRAM] long 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  quotient        4   10[COMRAM] long 
  1458 ;;  sign            1    9[COMRAM] unsigned char 
  1459 ;;  counter         1    8[COMRAM] unsigned char 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  4    0[COMRAM] long 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1469 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;Total ram usage:       14 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_PWM_Max_Duty
  1479 ;;		_set_PWM_freq
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text10
  1484  00FC66                     __ptext10:
  1485                           	opt stack 0
  1486  00FC66                     ___aldiv:
  1487                           	opt stack 29
  1488                           
  1489                           ;incstack = 0
  1490  00FC66  0E00               	movlw	0
  1491  00FC68  6E0A               	movwf	___aldiv@sign,c
  1492  00FC6A  AE08               	btfss	___aldiv@divisor+3,7,c
  1493  00FC6C  D00A               	goto	l152
  1494  00FC6E  1E08               	comf	___aldiv@divisor+3,f,c
  1495  00FC70  1E07               	comf	___aldiv@divisor+2,f,c
  1496  00FC72  1E06               	comf	___aldiv@divisor+1,f,c
  1497  00FC74  6C05               	negf	___aldiv@divisor,c
  1498  00FC76  0E00               	movlw	0
  1499  00FC78  2206               	addwfc	___aldiv@divisor+1,f,c
  1500  00FC7A  2207               	addwfc	___aldiv@divisor+2,f,c
  1501  00FC7C  2208               	addwfc	___aldiv@divisor+3,f,c
  1502  00FC7E  0E01               	movlw	1
  1503  00FC80  6E0A               	movwf	___aldiv@sign,c
  1504  00FC82                     l152:
  1505  00FC82  AE04               	btfss	___aldiv@dividend+3,7,c
  1506  00FC84  D00A               	goto	l153
  1507  00FC86  1E04               	comf	___aldiv@dividend+3,f,c
  1508  00FC88  1E03               	comf	___aldiv@dividend+2,f,c
  1509  00FC8A  1E02               	comf	___aldiv@dividend+1,f,c
  1510  00FC8C  6C01               	negf	___aldiv@dividend,c
  1511  00FC8E  0E00               	movlw	0
  1512  00FC90  2202               	addwfc	___aldiv@dividend+1,f,c
  1513  00FC92  2203               	addwfc	___aldiv@dividend+2,f,c
  1514  00FC94  2204               	addwfc	___aldiv@dividend+3,f,c
  1515  00FC96  0E01               	movlw	1
  1516  00FC98  1A0A               	xorwf	___aldiv@sign,f,c
  1517  00FC9A                     l153:
  1518  00FC9A  0E00               	movlw	0
  1519  00FC9C  6E0B               	movwf	___aldiv@quotient,c
  1520  00FC9E  0E00               	movlw	0
  1521  00FCA0  6E0C               	movwf	___aldiv@quotient+1,c
  1522  00FCA2  0E00               	movlw	0
  1523  00FCA4  6E0D               	movwf	___aldiv@quotient+2,c
  1524  00FCA6  0E00               	movlw	0
  1525  00FCA8  6E0E               	movwf	___aldiv@quotient+3,c
  1526  00FCAA  5005               	movf	___aldiv@divisor,w,c
  1527  00FCAC  1006               	iorwf	___aldiv@divisor+1,w,c
  1528  00FCAE  1007               	iorwf	___aldiv@divisor+2,w,c
  1529  00FCB0  1008               	iorwf	___aldiv@divisor+3,w,c
  1530  00FCB2  B4D8               	btfsc	status,2,c
  1531  00FCB4  D02A               	goto	l160
  1532  00FCB6  0E01               	movlw	1
  1533  00FCB8  6E09               	movwf	___aldiv@counter,c
  1534  00FCBA  D006               	goto	l155
  1535  00FCBC  90D8               	bcf	status,0,c
  1536  00FCBE  3605               	rlcf	___aldiv@divisor,f,c
  1537  00FCC0  3606               	rlcf	___aldiv@divisor+1,f,c
  1538  00FCC2  3607               	rlcf	___aldiv@divisor+2,f,c
  1539  00FCC4  3608               	rlcf	___aldiv@divisor+3,f,c
  1540  00FCC6  2A09               	incf	___aldiv@counter,f,c
  1541  00FCC8                     l155:
  1542  00FCC8  AE08               	btfss	___aldiv@divisor+3,7,c
  1543  00FCCA  D7F8               	goto	l156
  1544  00FCCC                     u570:
  1545  00FCCC  90D8               	bcf	status,0,c
  1546  00FCCE  360B               	rlcf	___aldiv@quotient,f,c
  1547  00FCD0  360C               	rlcf	___aldiv@quotient+1,f,c
  1548  00FCD2  360D               	rlcf	___aldiv@quotient+2,f,c
  1549  00FCD4  360E               	rlcf	___aldiv@quotient+3,f,c
  1550  00FCD6  5005               	movf	___aldiv@divisor,w,c
  1551  00FCD8  5C01               	subwf	___aldiv@dividend,w,c
  1552  00FCDA  5006               	movf	___aldiv@divisor+1,w,c
  1553  00FCDC  5802               	subwfb	___aldiv@dividend+1,w,c
  1554  00FCDE  5007               	movf	___aldiv@divisor+2,w,c
  1555  00FCE0  5803               	subwfb	___aldiv@dividend+2,w,c
  1556  00FCE2  5008               	movf	___aldiv@divisor+3,w,c
  1557  00FCE4  5804               	subwfb	___aldiv@dividend+3,w,c
  1558  00FCE6  A0D8               	btfss	status,0,c
  1559  00FCE8  D009               	goto	l159
  1560  00FCEA  5005               	movf	___aldiv@divisor,w,c
  1561  00FCEC  5E01               	subwf	___aldiv@dividend,f,c
  1562  00FCEE  5006               	movf	___aldiv@divisor+1,w,c
  1563  00FCF0  5A02               	subwfb	___aldiv@dividend+1,f,c
  1564  00FCF2  5007               	movf	___aldiv@divisor+2,w,c
  1565  00FCF4  5A03               	subwfb	___aldiv@dividend+2,f,c
  1566  00FCF6  5008               	movf	___aldiv@divisor+3,w,c
  1567  00FCF8  5A04               	subwfb	___aldiv@dividend+3,f,c
  1568  00FCFA  800B               	bsf	___aldiv@quotient,0,c
  1569  00FCFC                     l159:
  1570  00FCFC  90D8               	bcf	status,0,c
  1571  00FCFE  3208               	rrcf	___aldiv@divisor+3,f,c
  1572  00FD00  3207               	rrcf	___aldiv@divisor+2,f,c
  1573  00FD02  3206               	rrcf	___aldiv@divisor+1,f,c
  1574  00FD04  3205               	rrcf	___aldiv@divisor,f,c
  1575  00FD06  2E09               	decfsz	___aldiv@counter,f,c
  1576  00FD08  D7E1               	goto	u570
  1577  00FD0A                     l160:
  1578  00FD0A  500A               	movf	___aldiv@sign,w,c
  1579  00FD0C  B4D8               	btfsc	status,2,c
  1580  00FD0E  D008               	goto	l161
  1581  00FD10  1E0E               	comf	___aldiv@quotient+3,f,c
  1582  00FD12  1E0D               	comf	___aldiv@quotient+2,f,c
  1583  00FD14  1E0C               	comf	___aldiv@quotient+1,f,c
  1584  00FD16  6C0B               	negf	___aldiv@quotient,c
  1585  00FD18  0E00               	movlw	0
  1586  00FD1A  220C               	addwfc	___aldiv@quotient+1,f,c
  1587  00FD1C  220D               	addwfc	___aldiv@quotient+2,f,c
  1588  00FD1E  220E               	addwfc	___aldiv@quotient+3,f,c
  1589  00FD20                     l161:
  1590  00FD20  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1591  00FD24  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1592  00FD28  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1593  00FD2C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1594  00FD30  0012               	return	
  1595  00FD32                     __end_of___aldiv:
  1596                           	opt stack 0
  1597                           wreg	equ	0xFE8
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function _delay_10ms *****************
  1601 ;; Defined at:
  1602 ;;		line 78 in file "PWM.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  n               1    wreg     unsigned char 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  n               1    1[COMRAM] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:        2 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text11
  1630  00F96A                     __ptext11:
  1631                           	opt stack 0
  1632  00F96A                     _delay_10ms:
  1633                           	opt stack 30
  1634                           
  1635                           ;incstack = 0
  1636                           ;delay_10ms@n stored from wreg
  1637  00F96A  6E02               	movwf	delay_10ms@n,c
  1638                           
  1639                           ;PWM.c: 79: while (n-- != 0) {
  1640  00F96C  D008               	goto	l57
  1641  00F96E                     
  1642                           ;PWM.c: 80: _delay((unsigned long)((10)*(32000000/4000.0)));
  1643  00F96E  0E68               	movlw	104
  1644  00F970  6E01               	movwf	??_delay_10ms& (0+255),c
  1645  00F972  0EE4               	movlw	228
  1646  00F974                     u907:
  1647  00F974  2EE8               	decfsz	wreg,f,c
  1648  00F976  D7FE               	bra	u907
  1649  00F978  2E01               	decfsz	??_delay_10ms& (0+255),f,c
  1650  00F97A  D7FC               	bra	u907
  1651  00F97C  D000               	nop2	
  1652  00F97E                     l57:
  1653  00F97E  0602               	decf	delay_10ms@n,f,c
  1654  00F980  2802               	incf	delay_10ms@n,w,c
  1655  00F982  B4D8               	btfsc	status,2,c
  1656  00F984  0012               	return	
  1657  00F986  D7F3               	goto	l58
  1658  00F988                     __end_of_delay_10ms:
  1659                           	opt stack 0
  1660                           wreg	equ	0xFE8
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _PWM1_Start *****************
  1664 ;; Defined at:
  1665 ;;		line 130 in file "PWM.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  2   76[None  ] int 
  1672 ;; Registers used:
  1673 ;;		None
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text12
  1693  00F958                     __ptext12:
  1694                           	opt stack 0
  1695  00F958                     _PWM1_Start:
  1696                           	opt stack 30
  1697                           
  1698                           ;PWM.c: 134: P1M1 = 0;
  1699                           
  1700                           ;incstack = 0
  1701  00F958  9EBD               	bcf	4029,7,c	;volatile
  1702                           
  1703                           ;PWM.c: 135: P1M0 = 0;
  1704  00F95A  9CBD               	bcf	4029,6,c	;volatile
  1705                           
  1706                           ;PWM.c: 136: CCP1M3 = 1;
  1707  00F95C  86BD               	bsf	4029,3,c	;volatile
  1708                           
  1709                           ;PWM.c: 137: CCP1M2 = 1;
  1710  00F95E  84BD               	bsf	4029,2,c	;volatile
  1711                           
  1712                           ;PWM.c: 138: CCP1M1 = 0;
  1713  00F960  92BD               	bcf	4029,1,c	;volatile
  1714                           
  1715                           ;PWM.c: 139: CCP1M0 = 0;
  1716  00F962  90BD               	bcf	4029,0,c	;volatile
  1717                           
  1718                           ;PWM.c: 154: TMR2ON = 1;
  1719  00F964  84CA               	bsf	4042,2,c	;volatile
  1720                           
  1721                           ;PWM.c: 157: TRISCbits.TRISC2 = 0;
  1722  00F966  9494               	bcf	3988,2,c	;volatile
  1723  00F968  0012               	return		;funcret
  1724  00F96A                     __end_of_PWM1_Start:
  1725                           	opt stack 0
  1726  0000                     wreg	equ	0xFE8
  1727                           status	equ	0xFD8
  1728                           wreg	equ	0xFE8
  1729                           status	equ	0xFD8
  1730                           
  1731                           	psect	rparam
  1732  0000                     wreg	equ	0xFE8
  1733                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_set_PWM1_duty
    _set_PWM_freq->___aldiv
    _set_PWM1_duty->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13735
                                             60 COMRAM     2     2      0
                         _PWM1_Start
                         _delay_10ms
                      _set_PWM1_duty
                       _set_PWM_freq
 ---------------------------------------------------------------------------------
 (1) _set_PWM_freq                                         8     4      4     724
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _set_PWM1_duty                                        4     2      2   12996
                                             56 COMRAM     4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2640
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                             41 COMRAM    15    11      4
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3222
                                             26 COMRAM    15     9      6
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3176
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2709
                                             20 COMRAM     4     1      3
                       _PWM_Max_Duty (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PWM_Max_Duty                                         6     4      2     604
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _delay_10ms                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Start
   _delay_10ms
   _set_PWM1_duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _set_PWM_freq
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      44       1       53.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      34        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Sep 13 13:56:37 2017

                      _i 0043                       l57 F97E                       l58 F96E  
                     l91 FAD0                       l92 FB0E                       l93 FB16  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_WDT$ON 000000  
                    l311 FBE0                      l160 FD0A                      l152 FC82  
                    l312 FBD6                      l161 FD20                      l153 FC9A  
                    l314 FC14                      l155 FCC8                      l315 FBFE  
                    l411 FF38                      l156 FCBC                      l420 FFC6  
                    l317 FC3C                      l413 FFAE                      l318 FC32  
                    l422 FFEE                      l414 FF9E                      l159 FCFC  
                    l419 FFD2                      l292 F9C0                      l390 FE40  
                    l375 FD5A                      l392 FE68                      l377 FD82  
                    l393 FE9A                      l378 FDC0                      l394 FEAA  
                    l379 FDE6                      l396 FEC2                      l397 FED2  
           __CFG_CPB$OFF 000000                      u510 FC46                      _PR2 000FCB  
           __CFG_CPD$OFF 000000                      u611 FD42                      u605 FA06  
                    u470 FBC8                      u631 FD6A                      u570 FCCC  
                    u731 FF1C                      u661 FE28                      u750 FF56  
                    u815 FA54                      u840 FB9C                      u681 FE50  
                    u825 FA64                      u907 F974                      u755 FF4E  
                    u790 FFD8                      u855 FB9E        set_PWM1_duty@duty 0039  
                    wreg 000FE8             __CFG_LVP$OFF 000000             ___ftdiv@cntr 0015  
           ___ftdiv@sign 001A                     _P1M0 007DEE                     _P1M1 007DEF  
                   _LATB 000F8A             _PWM_Max_Duty F9E4    __end_of_set_PWM1_duty FBB8  
                   _main FA9C                     _freq 003F             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___ftmul@cntr 0028             ___param_bank 000000  
           ___ftmul@sign 0029             ___fttol@exp1 0038             ___fttol@lval 0034  
        __end_of___aldiv FD32                    ?_main 0001                    _CCP1X 007DED  
                  _CCP1Y 007DEC                    _CCP2X 007DD5                    _CCP2Y 007DD4  
        __end_of___ftdiv FE18          __end_of___ftmul FF0C          __end_of___fttol 0000  
                  _TRISB 000F93                    _TRISC 000F94            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
            ?_PWM1_Start 0001           __CFG_EBTRB$OFF 000000            ___awtoft@sign 0018  
          ___ftpack@sign 0005                    status 000FD8           __CFG_PBADEN$ON 000000  
        __initialization F94E             __end_of_main FB1E                   ??_main 003D  
          ___fttol@sign1 0033            __activetblptr 000000                   _CCP1M0 007DE8  
                 _CCP1M1 007DE9                   _CCP1M2 007DEA                   _CCP1M3 007DEB  
                 _CCP2M0 007DD0                   _CCP2M1 007DD1                   _CCP2M2 007DD2  
                 _CCP2M3 007DD3                   _CCPR1L 000FBE                   _CCPR2L 000FBB  
       __end_of___awtoft F9E4         __end_of___ftpack FC66         __end_of___lwtoft F9AC  
                 _OSCCON 000FD3                   _TMR2ON 007E52           __CFG_XINST$OFF 000000  
              ??___aldiv 0009           __CFG_STVREN$ON 000000      __size_of_PWM1_Start 0012  
              ??___ftdiv 0012                ??___ftmul 0021                ??___fttol 002E  
  ___ftmul@f3_as_product 0025               __accesstop 0080  __end_of__initialization F952  
          ___rparam_used 000001               ___ftdiv@f1 000C               ___ftdiv@f2 000F  
             ___ftdiv@f3 0016               ___awtoft@c 0015               ___ftmul@f1 001B  
             ___ftmul@f2 001E               ___fttol@f1 002A           __pcstackCOMRAM 0001  
             ___lwtoft@c 0009          __CFG_OSC$INTIO7 000000            ?_set_PWM_freq 000F  
             _delay_10ms F96A               __pnvCOMRAM 003F                ?___awtoft 0015  
              ?___ftpack 0001                ?___lwtoft 0009             ??_PWM1_Start 0001  
         ??_set_PWM_freq 0013                  __Hparam 0000                  __Lparam 0000  
                ___aldiv FC66                  ___ftdiv FD32                  ___ftmul FE18  
                ___fttol FF0C       __end_of_PWM1_Start F96A                  __pcinit F94E  
             ??___awtoft 0018               ??___ftpack 0006                  __ramtop 1000  
                __ptext0 FA9C                  __ptext1 FA32                  __ptext2 FB1E  
                __ptext3 F988                  __ptext4 FF0C                  __ptext5 FE18  
                __ptext6 FD32                  __ptext7 F9AC                  __ptext8 FBB8  
                __ptext9 F9E4               ??___lwtoft 000C   __size_of_set_PWM1_duty 009A  
       ___aldiv@dividend 0001     end_of_initialization F952              ?_delay_10ms 0001  
        set_PWM_freq@fre 000F         ___aldiv@quotient 000B                _TRISCbits 000F94  
            ___ftdiv@exp 0019            _set_PWM1_duty FB1E              ___ftmul@exp 0024  
   __end_of_set_PWM_freq FA9C      __size_of_delay_10ms 001E      start_initialization F94E  
          ?_PWM_Max_Duty 000F           ?_set_PWM1_duty 0039         __CFG_LPT1OSC$OFF 000000  
      __size_of___awtoft 0038        __size_of___ftpack 00AE              __pbssCOMRAM 0043  
      __size_of___lwtoft 0024           ??_PWM_Max_Duty 0011        __CFG_CCP2MX$PORTC 000000  
               ?___aldiv 0001                 ?___ftdiv 000C                 ?___ftmul 001B  
               ?___fttol 002A          ??_set_PWM1_duty 003B          ___aldiv@divisor 0005  
           ??_delay_10ms 0001          ___aldiv@counter 0009    __size_of_set_PWM_freq 006A  
       __CFG_WDTPS$32768 000000       __end_of_delay_10ms F988             _set_PWM_freq FA32  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___aldiv 00CC     __end_of_PWM_Max_Duty FA32         __size_of___ftdiv 00E6  
       __size_of___ftmul 00F4         __size_of___fttol 00F4                 ___awtoft F9AC  
               ___ftpack FBB8                 ___lwtoft F988                 __ptext10 FC66  
               __ptext11 F96A                 __ptext12 F958              delay_10ms@n 0002  
          __size_of_main 0082              _OSCTUNEbits 000F9B             ___aldiv@sign 000A  
             _PWM1_Start F958    __size_of_PWM_Max_Duty 004E  
