

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 20 17:09:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4620 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TRISAbits	set	3986
    49  0000                     _LATAbits	set	3977
    50                           
    51                           ; #config settings
    52  0000                     
    53                           	psect	cinit
    54  00FF4A                     __pcinit:
    55                           	opt stack 0
    56  00FF4A                     start_initialization:
    57                           	opt stack 0
    58  00FF4A                     __initialization:
    59                           	opt stack 0
    60                           
    61                           ; Clear objects allocated to COMRAM (4 bytes)
    62  00FF4A  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    63  00FF4C  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    64  00FF4E  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    65  00FF50  6A01               	clrf	__pbssCOMRAM& (0+255),c
    66  00FF52                     end_of_initialization:
    67                           	opt stack 0
    68  00FF52                     __end_of__initialization:
    69                           	opt stack 0
    70  00FF52  0100               	movlb	0
    71  00FF54  EFAC  F07F         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	bssCOMRAM
    74  000001                     __pbssCOMRAM:
    75                           	opt stack 0
    76  000001                     _i:
    77                           	opt stack 0
    78  000001                     	ds	2
    79  000003                     _angle:
    80                           	opt stack 0
    81  000003                     	ds	2
    82                           
    83                           	psect	cstackCOMRAM
    84  000005                     __pcstackCOMRAM:
    85                           	opt stack 0
    86  000005                     ??_servoRotate0:
    87  000005                     ??_servoRotate90:
    88  000005                     
    89                           ; 1 bytes @ 0x0
    90  000005                     	ds	1
    91  000006                     ??_main:
    92                           
    93                           ; 1 bytes @ 0x1
    94  000006                     	ds	2
    95                           
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 99 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   119 ;;Total ram usage:        2 bytes
   120 ;; Hardware stack levels required when called:    1
   121 ;; This function calls:
   122 ;;		_servoRotate0
   123 ;;		_servoRotate90
   124 ;; This function is called by:
   125 ;;		Startup code after reset
   126 ;; This function uses a non-reentrant model
   127 ;;
   128                           
   129                           	psect	text0
   130  00FF58                     __ptext0:
   131                           	opt stack 0
   132  00FF58                     _main:
   133                           	opt stack 30
   134                           
   135                           ;main.c: 103: servoRotate90();
   136                           
   137                           ;incstack = 0
   138                           ;main.c: 101: while(1){
   139  00FF58  ECBD  F07F         	call	_servoRotate90	;wreg free
   140                           
   141                           ;main.c: 104: _delay((unsigned long)((500)*(40000000/4000.0)));
   142  00FF5C  0E1A               	movlw	26
   143  00FF5E  6E07               	movwf	(??_main+1)& (0+255),c
   144  00FF60  0E5E               	movlw	94
   145  00FF62  6E06               	movwf	??_main& (0+255),c
   146  00FF64  0E6E               	movlw	110
   147  00FF66                     u57:
   148  00FF66  2EE8               	decfsz	wreg,f,c
   149  00FF68  D7FE               	bra	u57
   150  00FF6A  2E06               	decfsz	??_main& (0+255),f,c
   151  00FF6C  D7FC               	bra	u57
   152  00FF6E  2E07               	decfsz	(??_main+1)& (0+255),f,c
   153  00FF70  D7FA               	bra	u57
   154  00FF72  D000               	nop2	
   155                           
   156                           ;main.c: 105: servoRotate0();
   157  00FF74  ECDE  F07F         	call	_servoRotate0	;wreg free
   158  00FF78  D7EF               	goto	_main
   159  00FF7A                     __end_of_main:
   160                           	opt stack 0
   161                           wreg	equ	0xFE8
   162                           
   163 ;; *************** function _servoRotate90 *****************
   164 ;; Defined at:
   165 ;;		line 86 in file "main.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   183 ;;Total ram usage:        1 bytes
   184 ;; Hardware stack levels used:    1
   185 ;; This function calls:
   186 ;;		Nothing
   187 ;; This function is called by:
   188 ;;		_main
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           	psect	text1
   193  00FF7A                     __ptext1:
   194                           	opt stack 0
   195  00FF7A                     _servoRotate90:
   196                           	opt stack 30
   197                           
   198                           ;main.c: 87: for(i=0;i<50;i++)
   199                           
   200                           ;incstack = 0
   201  00FF7A  0E00               	movlw	0
   202  00FF7C  6E02               	movwf	_i+1,c
   203  00FF7E  0E00               	movlw	0
   204  00FF80  6E01               	movwf	_i,c
   205  00FF82                     l666:
   206  00FF82  5002               	movf	_i+1,w,c
   207  00FF84  E11A               	bnz	l20
   208  00FF86  0E32               	movlw	50
   209  00FF88  5C01               	subwf	_i,w,c
   210  00FF8A  B0D8               	btfsc	status,0,c
   211  00FF8C  0012               	return	
   212                           
   213                           ;main.c: 88: {
   214                           ;main.c: 89: LATAbits.LATA0 = 1;
   215  00FF8E  8089               	bsf	3977,0,c	;volatile
   216                           
   217                           ;main.c: 90: TRISAbits.RA0 = 0;
   218  00FF90  9092               	bcf	3986,0,c	;volatile
   219                           
   220                           ;main.c: 91: _delay((unsigned long)((1500)*(40000000/4000000.0)));
   221  00FF92  0E14               	movlw	20
   222  00FF94  6E05               	movwf	??_servoRotate90& (0+255),c
   223  00FF96  0E7A               	movlw	122
   224  00FF98                     u67:
   225  00FF98  2EE8               	decfsz	wreg,f,c
   226  00FF9A  D7FE               	bra	u67
   227  00FF9C  2E05               	decfsz	??_servoRotate90& (0+255),f,c
   228  00FF9E  D7FC               	bra	u67
   229                           
   230                           ;main.c: 92: LATAbits.LATA0 = 0;
   231  00FFA0  9089               	bcf	3977,0,c	;volatile
   232                           
   233                           ;main.c: 93: TRISAbits.RA0 = 0;
   234  00FFA2  9092               	bcf	3986,0,c	;volatile
   235                           
   236                           ;main.c: 94: _delay((unsigned long)((18500)*(40000000/4000000.0)));
   237  00FFA4  0EF1               	movlw	241
   238  00FFA6  6E05               	movwf	??_servoRotate90& (0+255),c
   239  00FFA8  0E41               	movlw	65
   240  00FFAA                     u77:
   241  00FFAA  2EE8               	decfsz	wreg,f,c
   242  00FFAC  D7FE               	bra	u77
   243  00FFAE  2E05               	decfsz	??_servoRotate90& (0+255),f,c
   244  00FFB0  D7FC               	bra	u77
   245  00FFB2  F000               	nop	
   246  00FFB4  4A01               	infsnz	_i,f,c
   247  00FFB6  2A02               	incf	_i+1,f,c
   248  00FFB8  D7E4               	goto	l666
   249  00FFBA                     l20:
   250  00FFBA  0012               	return		;funcret
   251  00FFBC                     __end_of_servoRotate90:
   252                           	opt stack 0
   253                           wreg	equ	0xFE8
   254                           status	equ	0xFD8
   255                           
   256 ;; *************** function _servoRotate0 *****************
   257 ;; Defined at:
   258 ;;		line 72 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;Total ram usage:        1 bytes
   277 ;; Hardware stack levels used:    1
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		_main
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text2
   286  00FFBC                     __ptext2:
   287                           	opt stack 0
   288  00FFBC                     _servoRotate0:
   289                           	opt stack 30
   290                           
   291                           ;main.c: 74: for (i = 0; i<50; i++){
   292                           
   293                           ;incstack = 0
   294  00FFBC  0E00               	movlw	0
   295  00FFBE  6E02               	movwf	_i+1,c
   296  00FFC0  0E00               	movlw	0
   297  00FFC2  6E01               	movwf	_i,c
   298  00FFC4                     l652:
   299  00FFC4  5002               	movf	_i+1,w,c
   300  00FFC6  E11B               	bnz	l15
   301  00FFC8  0E32               	movlw	50
   302  00FFCA  5C01               	subwf	_i,w,c
   303  00FFCC  B0D8               	btfsc	status,0,c
   304  00FFCE  0012               	return	
   305                           
   306                           ;main.c: 75: LATAbits.LATA0 = 1;
   307  00FFD0  8089               	bsf	3977,0,c	;volatile
   308                           
   309                           ;main.c: 76: TRISAbits.RA0 = 0;
   310  00FFD2  9092               	bcf	3986,0,c	;volatile
   311                           
   312                           ;main.c: 77: _delay((unsigned long)((800)*(40000000/4000000.0)));
   313  00FFD4  0E0B               	movlw	11
   314  00FFD6  6E05               	movwf	??_servoRotate0& (0+255),c
   315  00FFD8  0E62               	movlw	98
   316  00FFDA                     u87:
   317  00FFDA  2EE8               	decfsz	wreg,f,c
   318  00FFDC  D7FE               	bra	u87
   319  00FFDE  2E05               	decfsz	??_servoRotate0& (0+255),f,c
   320  00FFE0  D7FC               	bra	u87
   321  00FFE2  D000               	nop2	
   322                           
   323                           ;main.c: 78: LATAbits.LATA0 = 0;
   324  00FFE4  9089               	bcf	3977,0,c	;volatile
   325                           
   326                           ;main.c: 79: TRISAbits.RA0 = 0;
   327  00FFE6  9092               	bcf	3986,0,c	;volatile
   328                           
   329                           ;main.c: 80: _delay((unsigned long)((19200)*(40000000/4000000.0)));
   330  00FFE8  0EFA               	movlw	250
   331  00FFEA  6E05               	movwf	??_servoRotate0& (0+255),c
   332  00FFEC  0E58               	movlw	88
   333  00FFEE                     u97:
   334  00FFEE  2EE8               	decfsz	wreg,f,c
   335  00FFF0  D7FE               	bra	u97
   336  00FFF2  2E05               	decfsz	??_servoRotate0& (0+255),f,c
   337  00FFF4  D7FC               	bra	u97
   338  00FFF6  D000               	nop2	
   339  00FFF8  4A01               	infsnz	_i,f,c
   340  00FFFA  2A02               	incf	_i+1,f,c
   341  00FFFC  D7E3               	goto	l652
   342  00FFFE                     l15:
   343  00FFFE  0012               	return		;funcret
   344  010000                     __end_of_servoRotate0:
   345                           	opt stack 0
   346  0000                     wreg	equ	0xFE8
   347                           status	equ	0xFD8
   348                           wreg	equ	0xFE8
   349                           status	equ	0xFD8
   350                           
   351                           	psect	rparam
   352  0000                     wreg	equ	0xFE8
   353                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      3       7
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_servoRotate0
    _main->_servoRotate90

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMRAM     2     2      0
                       _servoRotate0
                      _servoRotate90
 ---------------------------------------------------------------------------------
 (1) _servoRotate90                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servoRotate0
   _servoRotate90

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      3       7       1        5.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7      34        0.0%
DATA                 0      0       7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 20 17:09:57 2018

                      _i 0001                       l20 FFBA                       l15 FFFE  
            __CFG_CPD$ON 000000                       u57 FF66                       u67 FF98  
                     u77 FFAA                       u87 FFDA                       u97 FFEE  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l652 FFC4  
                    l666 FF82             __CFG_CPB$OFF 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _main FF58  
                   start 0000            __CFG_IESO$OFF 000000          ??_servoRotate90 0005  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0005  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _angle 0003  
                  status 000FD8           __CFG_PBADEN$ON 000000          __initialization FF4A  
           __end_of_main FF7A           __CFG_OSC$HSPLL 000000                   ??_main 0006  
          __activetblptr 000000           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
             __accesstop 0080  __end_of__initialization FF52            ___rparam_used 000001  
         __pcstackCOMRAM 0005                  __Hparam 0000                  __Lparam 0000  
  __end_of_servoRotate90 FFBC                  __pcinit FF4A                  __ramtop 1000  
                __ptext0 FF58                  __ptext1 FF7A                  __ptext2 FFBC  
   end_of_initialization FF52            ?_servoRotate0 0005                _TRISAbits 000F92  
         ??_servoRotate0 0005      start_initialization FF4A         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0001        __CFG_CCP2MX$PORTC 000000     __end_of_servoRotate0 0000  
               _LATAbits 000F89         __CFG_WDTPS$32768 000000   __size_of_servoRotate90 0042  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
          __size_of_main 0022            _servoRotate90 FF7A    __size_of_servoRotate0 0044  
         ?_servoRotate90 0005             _servoRotate0 FFBC  
