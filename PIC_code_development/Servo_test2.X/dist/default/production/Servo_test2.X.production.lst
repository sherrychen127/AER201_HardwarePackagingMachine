

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Mar 13 12:45:42 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4620 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TRISDbits	set	3989
    49  0000                     _LATDbits	set	3980
    50                           
    51                           ; #config settings
    52  0000                     
    53                           	psect	cinit
    54  00FF1C                     __pcinit:
    55                           	opt stack 0
    56  00FF1C                     start_initialization:
    57                           	opt stack 0
    58  00FF1C                     __initialization:
    59                           	opt stack 0
    60                           
    61                           ; Clear objects allocated to COMRAM (6 bytes)
    62  00FF1C  6A06               	clrf	(__pbssCOMRAM+5)& (0+255),c
    63  00FF1E  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    64  00FF20  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    65  00FF22  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    66  00FF24  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    67  00FF26  6A01               	clrf	__pbssCOMRAM& (0+255),c
    68  00FF28                     end_of_initialization:
    69                           	opt stack 0
    70  00FF28                     __end_of__initialization:
    71                           	opt stack 0
    72  00FF28  0100               	movlb	0
    73  00FF2A  EFD9  F07F         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	bssCOMRAM
    76  000001                     __pbssCOMRAM:
    77                           	opt stack 0
    78  000001                     _counter_test:
    79                           	opt stack 0
    80  000001                     	ds	2
    81  000003                     _i:
    82                           	opt stack 0
    83  000003                     	ds	2
    84  000005                     _angle:
    85                           	opt stack 0
    86  000005                     	ds	2
    87                           
    88                           	psect	cstackCOMRAM
    89  000007                     __pcstackCOMRAM:
    90                           	opt stack 0
    91  000007                     ??_servoRotate180_2:
    92  000007                     ??_servoRotate90_2:
    93  000007                     
    94                           ; 1 bytes @ 0x0
    95  000007                     	ds	1
    96  000008                     servoRotate180_2@i:
    97                           	opt stack 0
    98                           
    99                           ; 2 bytes @ 0x1
   100  000008                     	ds	2
   101  00000A                     ??_main:
   102                           
   103                           ; 1 bytes @ 0x3
   104  00000A                     	ds	2
   105                           
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 314 in file "main.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;		None
   116 ;; Return value:  Size  Location     Type
   117 ;;                  1    wreg      void 
   118 ;; Registers used:
   119 ;;		wreg, status,2, status,0, cstack
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   129 ;;Total ram usage:        2 bytes
   130 ;; Hardware stack levels required when called:    1
   131 ;; This function calls:
   132 ;;		_servoRotate180_2
   133 ;;		_servoRotate90_2
   134 ;; This function is called by:
   135 ;;		Startup code after reset
   136 ;; This function uses a non-reentrant model
   137 ;;
   138                           
   139                           	psect	text0
   140  00FFB2                     __ptext0:
   141                           	opt stack 0
   142  00FFB2                     _main:
   143                           	opt stack 30
   144                           
   145                           ;main.c: 327: _delay((unsigned long)((1000)*(40000000/4000.0)));
   146                           
   147                           ;incstack = 0
   148  00FFB2  0E33               	movlw	51
   149  00FFB4  6E0B               	movwf	(??_main+1)& (0+255),c
   150  00FFB6  0EBB               	movlw	187
   151  00FFB8  6E0A               	movwf	??_main& (0+255),c
   152  00FFBA  0EE0               	movlw	224
   153  00FFBC                     u377:
   154  00FFBC  2EE8               	decfsz	wreg,f,c
   155  00FFBE  D7FE               	bra	u377
   156  00FFC0  2E0A               	decfsz	??_main& (0+255),f,c
   157  00FFC2  D7FC               	bra	u377
   158  00FFC4  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   159  00FFC6  D7FA               	bra	u377
   160                           
   161                           ;main.c: 328: servoRotate90_2();
   162  00FFC8  EC97  F07F         	call	_servoRotate90_2	;wreg free
   163                           
   164                           ;main.c: 329: _delay((unsigned long)((1000)*(40000000/4000.0)));
   165  00FFCC  0E33               	movlw	51
   166  00FFCE  6E0B               	movwf	(??_main+1)& (0+255),c
   167  00FFD0  0EBB               	movlw	187
   168  00FFD2  6E0A               	movwf	??_main& (0+255),c
   169  00FFD4  0EE0               	movlw	224
   170  00FFD6                     u387:
   171  00FFD6  2EE8               	decfsz	wreg,f,c
   172  00FFD8  D7FE               	bra	u387
   173  00FFDA  2E0A               	decfsz	??_main& (0+255),f,c
   174  00FFDC  D7FC               	bra	u387
   175  00FFDE  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   176  00FFE0  D7FA               	bra	u387
   177                           
   178                           ;main.c: 330: servoRotate180_2();
   179  00FFE2  ECB7  F07F         	call	_servoRotate180_2	;wreg free
   180                           
   181                           ;main.c: 331: _delay((unsigned long)((1000)*(40000000/4000.0)));
   182  00FFE6  0E33               	movlw	51
   183  00FFE8  6E0B               	movwf	(??_main+1)& (0+255),c
   184  00FFEA  0EBB               	movlw	187
   185  00FFEC  6E0A               	movwf	??_main& (0+255),c
   186  00FFEE  0EE0               	movlw	224
   187  00FFF0                     u397:
   188  00FFF0  2EE8               	decfsz	wreg,f,c
   189  00FFF2  D7FE               	bra	u397
   190  00FFF4  2E0A               	decfsz	??_main& (0+255),f,c
   191  00FFF6  D7FC               	bra	u397
   192  00FFF8  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   193  00FFFA  D7FA               	bra	u397
   194  00FFFC  EF00  F000         	goto	start
   195  010000                     __end_of_main:
   196                           	opt stack 0
   197                           wreg	equ	0xFE8
   198                           
   199 ;; *************** function _servoRotate90_2 *****************
   200 ;; Defined at:
   201 ;;		line 161 in file "main.c"
   202 ;; Parameters:    Size  Location     Type
   203 ;;		None
   204 ;; Auto vars:     Size  Location     Type
   205 ;;		None
   206 ;; Return value:  Size  Location     Type
   207 ;;                  1    wreg      void 
   208 ;; Registers used:
   209 ;;		wreg, status,2, status,0
   210 ;; Tracked objects:
   211 ;;		On entry : 0/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   219 ;;Total ram usage:        1 bytes
   220 ;; Hardware stack levels used:    1
   221 ;; This function calls:
   222 ;;		Nothing
   223 ;; This function is called by:
   224 ;;		_main
   225 ;; This function uses a non-reentrant model
   226 ;;
   227                           
   228                           	psect	text1
   229  00FF2E                     __ptext1:
   230                           	opt stack 0
   231  00FF2E                     _servoRotate90_2:
   232                           	opt stack 30
   233                           
   234                           ;main.c: 162: for(i=0;i<50;i++)
   235                           
   236                           ;incstack = 0
   237  00FF2E  0E00               	movlw	0
   238  00FF30  6E04               	movwf	_i+1,c
   239  00FF32  0E00               	movlw	0
   240  00FF34  6E03               	movwf	_i,c
   241  00FF36                     l745:
   242  00FF36  5004               	movf	_i+1,w,c
   243  00FF38  E119               	bnz	l57
   244  00FF3A  0E32               	movlw	50
   245  00FF3C  5C03               	subwf	_i,w,c
   246  00FF3E  B0D8               	btfsc	status,0,c
   247  00FF40  0012               	return	
   248                           
   249                           ;main.c: 163: {
   250                           ;main.c: 164: LATDbits.LATD2 = 1;
   251  00FF42  848C               	bsf	3980,2,c	;volatile
   252                           
   253                           ;main.c: 165: TRISDbits.RD2 = 0;
   254  00FF44  9495               	bcf	3989,2,c	;volatile
   255                           
   256                           ;main.c: 166: _delay((unsigned long)((1000)*(40000000/4000000.0)));
   257  00FF46  0E0D               	movlw	13
   258  00FF48  6E07               	movwf	??_servoRotate90_2& (0+255),c
   259  00FF4A  0EFC               	movlw	252
   260  00FF4C                     u407:
   261  00FF4C  2EE8               	decfsz	wreg,f,c
   262  00FF4E  D7FE               	bra	u407
   263  00FF50  2E07               	decfsz	??_servoRotate90_2& (0+255),f,c
   264  00FF52  D7FC               	bra	u407
   265                           
   266                           ;main.c: 167: LATDbits.LATD2 = 0;
   267  00FF54  948C               	bcf	3980,2,c	;volatile
   268                           
   269                           ;main.c: 168: TRISDbits.RD2 = 0;
   270  00FF56  9495               	bcf	3989,2,c	;volatile
   271                           
   272                           ;main.c: 169: _delay((unsigned long)((19000)*(40000000/4000000.0)));
   273  00FF58  0EF7               	movlw	247
   274  00FF5A  6E07               	movwf	??_servoRotate90_2& (0+255),c
   275  00FF5C  0EC0               	movlw	192
   276  00FF5E                     u417:
   277  00FF5E  2EE8               	decfsz	wreg,f,c
   278  00FF60  D7FE               	bra	u417
   279  00FF62  2E07               	decfsz	??_servoRotate90_2& (0+255),f,c
   280  00FF64  D7FC               	bra	u417
   281  00FF66  4A03               	infsnz	_i,f,c
   282  00FF68  2A04               	incf	_i+1,f,c
   283  00FF6A  D7E5               	goto	l745
   284  00FF6C                     l57:
   285  00FF6C  0012               	return		;funcret
   286  00FF6E                     __end_of_servoRotate90_2:
   287                           	opt stack 0
   288                           wreg	equ	0xFE8
   289                           status	equ	0xFD8
   290                           
   291 ;; *************** function _servoRotate180_2 *****************
   292 ;; Defined at:
   293 ;;		line 132 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;  i               2    1[COMRAM] unsigned int 
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   311 ;;Total ram usage:        3 bytes
   312 ;; Hardware stack levels used:    1
   313 ;; This function calls:
   314 ;;		Nothing
   315 ;; This function is called by:
   316 ;;		_main
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text2
   321  00FF6E                     __ptext2:
   322                           	opt stack 0
   323  00FF6E                     _servoRotate180_2:
   324                           	opt stack 30
   325                           
   326                           ;main.c: 134: unsigned int i;
   327                           ;main.c: 135: for(i=0;i<50;i++)
   328                           
   329                           ;incstack = 0
   330  00FF6E  0E00               	movlw	0
   331  00FF70  6E09               	movwf	servoRotate180_2@i+1,c
   332  00FF72  0E00               	movlw	0
   333  00FF74  6E08               	movwf	servoRotate180_2@i,c
   334  00FF76                     l731:
   335  00FF76  5009               	movf	servoRotate180_2@i+1,w,c
   336  00FF78  E11B               	bnz	l47
   337  00FF7A  0E32               	movlw	50
   338  00FF7C  5C08               	subwf	servoRotate180_2@i,w,c
   339  00FF7E  B0D8               	btfsc	status,0,c
   340  00FF80  0012               	return	
   341                           
   342                           ;main.c: 136: {
   343                           ;main.c: 137: LATDbits.LATD2 = 1;
   344  00FF82  848C               	bsf	3980,2,c	;volatile
   345                           
   346                           ;main.c: 138: TRISDbits.RD2 = 0;
   347  00FF84  9495               	bcf	3989,2,c	;volatile
   348                           
   349                           ;main.c: 139: _delay((unsigned long)((2000)*(40000000/4000000.0)));
   350  00FF86  0E1A               	movlw	26
   351  00FF88  6E07               	movwf	??_servoRotate180_2& (0+255),c
   352  00FF8A  0EF8               	movlw	248
   353  00FF8C                     u427:
   354  00FF8C  2EE8               	decfsz	wreg,f,c
   355  00FF8E  D7FE               	bra	u427
   356  00FF90  2E07               	decfsz	??_servoRotate180_2& (0+255),f,c
   357  00FF92  D7FC               	bra	u427
   358  00FF94  D000               	nop2	
   359                           
   360                           ;main.c: 140: LATDbits.LATD2 = 0;
   361  00FF96  948C               	bcf	3980,2,c	;volatile
   362                           
   363                           ;main.c: 141: TRISDbits.RD2 = 0;
   364  00FF98  9495               	bcf	3989,2,c	;volatile
   365                           
   366                           ;main.c: 142: _delay((unsigned long)((18000)*(40000000/4000000.0)));
   367  00FF9A  0EEA               	movlw	234
   368  00FF9C  6E07               	movwf	??_servoRotate180_2& (0+255),c
   369  00FF9E  0EC3               	movlw	195
   370  00FFA0                     u437:
   371  00FFA0  2EE8               	decfsz	wreg,f,c
   372  00FFA2  D7FE               	bra	u437
   373  00FFA4  2E07               	decfsz	??_servoRotate180_2& (0+255),f,c
   374  00FFA6  D7FC               	bra	u437
   375  00FFA8  F000               	nop	
   376  00FFAA  4A08               	infsnz	servoRotate180_2@i,f,c
   377  00FFAC  2A09               	incf	servoRotate180_2@i+1,f,c
   378  00FFAE  D7E3               	goto	l731
   379  00FFB0                     l47:
   380  00FFB0  0012               	return		;funcret
   381  00FFB2                     __end_of_servoRotate180_2:
   382                           	opt stack 0
   383  0000                     wreg	equ	0xFE8
   384                           status	equ	0xFD8
   385                           wreg	equ	0xFE8
   386                           status	equ	0xFD8
   387                           
   388                           	psect	rparam
   389  0000                     wreg	equ	0xFE8
   390                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      5      11
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_servoRotate180_2

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              3 COMRAM     2     2      0
                   _servoRotate180_2
                    _servoRotate90_2
 ---------------------------------------------------------------------------------
 (1) _servoRotate90_2                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate180_2                                     3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servoRotate180_2
   _servoRotate90_2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      5       B       1        8.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      34        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Mar 13 12:45:42 2018

                        _i 0003                         l47 FFB0                         l57 FF6C  
              __CFG_CPD$ON 000000                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
                      l731 FF76                        l745 FF36               __CFG_CPB$OFF 000000  
                      u407 FF4C                        u417 FF5E                        u427 FF8C  
                      u437 FFA0                        u377 FFBC                        u387 FFD6  
                      u397 FFF0                        wreg 000FE8               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       _main FFB2                       start 0000  
            __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000               ___param_bank 000000  
                    ?_main 0007              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
 __size_of_servoRotate90_2 0040             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
           __CFG_EBTRB$OFF 000000                      _angle 0005                      status 000FD8  
           __CFG_PBADEN$ON 000000            __initialization FF1C               __end_of_main 0000  
           __CFG_OSC$HSPLL 000000                     ??_main 000A              __activetblptr 000000  
           __CFG_XINST$OFF 000000             __CFG_STVREN$ON 000000   __end_of_servoRotate180_2 FFB2  
        ??_servoRotate90_2 0007                 __accesstop 0080    __end_of__initialization FF28  
        servoRotate180_2@i 0008              ___rparam_used 000001             __pcstackCOMRAM 0007  
                  __Hparam 0000                    __Lparam 0000                    __pcinit FF1C  
                  __ramtop 1000                    __ptext0 FFB2                    __ptext1 FF2E  
                  __ptext2 FF6E       end_of_initialization FF28          ?_servoRotate180_2 0007  
          _servoRotate90_2 FF2E         ??_servoRotate180_2 0007                  _TRISDbits 000F95  
      start_initialization FF1C               _counter_test 0001    __end_of_servoRotate90_2 FF6E  
         __CFG_LPT1OSC$OFF 000000                __pbssCOMRAM 0001          __CFG_CCP2MX$PORTC 000000  
                 _LATDbits 000F8C           __CFG_WDTPS$32768 000000           ?_servoRotate90_2 0007  
__size_of_servoRotate180_2 0044                   __Hrparam 0000                   __Lrparam 0000  
       __CFG_BOREN$SBORDIS 000000              __size_of_main 004E           _servoRotate180_2 FF6E  
