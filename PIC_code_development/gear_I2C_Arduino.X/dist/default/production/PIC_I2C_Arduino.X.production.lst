

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 24 11:34:13 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	smallconst
    59  001000                     __psmallconst:
    60                           	opt stack 0
    61  001000  00                 	db	0
    62  001001                     _keys:
    63                           	opt stack 0
    64  001001  31                 	db	49
    65  001002  32                 	db	50
    66  001003  33                 	db	51
    67  001004  41                 	db	65
    68  001005  34                 	db	52
    69  001006  35                 	db	53
    70  001007  36                 	db	54
    71  001008  42                 	db	66
    72  001009  37                 	db	55
    73  00100A  38                 	db	56
    74  00100B  39                 	db	57
    75  00100C  43                 	db	67
    76  00100D  2A                 	db	42
    77  00100E  30                 	db	48
    78  00100F  23                 	db	35
    79  001010  44                 	db	68
    80  001011  00                 	db	0
    81  001012                     __end_of_keys:
    82                           	opt stack 0
    83  001012                     _LCD_LEFT:
    84                           	opt stack 0
    85  001012  00                 	db	0
    86  001013                     __end_of_LCD_LEFT:
    87                           	opt stack 0
    88  001013                     _LCD_RIGHT:
    89                           	opt stack 0
    90  001013  01                 	db	1
    91  001014                     __end_of_LCD_RIGHT:
    92                           	opt stack 0
    93  001014                     _LCD_SIZE_VERT:
    94                           	opt stack 0
    95  001014  02                 	db	2
    96  001015                     __end_of_LCD_SIZE_VERT:
    97                           	opt stack 0
    98  001015                     _LCD_SIZE_HORZ:
    99                           	opt stack 0
   100  001015  10                 	db	16
   101  001016                     __end_of_LCD_SIZE_HORZ:
   102                           	opt stack 0
   103  001016                     _LCD_VERT_LIMIT:
   104                           	opt stack 0
   105  001016  02                 	db	2
   106  001017                     __end_of_LCD_VERT_LIMIT:
   107                           	opt stack 0
   108  001017                     _LCD_HORZ_LIMIT:
   109                           	opt stack 0
   110  001017  28                 	db	40
   111  001018                     __end_of_LCD_HORZ_LIMIT:
   112                           	opt stack 0
   113  0000                     _SSPBUF	set	4041
   114  0000                     _SSPCON2bits	set	4037
   115  0000                     _SSPADD	set	4040
   116  0000                     _SSPCON2	set	4037
   117  0000                     _SSPCON1	set	4038
   118  0000                     _SSPSTAT	set	4039
   119  0000                     _TRISCbits	set	3988
   120  0000                     _SSPCON1bits	set	4038
   121  0000                     _INTCONbits	set	4082
   122  0000                     _LATDbits	set	3980
   123  0000                     _ADCON1	set	4033
   124  0000                     _ADCON0	set	4034
   125  0000                     _TRISE	set	3990
   126  0000                     _TRISD	set	3989
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISB	set	3987
   129  0000                     _TRISA	set	3986
   130  0000                     _LATE	set	3981
   131  0000                     _LATD	set	3980
   132  0000                     _LATC	set	3979
   133  0000                     _LATB	set	3978
   134  0000                     _LATA	set	3977
   135                           
   136                           ; #config settings
   137  001018  00                 	db	0	; dummy byte at the end
   138  0000                     
   139                           	psect	cinit
   140  00128E                     __pcinit:
   141                           	opt stack 0
   142  00128E                     start_initialization:
   143                           	opt stack 0
   144  00128E                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   148  00128E  6A1B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   149                           
   150                           ; Clear objects allocated to COMRAM (2 bytes)
   151  001290  6A1A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   152  001292  6A19               	clrf	__pbssCOMRAM& (0+255),c
   153  001294                     end_of_initialization:
   154                           	opt stack 0
   155  001294                     __end_of__initialization:
   156                           	opt stack 0
   157  001294  0E00               	movlw	low (__Lsmallconst shr (0+16))
   158  001296  6EF8               	movwf	tblptru,c
   159  001298  0E10               	movlw	high __Lsmallconst
   160  00129A  6EF7               	movwf	tblptrh,c
   161  00129C  0100               	movlb	0
   162  00129E  EF0D  F008         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           
   166                           	psect	bitbssCOMRAM
   167  0000D8                     __pbitbssCOMRAM:
   168                           	opt stack 0
   169  0000D8                     main@SEND:
   170                           	opt stack 0
   171  0000D8                     	ds	1
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           
   175                           	psect	bssCOMRAM
   176  000019                     __pbssCOMRAM:
   177                           	opt stack 0
   178  000019                     lcd@LCDinterruptState:
   179                           	opt stack 0
   180  000019                     	ds	1
   181  00001A                     	ds	1
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           
   185                           	psect	cstackCOMRAM
   186  000001                     __pcstackCOMRAM:
   187                           	opt stack 0
   188  000001                     ??_I2C_Master_Wait:
   189  000001                     ?___lldiv:
   190                           	opt stack 0
   191  000001                     lcdNibble@temp:
   192                           	opt stack 0
   193  000001                     ___lldiv@dividend:
   194                           	opt stack 0
   195                           
   196                           ; 4 bytes @ 0x0
   197  000001                     	ds	1
   198  000002                     lcdNibble@data:
   199                           	opt stack 0
   200  000002                     I2C_Master_Write@byteToWrite:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x1
   204  000002                     	ds	1
   205  000003                     lcdInst@data:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x2
   209  000003                     	ds	1
   210  000004                     ??_initLCD:
   211  000004                     
   212                           ; 1 bytes @ 0x3
   213  000004                     	ds	1
   214  000005                     ___lldiv@divisor:
   215                           	opt stack 0
   216                           
   217                           ; 4 bytes @ 0x4
   218  000005                     	ds	4
   219  000009                     ___lldiv@quotient:
   220                           	opt stack 0
   221                           
   222                           ; 4 bytes @ 0x8
   223  000009                     	ds	4
   224  00000D                     ___lldiv@counter:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0xC
   228  00000D                     	ds	1
   229  00000E                     I2C_Master_Init@clockFreq:
   230                           	opt stack 0
   231                           
   232                           ; 4 bytes @ 0xD
   233  00000E                     	ds	4
   234  000012                     ??_I2C_Master_Init:
   235                           
   236                           ; 1 bytes @ 0x11
   237  000012                     	ds	4
   238  000016                     ??_main:
   239                           
   240                           ; 1 bytes @ 0x15
   241  000016                     	ds	2
   242  000018                     main@counter:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x17
   246  000018                     	ds	1
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 33 in file "main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  mem             3    0        unsigned char [3]
   260 ;;  counter         1   23[COMRAM] unsigned char 
   261 ;;  data            1    0        unsigned char 
   262 ;;  keypress        1    0        unsigned char 
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;Total ram usage:        3 bytes
   277 ;; Hardware stack levels required when called:    3
   278 ;; This function calls:
   279 ;;		_I2C_Master_Init
   280 ;;		_I2C_Master_Start
   281 ;;		_I2C_Master_Stop
   282 ;;		_I2C_Master_Write
   283 ;;		_initLCD
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text0
   290  00101A                     __ptext0:
   291                           	opt stack 0
   292  00101A                     _main:
   293                           	opt stack 28
   294                           
   295                           ;main.c: 39: LATA = 0x00;
   296                           
   297                           ;incstack = 0
   298  00101A  0E00               	movlw	0
   299  00101C  6E89               	movwf	3977,c	;volatile
   300                           
   301                           ;main.c: 40: LATB = 0x00;
   302  00101E  0E00               	movlw	0
   303  001020  6E8A               	movwf	3978,c	;volatile
   304                           
   305                           ;main.c: 41: LATC = 0x00;
   306  001022  0E00               	movlw	0
   307  001024  6E8B               	movwf	3979,c	;volatile
   308                           
   309                           ;main.c: 42: LATD = 0x00;
   310  001026  0E00               	movlw	0
   311  001028  6E8C               	movwf	3980,c	;volatile
   312                           
   313                           ;main.c: 43: LATE = 0x00;
   314  00102A  0E00               	movlw	0
   315  00102C  6E8D               	movwf	3981,c	;volatile
   316                           
   317                           ;main.c: 47: TRISA = 0xFF;
   318  00102E  6892               	setf	3986,c	;volatile
   319                           
   320                           ;main.c: 48: TRISB = 0xFF;
   321  001030  6893               	setf	3987,c	;volatile
   322                           
   323                           ;main.c: 49: TRISC = 0b10000000;
   324  001032  0E80               	movlw	128
   325  001034  6E94               	movwf	3988,c	;volatile
   326                           
   327                           ;main.c: 53: TRISD = 0x00;
   328  001036  0E00               	movlw	0
   329  001038  6E95               	movwf	3989,c	;volatile
   330                           
   331                           ;main.c: 54: TRISE = 0x00;
   332  00103A  0E00               	movlw	0
   333  00103C  6E96               	movwf	3990,c	;volatile
   334                           
   335                           ;main.c: 57: ADCON0 = 0x00;
   336  00103E  0E00               	movlw	0
   337  001040  6EC2               	movwf	4034,c	;volatile
   338                           
   339                           ;main.c: 58: ADCON1 = 0b00001111;
   340  001042  0E0F               	movlw	15
   341  001044  6EC1               	movwf	4033,c	;volatile
   342                           
   343                           ;main.c: 62: initLCD();
   344  001046  EC21  F009         	call	_initLCD	;wreg free
   345                           
   346                           ;main.c: 65: I2C_Master_Init(100000);
   347  00104A  0EA0               	movlw	160
   348  00104C  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   349  00104E  0E86               	movlw	134
   350  001050  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   351  001052  0E01               	movlw	1
   352  001054  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   353  001056  0E00               	movlw	0
   354  001058  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   355  00105A  ECF3  F008         	call	_I2C_Master_Init	;wreg free
   356                           
   357                           ;main.c: 66: I2C_Master_Start();
   358  00105E  EC6D  F009         	call	_I2C_Master_Start	;wreg free
   359                           
   360                           ;main.c: 69: I2C_Master_Write(0b00010000);
   361  001062  0E00               	movlw	0
   362  001064  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   363  001066  0E10               	movlw	16
   364  001068  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   365  00106A  EC64  F009         	call	_I2C_Master_Write	;wreg free
   366                           
   367                           ;main.c: 70: I2C_Master_Stop();
   368  00106E  EC69  F009         	call	_I2C_Master_Stop	;wreg free
   369                           
   370                           ;main.c: 73: unsigned char mem[3];
   371                           ;main.c: 74: unsigned char counter = 0;
   372  001072  0E00               	movlw	0
   373  001074  6E18               	movwf	main@counter,c
   374                           
   375                           ;main.c: 75: unsigned char keypress;
   376                           ;main.c: 76: unsigned char data;
   377                           ;main.c: 77: static bit SEND;
   378                           ;main.c: 78: SEND = 1;
   379  001076  801B               	bsf	main@SEND/(0+8),main@SEND& (0+7),c
   380  001078                     l59:
   381                           
   382                           ;main.c: 84: I2C_Master_Start();
   383  001078  EC6D  F009         	call	_I2C_Master_Start	;wreg free
   384                           
   385                           ;main.c: 85: I2C_Master_Write(0b00010000);
   386  00107C  0E00               	movlw	0
   387  00107E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   388  001080  0E10               	movlw	16
   389  001082  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   390  001084  EC64  F009         	call	_I2C_Master_Write	;wreg free
   391                           
   392                           ;main.c: 86: I2C_Master_Write('1');
   393  001088  0E00               	movlw	0
   394  00108A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   395  00108C  0E31               	movlw	49
   396  00108E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   397  001090  EC64  F009         	call	_I2C_Master_Write	;wreg free
   398                           
   399                           ;main.c: 87: I2C_Master_Stop();
   400  001094  EC69  F009         	call	_I2C_Master_Stop	;wreg free
   401                           
   402                           ;main.c: 89: _delay((unsigned long)((1000)*(40000000/4000.0)));
   403  001098  0E33               	movlw	51
   404  00109A  6E17               	movwf	(??_main+1)& (0+255),c
   405  00109C  0EBB               	movlw	187
   406  00109E  6E16               	movwf	??_main& (0+255),c
   407  0010A0  0EE0               	movlw	224
   408  0010A2                     u207:
   409  0010A2  2EE8               	decfsz	wreg,f,c
   410  0010A4  D7FE               	bra	u207
   411  0010A6  2E16               	decfsz	??_main& (0+255),f,c
   412  0010A8  D7FC               	bra	u207
   413  0010AA  2E17               	decfsz	(??_main+1)& (0+255),f,c
   414  0010AC  D7FA               	bra	u207
   415                           
   416                           ;main.c: 91: I2C_Master_Start();
   417  0010AE  EC6D  F009         	call	_I2C_Master_Start	;wreg free
   418                           
   419                           ;main.c: 92: I2C_Master_Write(0b00010000);
   420  0010B2  0E00               	movlw	0
   421  0010B4  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   422  0010B6  0E10               	movlw	16
   423  0010B8  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   424  0010BA  EC64  F009         	call	_I2C_Master_Write	;wreg free
   425                           
   426                           ;main.c: 93: I2C_Master_Write('2');
   427  0010BE  0E00               	movlw	0
   428  0010C0  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   429  0010C2  0E32               	movlw	50
   430  0010C4  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   431  0010C6  EC64  F009         	call	_I2C_Master_Write	;wreg free
   432                           
   433                           ;main.c: 94: I2C_Master_Stop();
   434  0010CA  EC69  F009         	call	_I2C_Master_Stop	;wreg free
   435                           
   436                           ;main.c: 95: _delay((unsigned long)((1000)*(40000000/4000.0)));
   437  0010CE  0E33               	movlw	51
   438  0010D0  6E17               	movwf	(??_main+1)& (0+255),c
   439  0010D2  0EBB               	movlw	187
   440  0010D4  6E16               	movwf	??_main& (0+255),c
   441  0010D6  0EE0               	movlw	224
   442  0010D8                     u217:
   443  0010D8  2EE8               	decfsz	wreg,f,c
   444  0010DA  D7FE               	bra	u217
   445  0010DC  2E16               	decfsz	??_main& (0+255),f,c
   446  0010DE  D7FC               	bra	u217
   447  0010E0  2E17               	decfsz	(??_main+1)& (0+255),f,c
   448  0010E2  D7FA               	bra	u217
   449  0010E4  D7C9               	goto	l59
   450  0010E6                     __end_of_main:
   451                           	opt stack 0
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           wreg	equ	0xFE8
   455                           
   456 ;; *************** function _initLCD *****************
   457 ;; Defined at:
   458 ;;		line 60 in file "lcd.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;Total ram usage:        1 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; Hardware stack levels required when called:    2
   479 ;; This function calls:
   480 ;;		_lcdInst
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text1
   487  001242                     __ptext1:
   488                           	opt stack 0
   489  001242                     _initLCD:
   490                           	opt stack 28
   491                           
   492                           ;lcd.c: 68: _delay((unsigned long)((15)*(40000000/4000.0)));
   493                           
   494                           ;incstack = 0
   495  001242  0EC3               	movlw	195
   496  001244  6E04               	movwf	??_initLCD& (0+255),c
   497  001246  0ECD               	movlw	205
   498  001248                     u227:
   499  001248  2EE8               	decfsz	wreg,f,c
   500  00124A  D7FE               	bra	u227
   501  00124C  2E04               	decfsz	??_initLCD& (0+255),f,c
   502  00124E  D7FC               	bra	u227
   503  001250  F000               	nop	
   504                           
   505                           ;lcd.c: 69: lcdInst(0b00110011);
   506  001252  0E33               	movlw	51
   507  001254  EC51  F009         	call	_lcdInst
   508                           
   509                           ;lcd.c: 70: lcdInst(0b00110010);
   510  001258  0E32               	movlw	50
   511  00125A  EC51  F009         	call	_lcdInst
   512                           
   513                           ;lcd.c: 71: lcdInst(0b00101000);
   514  00125E  0E28               	movlw	40
   515  001260  EC51  F009         	call	_lcdInst
   516                           
   517                           ;lcd.c: 72: lcdInst(0b00001111);
   518  001264  0E0F               	movlw	15
   519  001266  EC51  F009         	call	_lcdInst
   520                           
   521                           ;lcd.c: 73: lcdInst(0b00000110);
   522  00126A  0E06               	movlw	6
   523  00126C  EC51  F009         	call	_lcdInst
   524                           
   525                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
   526  001270  0E01               	movlw	1
   527  001272  EC51  F009         	call	_lcdInst
   528  001276  0EC3               	movlw	195
   529  001278  6E04               	movwf	??_initLCD& (0+255),c
   530  00127A  0ECD               	movlw	205
   531  00127C                     u237:
   532  00127C  2EE8               	decfsz	wreg,f,c
   533  00127E  D7FE               	bra	u237
   534  001280  2E04               	decfsz	??_initLCD& (0+255),f,c
   535  001282  D7FC               	bra	u237
   536  001284  F000               	nop	
   537                           
   538                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
   539  001286  0E0F               	movlw	15
   540  001288  EC51  F009         	call	_lcdInst
   541  00128C  0012               	return		;funcret
   542  00128E                     __end_of_initLCD:
   543                           	opt stack 0
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           wreg	equ	0xFE8
   547                           
   548 ;; *************** function _lcdInst *****************
   549 ;; Defined at:
   550 ;;		line 11 in file "lcd.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  data            1    wreg     unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  data            1    2[COMRAM] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;Total ram usage:        1 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    1
   571 ;; This function calls:
   572 ;;		_lcdNibble
   573 ;; This function is called by:
   574 ;;		_initLCD
   575 ;;		_lcd_set_cursor
   576 ;;		_lcd_shift_cursor
   577 ;;		_lcd_shift_display
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text2
   582  0012A2                     __ptext2:
   583                           	opt stack 0
   584  0012A2                     _lcdInst:
   585                           	opt stack 28
   586                           
   587                           ;incstack = 0
   588                           ;lcdInst@data stored from wreg
   589  0012A2  6E03               	movwf	lcdInst@data,c
   590                           
   591                           ;lcd.c: 19: LATDbits.LATD2 = 0;
   592  0012A4  948C               	bcf	3980,2,c	;volatile
   593                           
   594                           ;lcd.c: 20: lcdNibble(data);
   595  0012A6  5003               	movf	lcdInst@data,w,c
   596  0012A8  ECB4  F008         	call	_lcdNibble
   597                           
   598                           ;lcd.c: 21: _delay((unsigned long)((100)*(40000000/4000000.0)));
   599  0012AC  0EC8               	movlw	200
   600  0012AE                     u247:
   601  0012AE  D000               	nop2	
   602  0012B0  2EE8               	decfsz	wreg,f,c
   603  0012B2  D7FD               	bra	u247
   604  0012B4  0012               	return		;funcret
   605  0012B6                     __end_of_lcdInst:
   606                           	opt stack 0
   607                           tblptru	equ	0xFF8
   608                           tblptrh	equ	0xFF7
   609                           wreg	equ	0xFE8
   610                           
   611 ;; *************** function _lcdNibble *****************
   612 ;; Defined at:
   613 ;;		line 37 in file "lcd.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  data            1    wreg     unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  data            1    1[COMRAM] unsigned char 
   618 ;;  temp            1    0[COMRAM] unsigned char 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;Total ram usage:        2 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_lcdInst
   638 ;;		_putch
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text3
   643  001168                     __ptext3:
   644                           	opt stack 0
   645  001168                     _lcdNibble:
   646                           	opt stack 28
   647                           
   648                           ;incstack = 0
   649                           ;lcdNibble@data stored from wreg
   650  001168  6E02               	movwf	lcdNibble@data,c
   651                           
   652                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
   653  00116A  5002               	movf	lcdNibble@data,w,c
   654  00116C  0BF0               	andlw	240
   655  00116E  6E01               	movwf	lcdNibble@temp,c
   656                           
   657                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
   658  001170  508C               	movf	3980,w,c	;volatile
   659  001172  0B0F               	andlw	15
   660  001174  6E8C               	movwf	3980,c	;volatile
   661                           
   662                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
   663  001176  5001               	movf	lcdNibble@temp,w,c
   664  001178  108C               	iorwf	3980,w,c	;volatile
   665  00117A  6E8C               	movwf	3980,c	;volatile
   666                           
   667                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   668  00117C  0E00               	movlw	0
   669  00117E  BEF2               	btfsc	intcon,7,c	;volatile
   670  001180  0E01               	movlw	1
   671  001182  6E19               	movwf	lcd@LCDinterruptState,c
   672  001184  9EF2               	bcf	intcon,7,c	;volatile
   673  001186  868C               	bsf	3980,3,c	;volatile
   674  001188  0E53               	movlw	83
   675  00118A                     u257:
   676  00118A  2EE8               	decfsz	wreg,f,c
   677  00118C  D7FE               	bra	u257
   678  00118E  F000               	nop	
   679  001190  968C               	bcf	3980,3,c	;volatile
   680  001192  0EC8               	movlw	200
   681  001194                     u267:
   682  001194  D000               	nop2	
   683  001196  2EE8               	decfsz	wreg,f,c
   684  001198  D7FD               	bra	u267
   685  00119A  B019               	btfsc	lcd@LCDinterruptState,0,c
   686  00119C  D002               	bra	u15
   687  00119E  9EF2               	bcf	intcon,7,c	;volatile
   688  0011A0  D001               	bra	u16
   689  0011A2                     u15:
   690  0011A2  8EF2               	bsf	intcon,7,c	;volatile
   691  0011A4                     u16:
   692                           
   693                           ;lcd.c: 52: data = (unsigned char) (data << 4);
   694  0011A4  3802               	swapf	lcdNibble@data,w,c
   695  0011A6  0BF0               	andlw	240
   696  0011A8  6E02               	movwf	lcdNibble@data,c
   697                           
   698                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
   699  0011AA  5002               	movf	lcdNibble@data,w,c
   700  0011AC  0BF0               	andlw	240
   701  0011AE  6E01               	movwf	lcdNibble@temp,c
   702                           
   703                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
   704  0011B0  508C               	movf	3980,w,c	;volatile
   705  0011B2  0B0F               	andlw	15
   706  0011B4  6E8C               	movwf	3980,c	;volatile
   707                           
   708                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
   709  0011B6  5001               	movf	lcdNibble@temp,w,c
   710  0011B8  108C               	iorwf	3980,w,c	;volatile
   711  0011BA  6E8C               	movwf	3980,c	;volatile
   712                           
   713                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   714  0011BC  0E00               	movlw	0
   715  0011BE  BEF2               	btfsc	intcon,7,c	;volatile
   716  0011C0  0E01               	movlw	1
   717  0011C2  6E19               	movwf	lcd@LCDinterruptState,c
   718  0011C4  9EF2               	bcf	intcon,7,c	;volatile
   719  0011C6  868C               	bsf	3980,3,c	;volatile
   720  0011C8  0E53               	movlw	83
   721  0011CA                     u277:
   722  0011CA  2EE8               	decfsz	wreg,f,c
   723  0011CC  D7FE               	bra	u277
   724  0011CE  F000               	nop	
   725  0011D0  968C               	bcf	3980,3,c	;volatile
   726  0011D2  0EC8               	movlw	200
   727  0011D4                     u287:
   728  0011D4  D000               	nop2	
   729  0011D6  2EE8               	decfsz	wreg,f,c
   730  0011D8  D7FD               	bra	u287
   731  0011DA  B019               	btfsc	lcd@LCDinterruptState,0,c
   732  0011DC  D002               	bra	u25
   733  0011DE  9EF2               	bcf	intcon,7,c	;volatile
   734  0011E0  D001               	bra	u26
   735  0011E2                     u25:
   736  0011E2  8EF2               	bsf	intcon,7,c	;volatile
   737  0011E4                     u26:
   738  0011E4  0012               	return		;funcret
   739  0011E6                     __end_of_lcdNibble:
   740                           	opt stack 0
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           intcon	equ	0xFF2
   744                           wreg	equ	0xFE8
   745                           
   746 ;; *************** function _I2C_Master_Write *****************
   747 ;; Defined at:
   748 ;;		line 108 in file "I2C.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  byteToWrite     2    1[COMRAM] unsigned int 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:        2 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    1
   769 ;; This function calls:
   770 ;;		_I2C_Master_Wait
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text4
   777  0012C8                     __ptext4:
   778                           	opt stack 0
   779  0012C8                     _I2C_Master_Write:
   780                           	opt stack 29
   781                           
   782                           ;I2C.c: 116: I2C_Master_Wait();
   783                           
   784                           ;incstack = 0
   785  0012C8  EC5B  F009         	call	_I2C_Master_Wait	;wreg free
   786                           
   787                           ;I2C.c: 117: SSPBUF = byteToWrite;
   788  0012CC  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
   789  0012D0  0012               	return		;funcret
   790  0012D2                     __end_of_I2C_Master_Write:
   791                           	opt stack 0
   792                           tblptru	equ	0xFF8
   793                           tblptrh	equ	0xFF7
   794                           intcon	equ	0xFF2
   795                           wreg	equ	0xFE8
   796                           
   797 ;; *************** function _I2C_Master_Stop *****************
   798 ;; Defined at:
   799 ;;		line 95 in file "I2C.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    1
   820 ;; This function calls:
   821 ;;		_I2C_Master_Wait
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text5
   828  0012D2                     __ptext5:
   829                           	opt stack 0
   830  0012D2                     _I2C_Master_Stop:
   831                           	opt stack 29
   832                           
   833                           ;I2C.c: 104: I2C_Master_Wait();
   834                           
   835                           ;incstack = 0
   836  0012D2  EC5B  F009         	call	_I2C_Master_Wait	;wreg free
   837                           
   838                           ;I2C.c: 105: SSPCON2bits.PEN = 1;
   839  0012D6  84C5               	bsf	4037,2,c	;volatile
   840  0012D8  0012               	return		;funcret
   841  0012DA                     __end_of_I2C_Master_Stop:
   842                           	opt stack 0
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           intcon	equ	0xFF2
   846                           wreg	equ	0xFE8
   847                           
   848 ;; *************** function _I2C_Master_Start *****************
   849 ;; Defined at:
   850 ;;		line 69 in file "I2C.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;Total ram usage:        0 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    1
   871 ;; This function calls:
   872 ;;		_I2C_Master_Wait
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text6
   879  0012DA                     __ptext6:
   880                           	opt stack 0
   881  0012DA                     _I2C_Master_Start:
   882                           	opt stack 29
   883                           
   884                           ;I2C.c: 78: I2C_Master_Wait();
   885                           
   886                           ;incstack = 0
   887  0012DA  EC5B  F009         	call	_I2C_Master_Wait	;wreg free
   888                           
   889                           ;I2C.c: 79: SSPCON2bits.SEN = 1;
   890  0012DE  80C5               	bsf	4037,0,c	;volatile
   891  0012E0  0012               	return		;funcret
   892  0012E2                     __end_of_I2C_Master_Start:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           intcon	equ	0xFF2
   897                           wreg	equ	0xFE8
   898                           
   899 ;; *************** function _I2C_Master_Wait *****************
   900 ;; Defined at:
   901 ;;		line 51 in file "I2C.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;Total ram usage:        1 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_I2C_Master_Start
   925 ;;		_I2C_Master_Stop
   926 ;;		_I2C_Master_Write
   927 ;;		_I2C_Master_RepeatedStart
   928 ;;		_I2C_Master_Read
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text7
   933  0012B6                     __ptext7:
   934                           	opt stack 0
   935  0012B6                     _I2C_Master_Wait:
   936                           	opt stack 29
   937                           
   938                           ;I2C.c: 66: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   939                           
   940                           ;incstack = 0
   941  0012B6  B4C7               	btfsc	4039,2,c	;volatile
   942  0012B8  D7FE               	goto	_I2C_Master_Wait
   943  0012BA  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
   944  0012BE  0E1F               	movlw	31
   945  0012C0  1601               	andwf	??_I2C_Master_Wait,f,c
   946  0012C2  B4D8               	btfsc	status,2,c
   947  0012C4  0012               	return	
   948  0012C6  D7F7               	goto	_I2C_Master_Wait
   949  0012C8                     __end_of_I2C_Master_Wait:
   950                           	opt stack 0
   951                           tblptru	equ	0xFF8
   952                           tblptrh	equ	0xFF7
   953                           intcon	equ	0xFF2
   954                           wreg	equ	0xFE8
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function _I2C_Master_Init *****************
   958 ;; Defined at:
   959 ;;		line 14 in file "I2C.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  clockFreq       4   13[COMRAM] const unsigned long 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;Total ram usage:        8 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    1
   980 ;; This function calls:
   981 ;;		___lldiv
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text8
   988  0011E6                     __ptext8:
   989                           	opt stack 0
   990  0011E6                     _I2C_Master_Init:
   991                           	opt stack 29
   992                           
   993                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
   994                           
   995                           ;incstack = 0
   996  0011E6  9AC6               	bcf	4038,5,c	;volatile
   997                           
   998                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
   999  0011E8  8694               	bsf	3988,3,c	;volatile
  1000                           
  1001                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
  1002  0011EA  8894               	bsf	3988,4,c	;volatile
  1003                           
  1004                           ;I2C.c: 41: SSPSTAT = 0b10000000;
  1005  0011EC  0E80               	movlw	128
  1006  0011EE  6EC7               	movwf	4039,c	;volatile
  1007                           
  1008                           ;I2C.c: 42: SSPCON1 = 0b00101000;
  1009  0011F0  0E28               	movlw	40
  1010  0011F2  6EC6               	movwf	4038,c	;volatile
  1011                           
  1012                           ;I2C.c: 43: SSPCON2 = 0b00000000;
  1013  0011F4  0E00               	movlw	0
  1014  0011F6  6EC5               	movwf	4037,c	;volatile
  1015                           
  1016                           ;I2C.c: 48: SSPADD = (40000000 / (4 * clockFreq)) - 1;
  1017  0011F8  0E00               	movlw	0
  1018  0011FA  6E01               	movwf	___lldiv@dividend,c
  1019  0011FC  0E5A               	movlw	90
  1020  0011FE  6E02               	movwf	___lldiv@dividend+1,c
  1021  001200  0E62               	movlw	98
  1022  001202  6E03               	movwf	___lldiv@dividend+2,c
  1023  001204  0E02               	movlw	2
  1024  001206  6E04               	movwf	___lldiv@dividend+3,c
  1025  001208  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  1026  00120C  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  1027  001210  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  1028  001214  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  1029  001218  0E02               	movlw	2
  1030  00121A                     u195:
  1031  00121A  90D8               	bcf	status,0,c
  1032  00121C  3612               	rlcf	??_I2C_Master_Init,f,c
  1033  00121E  3613               	rlcf	??_I2C_Master_Init+1,f,c
  1034  001220  3614               	rlcf	??_I2C_Master_Init+2,f,c
  1035  001222  3615               	rlcf	??_I2C_Master_Init+3,f,c
  1036  001224  2EE8               	decfsz	wreg,f,c
  1037  001226  D7F9               	goto	u195
  1038  001228  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  1039  00122C  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1040  001230  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1041  001234  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1042  001238  EC73  F008         	call	___lldiv	;wreg free
  1043  00123C  0401               	decf	?___lldiv,w,c
  1044  00123E  6EC8               	movwf	4040,c	;volatile
  1045  001240  0012               	return		;funcret
  1046  001242                     __end_of_I2C_Master_Init:
  1047                           	opt stack 0
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           intcon	equ	0xFF2
  1051                           wreg	equ	0xFE8
  1052                           status	equ	0xFD8
  1053                           
  1054 ;; *************** function ___lldiv *****************
  1055 ;; Defined at:
  1056 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lldiv.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  dividend        4    0[COMRAM] unsigned long 
  1059 ;;  divisor         4    4[COMRAM] unsigned long 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  quotient        4    8[COMRAM] unsigned long 
  1062 ;;  counter         1   12[COMRAM] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  4    0[COMRAM] unsigned long 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1072 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;Total ram usage:       13 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_I2C_Master_Init
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text9
  1086  0010E6                     __ptext9:
  1087                           	opt stack 0
  1088  0010E6                     ___lldiv:
  1089                           	opt stack 29
  1090                           
  1091                           ;incstack = 0
  1092  0010E6  0E00               	movlw	0
  1093  0010E8  6E09               	movwf	___lldiv@quotient,c
  1094  0010EA  0E00               	movlw	0
  1095  0010EC  6E0A               	movwf	___lldiv@quotient+1,c
  1096  0010EE  0E00               	movlw	0
  1097  0010F0  6E0B               	movwf	___lldiv@quotient+2,c
  1098  0010F2  0E00               	movlw	0
  1099  0010F4  6E0C               	movwf	___lldiv@quotient+3,c
  1100  0010F6  5005               	movf	___lldiv@divisor,w,c
  1101  0010F8  1006               	iorwf	___lldiv@divisor+1,w,c
  1102  0010FA  1007               	iorwf	___lldiv@divisor+2,w,c
  1103  0010FC  1008               	iorwf	___lldiv@divisor+3,w,c
  1104  0010FE  B4D8               	btfsc	status,2,c
  1105  001100  D02A               	goto	l513
  1106  001102  0E01               	movlw	1
  1107  001104  6E0D               	movwf	___lldiv@counter,c
  1108  001106  D006               	goto	l508
  1109  001108  90D8               	bcf	status,0,c
  1110  00110A  3605               	rlcf	___lldiv@divisor,f,c
  1111  00110C  3606               	rlcf	___lldiv@divisor+1,f,c
  1112  00110E  3607               	rlcf	___lldiv@divisor+2,f,c
  1113  001110  3608               	rlcf	___lldiv@divisor+3,f,c
  1114  001112  2A0D               	incf	___lldiv@counter,f,c
  1115  001114                     l508:
  1116  001114  AE08               	btfss	___lldiv@divisor+3,7,c
  1117  001116  D7F8               	goto	l509
  1118  001118                     u170:
  1119  001118  90D8               	bcf	status,0,c
  1120  00111A  3609               	rlcf	___lldiv@quotient,f,c
  1121  00111C  360A               	rlcf	___lldiv@quotient+1,f,c
  1122  00111E  360B               	rlcf	___lldiv@quotient+2,f,c
  1123  001120  360C               	rlcf	___lldiv@quotient+3,f,c
  1124  001122  5005               	movf	___lldiv@divisor,w,c
  1125  001124  5C01               	subwf	___lldiv@dividend,w,c
  1126  001126  5006               	movf	___lldiv@divisor+1,w,c
  1127  001128  5802               	subwfb	___lldiv@dividend+1,w,c
  1128  00112A  5007               	movf	___lldiv@divisor+2,w,c
  1129  00112C  5803               	subwfb	___lldiv@dividend+2,w,c
  1130  00112E  5008               	movf	___lldiv@divisor+3,w,c
  1131  001130  5804               	subwfb	___lldiv@dividend+3,w,c
  1132  001132  A0D8               	btfss	status,0,c
  1133  001134  D009               	goto	l512
  1134  001136  5005               	movf	___lldiv@divisor,w,c
  1135  001138  5E01               	subwf	___lldiv@dividend,f,c
  1136  00113A  5006               	movf	___lldiv@divisor+1,w,c
  1137  00113C  5A02               	subwfb	___lldiv@dividend+1,f,c
  1138  00113E  5007               	movf	___lldiv@divisor+2,w,c
  1139  001140  5A03               	subwfb	___lldiv@dividend+2,f,c
  1140  001142  5008               	movf	___lldiv@divisor+3,w,c
  1141  001144  5A04               	subwfb	___lldiv@dividend+3,f,c
  1142  001146  8009               	bsf	___lldiv@quotient,0,c
  1143  001148                     l512:
  1144  001148  90D8               	bcf	status,0,c
  1145  00114A  3208               	rrcf	___lldiv@divisor+3,f,c
  1146  00114C  3207               	rrcf	___lldiv@divisor+2,f,c
  1147  00114E  3206               	rrcf	___lldiv@divisor+1,f,c
  1148  001150  3205               	rrcf	___lldiv@divisor,f,c
  1149  001152  2E0D               	decfsz	___lldiv@counter,f,c
  1150  001154  D7E1               	goto	u170
  1151  001156                     l513:
  1152  001156  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1153  00115A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1154  00115E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1155  001162  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1156  001166  0012               	return		;funcret
  1157  001168                     __end_of___lldiv:
  1158                           	opt stack 0
  1159                           tblptru	equ	0xFF8
  1160                           tblptrh	equ	0xFF7
  1161                           intcon	equ	0xFF2
  1162                           wreg	equ	0xFE8
  1163                           status	equ	0xFD8
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           intcon	equ	0xFF2
  1167                           wreg	equ	0xFE8
  1168                           status	equ	0xFD8
  1169                           
  1170                           	psect	rparam
  1171  0000                     tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           intcon	equ	0xFF2
  1174                           wreg	equ	0xFE8
  1175                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    23
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     24      27
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_I2C_Master_Init
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     905
                                             21 COMRAM     3     3      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       1       0        0.8%
COMRAM              7F     18      1B       1       21.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1B      34        0.0%
DATA                 0      0      1B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 24 11:34:13 2018

                         l59 1078                           u15 11A2                           u16 11A4  
                         u25 11E2                           u26 11E4                  __CFG_CPD$ON 000000  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l512 1148  
                        l513 1156                          l508 1114                          l509 1108  
               __CFG_CPB$OFF 000000                          u207 10A2                          u217 10D8  
                        u170 1118                          u227 1248                          u237 127C  
                        u247 12AE                          u257 118A                          u195 121A  
                        u267 1194                          u277 11CA                          u287 11D4  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       _LATA 000F89                         _LATB 000F8A                         _LATC 000F8B  
                       _LATD 000F8C                         _LATE 000F8D                  main@counter 0018  
                       _main 101A                         _keys 1001                         start 0000  
              __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
           __end_of_LCD_LEFT 1013             ?_I2C_Master_Init 000E             ?_I2C_Master_Wait 0001  
           ?_I2C_Master_Stop 0001                        ?_main 0001              __end_of___lldiv 1168  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000              __end_of_lcdInst 12B6               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000              __end_of_initLCD 128E               __CFG_EBTRB$OFF 000000  
             __pbitbssCOMRAM 00D8            _LCDinterruptState 001A                        status 000FD8  
             __CFG_PBADEN$ON 000000              __initialization 128E                 __end_of_main 10E6  
               __end_of_keys 1012               __CFG_OSC$HSPLL 000000            __end_of_LCD_RIGHT 1014  
                     ??_main 0016                __activetblptr 000001            ?_I2C_Master_Start 0001  
          ?_I2C_Master_Write 0002           ??_I2C_Master_Start 0002                       _ADCON0 000FC2  
                     _ADCON1 000FC1           ??_I2C_Master_Write 0004                       _SSPADD 000FC8  
                     _SSPBUF 000FC9               __CFG_XINST$OFF 000000               __CFG_STVREN$ON 000000  
                  ??___lldiv 0009                    ??_lcdInst 0003                    ??_initLCD 0004  
               __mediumconst 0000                       tblptrh 000FF7                       tblptru 000FF8  
                 __accesstop 0080      __end_of__initialization 1294                ___rparam_used 000001  
             __pcstackCOMRAM 0001           __size_of_lcdNibble 007E         lcd@LCDinterruptState 0019  
                    _SSPCON1 000FC6                      _SSPCON2 000FC5                      _SSPSTAT 000FC7  
          __end_of_lcdNibble 11E6                      __Hparam 0000                      __Lparam 0000  
                    ___lldiv 10E6                 __psmallconst 1000                      __pcinit 128E  
                    __ramtop 1000                      _lcdInst 12A2                      __ptext0 101A  
                    __ptext1 1242                      __ptext2 12A2                      __ptext3 1168  
                    __ptext4 12C8                      __ptext5 12D2                      __ptext6 12DA  
                    __ptext7 12B6                      __ptext8 11E6                      __ptext9 10E6  
                    _initLCD 1242                    _LCD_RIGHT 1013     __size_of_I2C_Master_Init 005C  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008         end_of_initialization 1294  
      __end_of_LCD_SIZE_HORZ 1016        __end_of_LCD_SIZE_VERT 1015    __size_of_I2C_Master_Start 0008  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0005              ___lldiv@counter 000D  
                  _TRISCbits 000F94          start_initialization 128E            ??_I2C_Master_Init 0012  
          ??_I2C_Master_Wait 0001            ??_I2C_Master_Stop 0002     I2C_Master_Init@clockFreq 000E  
           __CFG_LPT1OSC$OFF 000000                  __pbssCOMRAM 0019             _I2C_Master_Start 12DA  
           _I2C_Master_Write 12C8            __CFG_CCP2MX$PORTC 000000                    _lcdNibble 1168  
                   ?___lldiv 0001                     ?_lcdInst 0001                     ?_initLCD 0001  
                __smallconst 1000                     _LCD_LEFT 1012                     _LATDbits 000F8C  
           __CFG_WDTPS$32768 000000                   ?_lcdNibble 0001                lcdNibble@data 0002  
              lcdNibble@temp 0001               _LCD_HORZ_LIMIT 1017                     __Hrparam 0000  
                   __Lrparam 0000                 __Lsmallconst 1000           __CFG_BOREN$SBORDIS 000000  
           __size_of___lldiv 0082             __size_of_lcdInst 0014              _I2C_Master_Init 11E6  
           __size_of_initLCD 004C              _I2C_Master_Wait 12B6              _I2C_Master_Stop 12D2  
     __end_of_LCD_HORZ_LIMIT 1018               _LCD_VERT_LIMIT 1016                __size_of_main 00CC  
                ??_lcdNibble 0001                     main@SEND 00D8  I2C_Master_Write@byteToWrite 0002  
   __end_of_I2C_Master_Start 12E2     __end_of_I2C_Master_Write 12D2                   _INTCONbits 000FF2  
     __end_of_LCD_VERT_LIMIT 1017                _LCD_SIZE_HORZ 1015                _LCD_SIZE_VERT 1014  
           ___lldiv@dividend 0001      __end_of_I2C_Master_Init 1242      __end_of_I2C_Master_Wait 12C8  
    __end_of_I2C_Master_Stop 12DA                  lcdInst@data 0003             ___lldiv@quotient 0009  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
