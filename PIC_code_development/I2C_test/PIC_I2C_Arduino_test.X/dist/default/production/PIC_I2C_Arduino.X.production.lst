

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 16 15:27:12 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4620 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  001A18                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _max
    78  001A18  0004               	dw	4
    79                           
    80                           	psect	smallconst
    81  001000                     __psmallconst:
    82                           	opt stack 0
    83  001000  00                 	db	0
    84  001001                     _keys:
    85                           	opt stack 0
    86  001001  31                 	db	49
    87  001002  32                 	db	50
    88  001003  33                 	db	51
    89  001004  41                 	db	65
    90  001005  34                 	db	52
    91  001006  35                 	db	53
    92  001007  36                 	db	54
    93  001008  42                 	db	66
    94  001009  37                 	db	55
    95  00100A  38                 	db	56
    96  00100B  39                 	db	57
    97  00100C  43                 	db	67
    98  00100D  2A                 	db	42
    99  00100E  30                 	db	48
   100  00100F  23                 	db	35
   101  001010  44                 	db	68
   102  001011  00                 	db	0
   103  001012                     __end_of_keys:
   104                           	opt stack 0
   105  001012                     _dpowers:
   106                           	opt stack 0
   107  001012  0001               	dw	1
   108  001014  000A               	dw	10
   109  001016  0064               	dw	100
   110  001018  03E8               	dw	1000
   111  00101A  2710               	dw	10000
   112  00101C                     __end_of_dpowers:
   113                           	opt stack 0
   114  00101C                     _array:
   115                           	opt stack 0
   116  00101C  31                 	db	49
   117  00101D  30                 	db	48
   118  00101E  00                 	db	0
   119  00101F                     __end_of_array:
   120                           	opt stack 0
   121  00101F                     _LCD_LEFT:
   122                           	opt stack 0
   123  00101F  00                 	db	0
   124  001020                     __end_of_LCD_LEFT:
   125                           	opt stack 0
   126  001020                     _LCD_RIGHT:
   127                           	opt stack 0
   128  001020  01                 	db	1
   129  001021                     __end_of_LCD_RIGHT:
   130                           	opt stack 0
   131  001021                     _LCD_SIZE_VERT:
   132                           	opt stack 0
   133  001021  02                 	db	2
   134  001022                     __end_of_LCD_SIZE_VERT:
   135                           	opt stack 0
   136  001022                     _LCD_SIZE_HORZ:
   137                           	opt stack 0
   138  001022  10                 	db	16
   139  001023                     __end_of_LCD_SIZE_HORZ:
   140                           	opt stack 0
   141  001023                     _LCD_VERT_LIMIT:
   142                           	opt stack 0
   143  001023  02                 	db	2
   144  001024                     __end_of_LCD_VERT_LIMIT:
   145                           	opt stack 0
   146  001024                     _LCD_HORZ_LIMIT:
   147                           	opt stack 0
   148  001024  28                 	db	40
   149  001025                     __end_of_LCD_HORZ_LIMIT:
   150                           	opt stack 0
   151  0000                     _SSPBUF	set	4041
   152  0000                     _SSPCON2bits	set	4037
   153  0000                     _SSPADD	set	4040
   154  0000                     _SSPCON2	set	4037
   155  0000                     _SSPCON1	set	4038
   156  0000                     _SSPSTAT	set	4039
   157  0000                     _SSPCON1bits	set	4038
   158  0000                     _TRISDbits	set	3989
   159  0000                     _LATDbits	set	3980
   160  0000                     _TRISCbits	set	3988
   161  0000                     _LATCbits	set	3979
   162  0000                     _ADRESH	set	4036
   163  0000                     _ADRESL	set	4035
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _INTCONbits	set	4082
   166  0000                     _ADCON1	set	4033
   167  0000                     _ADCON0	set	4034
   168  0000                     _TRISE	set	3990
   169  0000                     _TRISD	set	3989
   170  0000                     _TRISC	set	3988
   171  0000                     _TRISB	set	3987
   172  0000                     _TRISA	set	3986
   173  0000                     _LATE	set	3981
   174  0000                     _LATD	set	3980
   175  0000                     _LATC	set	3979
   176  0000                     _LATB	set	3978
   177  0000                     _LATA	set	3977
   178  0000                     _ADON	set	32272
   179  0000                     _INT1IE	set	32643
   180  001025                     STR_17:
   181  001025  57                 	db	87	;'W'
   182  001026  61                 	db	97	;'a'
   183  001027  73                 	db	115	;'s'
   184  001028  68                 	db	104	;'h'
   185  001029  65                 	db	101	;'e'
   186  00102A  72                 	db	114	;'r'
   187  00102B  73                 	db	115	;'s'
   188  00102C  3A                 	db	58	;':'
   189  00102D  25                 	db	37
   190  00102E  64                 	db	100	;'d'
   191  00102F  00                 	db	0
   192  001030                     STR_16:
   193  001030  53                 	db	83	;'S'
   194  001031  70                 	db	112	;'p'
   195  001032  61                 	db	97	;'a'
   196  001033  63                 	db	99	;'c'
   197  001034  65                 	db	101	;'e'
   198  001035  72                 	db	114	;'r'
   199  001036  3A                 	db	58	;':'
   200  001037  25                 	db	37
   201  001038  64                 	db	100	;'d'
   202  001039  00                 	db	0
   203  00103A                     STR_14:
   204  00103A  42                 	db	66	;'B'
   205  00103B  6F                 	db	111	;'o'
   206  00103C  6C                 	db	108	;'l'
   207  00103D  74                 	db	116	;'t'
   208  00103E  73                 	db	115	;'s'
   209  00103F  3A                 	db	58	;':'
   210  001040  25                 	db	37
   211  001041  64                 	db	100	;'d'
   212  001042  00                 	db	0
   213  001043                     STR_15:
   214  001043  4E                 	db	78	;'N'
   215  001044  75                 	db	117	;'u'
   216  001045  74                 	db	116	;'t'
   217  001046  73                 	db	115	;'s'
   218  001047  3A                 	db	58	;':'
   219  001048  25                 	db	37
   220  001049  64                 	db	100	;'d'
   221  00104A  00                 	db	0
   222  00104B                     STR_3:
   223  00104B  64                 	db	100	;'d'
   224  00104C  6F                 	db	111	;'o'
   225  00104D  6E                 	db	110	;'n'
   226  00104E  65                 	db	101	;'e'
   227  00104F  00                 	db	0
   228  0000                     
   229                           ; #config settings
   230  001050  00                 	db	0	; dummy byte at the end
   231  0000                     
   232                           	psect	cinit
   233  0018B4                     __pcinit:
   234                           	opt stack 0
   235  0018B4                     start_initialization:
   236                           	opt stack 0
   237  0018B4                     __initialization:
   238                           	opt stack 0
   239                           
   240                           ; Initialize objects allocated to COMRAM (2 bytes)
   241                           ; load TBLPTR registers with __pidataCOMRAM
   242  0018B4  0E18               	movlw	low __pidataCOMRAM
   243  0018B6  6EF6               	movwf	tblptrl,c
   244  0018B8  0E1A               	movlw	high __pidataCOMRAM
   245  0018BA  6EF7               	movwf	tblptrh,c
   246  0018BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   247  0018BE  6EF8               	movwf	tblptru,c
   248  0018C0  0009               	tblrd		*+	;fetch initializer
   249  0018C2  CFF5 F02E          	movff	tablat,__pdataCOMRAM
   250  0018C6  0009               	tblrd		*+	;fetch initializer
   251  0018C8  CFF5 F02F          	movff	tablat,__pdataCOMRAM+1
   252                           
   253                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   254  0018CC  6A30               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   255                           
   256                           ; Clear objects allocated to COMRAM (18 bytes)
   257  0018CE  EE00  F01C         	lfsr	0,__pbssCOMRAM
   258  0018D2  0E12               	movlw	18
   259  0018D4                     clear_0:
   260  0018D4  6AEE               	clrf	postinc0,c
   261  0018D6  06E8               	decf	wreg,f,c
   262  0018D8  E1FD               	bnz	clear_0
   263  0018DA                     end_of_initialization:
   264                           	opt stack 0
   265  0018DA                     __end_of__initialization:
   266                           	opt stack 0
   267  0018DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   268  0018DC  6EF8               	movwf	tblptru,c
   269  0018DE  0100               	movlb	0
   270  0018E0  EF29  F008         	goto	_main	;jump to C main() function
   271                           tblptru	equ	0xFF8
   272                           tblptrh	equ	0xFF7
   273                           tblptrl	equ	0xFF6
   274                           tablat	equ	0xFF5
   275                           postinc0	equ	0xFEE
   276                           wreg	equ	0xFE8
   277                           
   278                           	psect	bitbssCOMRAM
   279  000180                     __pbitbssCOMRAM:
   280                           	opt stack 0
   281  000180                     main@SEND:
   282                           	opt stack 0
   283  000180                     	ds	1
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291                           	psect	bssCOMRAM
   292  00001C                     __pbssCOMRAM:
   293                           	opt stack 0
   294  00001C                     _i:
   295                           	opt stack 0
   296  00001C                     	ds	2
   297  00001E                     _analog_result:
   298                           	opt stack 0
   299  00001E                     	ds	2
   300  000020                     _B_remain:
   301                           	opt stack 0
   302  000020                     	ds	2
   303  000022                     _W_counter:
   304                           	opt stack 0
   305  000022                     	ds	2
   306  000024                     _S_counter:
   307                           	opt stack 0
   308  000024                     	ds	2
   309  000026                     _N_counter:
   310                           	opt stack 0
   311  000026                     	ds	2
   312  000028                     _B_counter:
   313                           	opt stack 0
   314  000028                     	ds	2
   315  00002A                     _state:
   316                           	opt stack 0
   317  00002A                     	ds	2
   318  00002C                     lcd@LCDinterruptState:
   319                           	opt stack 0
   320  00002C                     	ds	1
   321  00002D                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           
   329                           	psect	dataCOMRAM
   330  00002E                     __pdataCOMRAM:
   331                           	opt stack 0
   332  00002E                     _max:
   333                           	opt stack 0
   334  00002E                     	ds	2
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           	psect	cstackCOMRAM
   343  000001                     __pcstackCOMRAM:
   344                           	opt stack 0
   345  000001                     ??_motorStart_0:
   346  000001                     ??_motorStop_0:
   347  000001                     ??_motorStart_1:
   348  000001                     ??_motorStop_1:
   349  000001                     ??_motorStart_2:
   350  000001                     ??_motorStop_2:
   351  000001                     ??_motorStart_3:
   352  000001                     ??_motorStop_3:
   353  000001                     ??_I2C_Master_Wait:
   354  000001                     ?_readADC:
   355                           	opt stack 0
   356  000001                     ?___lwdiv:
   357                           	opt stack 0
   358  000001                     ?___lldiv:
   359                           	opt stack 0
   360  000001                     lcdNibble@temp:
   361                           	opt stack 0
   362  000001                     ___lwdiv@dividend:
   363                           	opt stack 0
   364  000001                     ___lldiv@dividend:
   365                           	opt stack 0
   366                           
   367                           ; 4 bytes @ 0x0
   368  000001                     	ds	1
   369  000002                     lcdNibble@data:
   370                           	opt stack 0
   371  000002                     I2C_Master_Write@byteToWrite:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x1
   375  000002                     	ds	1
   376  000003                     ??_readADC:
   377  000003                     lcdInst@data:
   378                           	opt stack 0
   379  000003                     putch@data:
   380                           	opt stack 0
   381  000003                     ___lwdiv@divisor:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x2
   385  000003                     	ds	1
   386  000004                     ??_initLCD:
   387  000004                     
   388                           ; 1 bytes @ 0x3
   389  000004                     	ds	1
   390  000005                     readADC@channel:
   391                           	opt stack 0
   392  000005                     ___lwdiv@quotient:
   393                           	opt stack 0
   394  000005                     ___lldiv@divisor:
   395                           	opt stack 0
   396                           
   397                           ; 4 bytes @ 0x4
   398  000005                     	ds	2
   399  000007                     ___lwdiv@counter:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x6
   403  000007                     	ds	1
   404  000008                     ?___lwmod:
   405                           	opt stack 0
   406  000008                     ___lwmod@dividend:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x7
   410  000008                     	ds	1
   411  000009                     ___lldiv@quotient:
   412                           	opt stack 0
   413                           
   414                           ; 4 bytes @ 0x8
   415  000009                     	ds	1
   416  00000A                     ___lwmod@divisor:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x9
   420  00000A                     	ds	2
   421  00000C                     ___lwmod@counter:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0xB
   425  00000C                     	ds	1
   426  00000D                     ?_printf:
   427                           	opt stack 0
   428  00000D                     ___lldiv@counter:
   429                           	opt stack 0
   430  00000D                     printf@f:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0xC
   434  00000D                     	ds	1
   435  00000E                     I2C_Master_Init@clockFreq:
   436                           	opt stack 0
   437                           
   438                           ; 4 bytes @ 0xD
   439  00000E                     	ds	3
   440  000011                     ??_printf:
   441                           
   442                           ; 1 bytes @ 0x10
   443  000011                     	ds	1
   444  000012                     ??_I2C_Master_Init:
   445  000012                     printf@ap:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x11
   449  000012                     	ds	2
   450  000014                     printf@flag:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x13
   454  000014                     	ds	1
   455  000015                     printf@prec:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x14
   459  000015                     	ds	1
   460  000016                     printf@val:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x15
   464  000016                     	ds	2
   465  000018                     printf@c:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x17
   469  000018                     	ds	1
   470  000019                     ??_main:
   471                           
   472                           ; 1 bytes @ 0x18
   473  000019                     	ds	2
   474  00001B                     main@counter:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x1A
   478  00001B                     	ds	1
   479                           tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           postinc0	equ	0xFEE
   484                           wreg	equ	0xFE8
   485                           
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 94 in file "main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  mem             3    0        unsigned char [3]
   496 ;;  counter         1   26[COMRAM] unsigned char 
   497 ;;  data            1    0        unsigned char 
   498 ;;  keypress        1    0        unsigned char 
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;Total ram usage:        3 bytes
   513 ;; Hardware stack levels required when called:    3
   514 ;; This function calls:
   515 ;;		_I2C_Master_Init
   516 ;;		_I2C_Master_Start
   517 ;;		_I2C_Master_Stop
   518 ;;		_I2C_Master_Write
   519 ;;		_initLCD
   520 ;;		_motorStart_0
   521 ;;		_motorStart_1
   522 ;;		_motorStart_2
   523 ;;		_motorStart_3
   524 ;;		_motorStop_0
   525 ;;		_motorStop_1
   526 ;;		_motorStop_2
   527 ;;		_motorStop_3
   528 ;;		_printf
   529 ;;		_readADC
   530 ;; This function is called by:
   531 ;;		Startup code after reset
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text0
   536  001052                     __ptext0:
   537                           	opt stack 0
   538  001052                     _main:
   539                           	opt stack 28
   540                           
   541                           ;main.c: 100: LATA = 0x00;
   542                           
   543                           ;incstack = 0
   544  001052  0E00               	movlw	0
   545  001054  6E89               	movwf	3977,c	;volatile
   546                           
   547                           ;main.c: 101: LATB = 0x00;
   548  001056  0E00               	movlw	0
   549  001058  6E8A               	movwf	3978,c	;volatile
   550                           
   551                           ;main.c: 102: LATC = 0x00;
   552  00105A  0E00               	movlw	0
   553  00105C  6E8B               	movwf	3979,c	;volatile
   554                           
   555                           ;main.c: 103: LATD = 0x00;
   556  00105E  0E00               	movlw	0
   557  001060  6E8C               	movwf	3980,c	;volatile
   558                           
   559                           ;main.c: 104: LATE = 0x00;
   560  001062  0E00               	movlw	0
   561  001064  6E8D               	movwf	3981,c	;volatile
   562                           
   563                           ;main.c: 108: TRISA = 0xFF;
   564  001066  6892               	setf	3986,c	;volatile
   565                           
   566                           ;main.c: 109: TRISB = 0xFF;
   567  001068  6893               	setf	3987,c	;volatile
   568                           
   569                           ;main.c: 110: TRISC = 0b10000000;
   570  00106A  0E80               	movlw	128
   571  00106C  6E94               	movwf	3988,c	;volatile
   572                           
   573                           ;main.c: 114: TRISD = 0x00;
   574  00106E  0E00               	movlw	0
   575  001070  6E95               	movwf	3989,c	;volatile
   576                           
   577                           ;main.c: 115: TRISE = 0x00;
   578  001072  0E00               	movlw	0
   579  001074  6E96               	movwf	3990,c	;volatile
   580                           
   581                           ;main.c: 118: ADCON0 = 0x00;
   582  001076  0E00               	movlw	0
   583  001078  6EC2               	movwf	4034,c	;volatile
   584                           
   585                           ;main.c: 119: ADCON1 = 0b00001111;
   586  00107A  0E0F               	movlw	15
   587  00107C  6EC1               	movwf	4033,c	;volatile
   588                           
   589                           ;main.c: 123: initLCD();
   590  00107E  ECF7  F00B         	call	_initLCD	;wreg free
   591                           
   592                           ;main.c: 126: I2C_Master_Init(100000);
   593  001082  0EA0               	movlw	160
   594  001084  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   595  001086  0E86               	movlw	134
   596  001088  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   597  00108A  0E01               	movlw	1
   598  00108C  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   599  00108E  0E00               	movlw	0
   600  001090  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   601  001092  ECA0  F00B         	call	_I2C_Master_Init	;wreg free
   602                           
   603                           ;main.c: 127: I2C_Master_Start();
   604  001096  EC08  F00D         	call	_I2C_Master_Start	;wreg free
   605                           
   606                           ;main.c: 134: I2C_Master_Write(0b00010000);
   607  00109A  0E00               	movlw	0
   608  00109C  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   609  00109E  0E10               	movlw	16
   610  0010A0  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   611  0010A2  ECFF  F00C         	call	_I2C_Master_Write	;wreg free
   612                           
   613                           ;main.c: 135: I2C_Master_Stop();
   614  0010A6  EC04  F00D         	call	_I2C_Master_Stop	;wreg free
   615                           
   616                           ;main.c: 138: unsigned char mem[3];
   617                           ;main.c: 139: unsigned char counter = 0;
   618  0010AA  0E00               	movlw	0
   619  0010AC  6E1B               	movwf	main@counter,c
   620                           
   621                           ;main.c: 140: unsigned char keypress;
   622                           ;main.c: 141: unsigned char data;
   623                           ;main.c: 142: static bit SEND;
   624                           ;main.c: 143: SEND = 1;
   625  0010AE  8030               	bsf	main@SEND/(0+8),main@SEND& (0+7),c
   626                           
   627                           ;main.c: 153: I2C_Master_Start();
   628  0010B0  EC08  F00D         	call	_I2C_Master_Start	;wreg free
   629                           
   630                           ;main.c: 154: I2C_Master_Write(0b00010000);
   631  0010B4  0E00               	movlw	0
   632  0010B6  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   633  0010B8  0E10               	movlw	16
   634  0010BA  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   635  0010BC  ECFF  F00C         	call	_I2C_Master_Write	;wreg free
   636                           
   637                           ;main.c: 155: I2C_Master_Write('1');
   638  0010C0  0E00               	movlw	0
   639  0010C2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   640  0010C4  0E31               	movlw	49
   641  0010C6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   642  0010C8  ECFF  F00C         	call	_I2C_Master_Write	;wreg free
   643                           
   644                           ;main.c: 156: I2C_Master_Stop();
   645  0010CC  EC04  F00D         	call	_I2C_Master_Stop	;wreg free
   646                           
   647                           ;main.c: 181: INT1IE = 1;
   648  0010D0  86F0               	bsf	intcon3,3,c	;volatile
   649                           
   650                           ;main.c: 182: (INTCONbits.GIE = 1);
   651  0010D2  8EF2               	bsf	intcon,7,c	;volatile
   652                           
   653                           ;main.c: 185: initLCD();
   654  0010D4  ECF7  F00B         	call	_initLCD	;wreg free
   655                           
   656                           ;main.c: 235: initLCD();
   657  0010D8  ECF7  F00B         	call	_initLCD	;wreg free
   658                           
   659                           ;main.c: 236: printf("%d",B_counter);
   660  0010DC  0E37               	movlw	low (STR_16+7)
   661  0010DE  6E0D               	movwf	printf@f,c
   662  0010E0  0E10               	movlw	high (STR_16+7)
   663  0010E2  6E0E               	movwf	printf@f+1,c
   664  0010E4  C028  F00F         	movff	_B_counter,?_printf+2
   665  0010E8  C029  F010         	movff	_B_counter+1,?_printf+3
   666  0010EC  EC91  F00A         	call	_printf	;wreg free
   667                           
   668                           ;main.c: 237: _delay((unsigned long)((100)*(40000000/4000.0)));
   669  0010F0  0E06               	movlw	6
   670  0010F2  6E1A               	movwf	(??_main+1)& (0+255),c
   671  0010F4  0E13               	movlw	19
   672  0010F6  6E19               	movwf	??_main& (0+255),c
   673  0010F8  0EAE               	movlw	174
   674  0010FA                     u807:
   675  0010FA  2EE8               	decfsz	wreg,f,c
   676  0010FC  D7FE               	bra	u807
   677  0010FE  2E19               	decfsz	??_main& (0+255),f,c
   678  001100  D7FC               	bra	u807
   679  001102  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   680  001104  D7FA               	bra	u807
   681                           
   682                           ;main.c: 238: motorStart_0();
   683  001106  ECD4  F00C         	call	_motorStart_0	;wreg free
   684  00110A                     l1630:
   685                           
   686                           ;main.c: 243: if (B_counter == max){
   687  00110A  502E               	movf	_max,w,c
   688  00110C  1828               	xorwf	_B_counter,w,c
   689  00110E  E107               	bnz	l1634
   690  001110  502F               	movf	_max+1,w,c
   691  001112  1829               	xorwf	_B_counter+1,w,c
   692  001114  A4D8               	btfss	status,2,c
   693  001116  D003               	goto	l120
   694                           
   695                           ;main.c: 244: motorStop_0();
   696  001118  EC9C  F00C         	call	_motorStop_0	;wreg free
   697                           
   698                           ;main.c: 245: break;
   699  00111C  D023               	goto	l121
   700  00111E                     l120:
   701  00111E                     l1634:
   702                           
   703                           ;main.c: 246: }
   704                           ;main.c: 247: if (readADC(0)<=250 ){
   705  00111E  0E00               	movlw	0
   706  001120  EC3E  F00C         	call	_readADC
   707  001124  5002               	movf	?_readADC+1,w,c
   708  001126  E1F1               	bnz	l1630
   709  001128  0EFB               	movlw	251
   710  00112A  5C01               	subwf	?_readADC,w,c
   711  00112C  B0D8               	btfsc	status,0,c
   712  00112E  D7ED               	goto	l119
   713                           
   714                           ;main.c: 249: B_counter ++;
   715  001130  4A28               	infsnz	_B_counter,f,c
   716  001132  2A29               	incf	_B_counter+1,f,c
   717                           
   718                           ;main.c: 250: initLCD();
   719  001134  ECF7  F00B         	call	_initLCD	;wreg free
   720                           
   721                           ;main.c: 251: printf("%d", B_counter);
   722  001138  0E37               	movlw	low (STR_16+7)
   723  00113A  6E0D               	movwf	printf@f,c
   724  00113C  0E10               	movlw	high (STR_16+7)
   725  00113E  6E0E               	movwf	printf@f+1,c
   726  001140  C028  F00F         	movff	_B_counter,?_printf+2
   727  001144  C029  F010         	movff	_B_counter+1,?_printf+3
   728  001148  EC91  F00A         	call	_printf	;wreg free
   729                           
   730                           ;main.c: 252: _delay((unsigned long)((50)*(40000000/4000.0)));
   731  00114C  0E03               	movlw	3
   732  00114E  6E1A               	movwf	(??_main+1)& (0+255),c
   733  001150  0E8A               	movlw	138
   734  001152  6E19               	movwf	??_main& (0+255),c
   735  001154  0E56               	movlw	86
   736  001156                     u817:
   737  001156  2EE8               	decfsz	wreg,f,c
   738  001158  D7FE               	bra	u817
   739  00115A  2E19               	decfsz	??_main& (0+255),f,c
   740  00115C  D7FC               	bra	u817
   741  00115E  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   742  001160  D7FA               	bra	u817
   743  001162  D7D3               	goto	l119
   744  001164                     l121:
   745                           
   746                           ;main.c: 253: }
   747                           ;main.c: 258: }
   748                           ;main.c: 259: initLCD();
   749  001164  ECF7  F00B         	call	_initLCD	;wreg free
   750                           
   751                           ;main.c: 260: printf("done");
   752  001168  0E4B               	movlw	low STR_3
   753  00116A  6E0D               	movwf	printf@f,c
   754  00116C  0E10               	movlw	high STR_3
   755  00116E  6E0E               	movwf	printf@f+1,c
   756  001170  EC91  F00A         	call	_printf	;wreg free
   757                           
   758                           ;main.c: 261: _delay((unsigned long)((1000)*(40000000/4000.0)));
   759  001174  0E33               	movlw	51
   760  001176  6E1A               	movwf	(??_main+1)& (0+255),c
   761  001178  0EBB               	movlw	187
   762  00117A  6E19               	movwf	??_main& (0+255),c
   763  00117C  0EE0               	movlw	224
   764  00117E                     u827:
   765  00117E  2EE8               	decfsz	wreg,f,c
   766  001180  D7FE               	bra	u827
   767  001182  2E19               	decfsz	??_main& (0+255),f,c
   768  001184  D7FC               	bra	u827
   769  001186  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   770  001188  D7FA               	bra	u827
   771                           
   772                           ;main.c: 275: initLCD();
   773  00118A  ECF7  F00B         	call	_initLCD	;wreg free
   774                           
   775                           ;main.c: 276: printf("%d",N_counter);
   776  00118E  0E37               	movlw	low (STR_16+7)
   777  001190  6E0D               	movwf	printf@f,c
   778  001192  0E10               	movlw	high (STR_16+7)
   779  001194  6E0E               	movwf	printf@f+1,c
   780  001196  C026  F00F         	movff	_N_counter,?_printf+2
   781  00119A  C027  F010         	movff	_N_counter+1,?_printf+3
   782  00119E  EC91  F00A         	call	_printf	;wreg free
   783                           
   784                           ;main.c: 277: _delay((unsigned long)((100)*(40000000/4000.0)));
   785  0011A2  0E06               	movlw	6
   786  0011A4  6E1A               	movwf	(??_main+1)& (0+255),c
   787  0011A6  0E13               	movlw	19
   788  0011A8  6E19               	movwf	??_main& (0+255),c
   789  0011AA  0EAE               	movlw	174
   790  0011AC                     u837:
   791  0011AC  2EE8               	decfsz	wreg,f,c
   792  0011AE  D7FE               	bra	u837
   793  0011B0  2E19               	decfsz	??_main& (0+255),f,c
   794  0011B2  D7FC               	bra	u837
   795  0011B4  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   796  0011B6  D7FA               	bra	u837
   797                           
   798                           ;main.c: 278: motorStart_1();
   799  0011B8  ECC6  F00C         	call	_motorStart_1	;wreg free
   800  0011BC                     l1656:
   801                           
   802                           ;main.c: 282: if (N_counter == max){
   803  0011BC  502E               	movf	_max,w,c
   804  0011BE  1826               	xorwf	_N_counter,w,c
   805  0011C0  E107               	bnz	l1660
   806  0011C2  502F               	movf	_max+1,w,c
   807  0011C4  1827               	xorwf	_N_counter+1,w,c
   808  0011C6  A4D8               	btfss	status,2,c
   809  0011C8  D003               	goto	l125
   810                           
   811                           ;main.c: 283: motorStop_1();
   812  0011CA  EC8E  F00C         	call	_motorStop_1	;wreg free
   813                           
   814                           ;main.c: 284: break;
   815  0011CE  D023               	goto	l126
   816  0011D0                     l125:
   817  0011D0                     l1660:
   818                           
   819                           ;main.c: 285: }
   820                           ;main.c: 286: if (readADC(1)<=250 ){
   821  0011D0  0E01               	movlw	1
   822  0011D2  EC3E  F00C         	call	_readADC
   823  0011D6  5002               	movf	?_readADC+1,w,c
   824  0011D8  E1F1               	bnz	l1656
   825  0011DA  0EFB               	movlw	251
   826  0011DC  5C01               	subwf	?_readADC,w,c
   827  0011DE  B0D8               	btfsc	status,0,c
   828  0011E0  D7ED               	goto	l124
   829                           
   830                           ;main.c: 288: N_counter ++;
   831  0011E2  4A26               	infsnz	_N_counter,f,c
   832  0011E4  2A27               	incf	_N_counter+1,f,c
   833                           
   834                           ;main.c: 289: initLCD();
   835  0011E6  ECF7  F00B         	call	_initLCD	;wreg free
   836                           
   837                           ;main.c: 290: printf("%d", N_counter);
   838  0011EA  0E37               	movlw	low (STR_16+7)
   839  0011EC  6E0D               	movwf	printf@f,c
   840  0011EE  0E10               	movlw	high (STR_16+7)
   841  0011F0  6E0E               	movwf	printf@f+1,c
   842  0011F2  C026  F00F         	movff	_N_counter,?_printf+2
   843  0011F6  C027  F010         	movff	_N_counter+1,?_printf+3
   844  0011FA  EC91  F00A         	call	_printf	;wreg free
   845                           
   846                           ;main.c: 291: _delay((unsigned long)((50)*(40000000/4000.0)));
   847  0011FE  0E03               	movlw	3
   848  001200  6E1A               	movwf	(??_main+1)& (0+255),c
   849  001202  0E8A               	movlw	138
   850  001204  6E19               	movwf	??_main& (0+255),c
   851  001206  0E56               	movlw	86
   852  001208                     u847:
   853  001208  2EE8               	decfsz	wreg,f,c
   854  00120A  D7FE               	bra	u847
   855  00120C  2E19               	decfsz	??_main& (0+255),f,c
   856  00120E  D7FC               	bra	u847
   857  001210  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   858  001212  D7FA               	bra	u847
   859  001214  D7D3               	goto	l124
   860  001216                     l126:
   861                           
   862                           ;main.c: 292: }
   863                           ;main.c: 294: }
   864                           ;main.c: 296: initLCD();
   865  001216  ECF7  F00B         	call	_initLCD	;wreg free
   866                           
   867                           ;main.c: 297: printf("done");
   868  00121A  0E4B               	movlw	low STR_3
   869  00121C  6E0D               	movwf	printf@f,c
   870  00121E  0E10               	movlw	high STR_3
   871  001220  6E0E               	movwf	printf@f+1,c
   872  001222  EC91  F00A         	call	_printf	;wreg free
   873                           
   874                           ;main.c: 298: _delay((unsigned long)((1000)*(40000000/4000.0)));
   875  001226  0E33               	movlw	51
   876  001228  6E1A               	movwf	(??_main+1)& (0+255),c
   877  00122A  0EBB               	movlw	187
   878  00122C  6E19               	movwf	??_main& (0+255),c
   879  00122E  0EE0               	movlw	224
   880  001230                     u857:
   881  001230  2EE8               	decfsz	wreg,f,c
   882  001232  D7FE               	bra	u857
   883  001234  2E19               	decfsz	??_main& (0+255),f,c
   884  001236  D7FC               	bra	u857
   885  001238  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   886  00123A  D7FA               	bra	u857
   887                           
   888                           ;main.c: 315: initLCD();
   889  00123C  ECF7  F00B         	call	_initLCD	;wreg free
   890                           
   891                           ;main.c: 316: printf("%d",S_counter);
   892  001240  0E37               	movlw	low (STR_16+7)
   893  001242  6E0D               	movwf	printf@f,c
   894  001244  0E10               	movlw	high (STR_16+7)
   895  001246  6E0E               	movwf	printf@f+1,c
   896  001248  C024  F00F         	movff	_S_counter,?_printf+2
   897  00124C  C025  F010         	movff	_S_counter+1,?_printf+3
   898  001250  EC91  F00A         	call	_printf	;wreg free
   899                           
   900                           ;main.c: 317: _delay((unsigned long)((100)*(40000000/4000.0)));
   901  001254  0E06               	movlw	6
   902  001256  6E1A               	movwf	(??_main+1)& (0+255),c
   903  001258  0E13               	movlw	19
   904  00125A  6E19               	movwf	??_main& (0+255),c
   905  00125C  0EAE               	movlw	174
   906  00125E                     u867:
   907  00125E  2EE8               	decfsz	wreg,f,c
   908  001260  D7FE               	bra	u867
   909  001262  2E19               	decfsz	??_main& (0+255),f,c
   910  001264  D7FC               	bra	u867
   911  001266  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   912  001268  D7FA               	bra	u867
   913                           
   914                           ;main.c: 318: motorStart_2();
   915  00126A  ECB8  F00C         	call	_motorStart_2	;wreg free
   916  00126E                     l1682:
   917                           
   918                           ;main.c: 322: if (S_counter == max){
   919  00126E  502E               	movf	_max,w,c
   920  001270  1824               	xorwf	_S_counter,w,c
   921  001272  E107               	bnz	l1686
   922  001274  502F               	movf	_max+1,w,c
   923  001276  1825               	xorwf	_S_counter+1,w,c
   924  001278  A4D8               	btfss	status,2,c
   925  00127A  D003               	goto	l130
   926                           
   927                           ;main.c: 323: motorStop_2();
   928  00127C  EC80  F00C         	call	_motorStop_2	;wreg free
   929                           
   930                           ;main.c: 324: break;
   931  001280  D023               	goto	l131
   932  001282                     l130:
   933  001282                     l1686:
   934                           
   935                           ;main.c: 325: }
   936                           ;main.c: 326: if (readADC(5)<=250 ){
   937  001282  0E05               	movlw	5
   938  001284  EC3E  F00C         	call	_readADC
   939  001288  5002               	movf	?_readADC+1,w,c
   940  00128A  E1F1               	bnz	l1682
   941  00128C  0EFB               	movlw	251
   942  00128E  5C01               	subwf	?_readADC,w,c
   943  001290  B0D8               	btfsc	status,0,c
   944  001292  D7ED               	goto	l129
   945                           
   946                           ;main.c: 328: S_counter ++;
   947  001294  4A24               	infsnz	_S_counter,f,c
   948  001296  2A25               	incf	_S_counter+1,f,c
   949                           
   950                           ;main.c: 329: initLCD();
   951  001298  ECF7  F00B         	call	_initLCD	;wreg free
   952                           
   953                           ;main.c: 330: printf("%d", S_counter);
   954  00129C  0E37               	movlw	low (STR_16+7)
   955  00129E  6E0D               	movwf	printf@f,c
   956  0012A0  0E10               	movlw	high (STR_16+7)
   957  0012A2  6E0E               	movwf	printf@f+1,c
   958  0012A4  C024  F00F         	movff	_S_counter,?_printf+2
   959  0012A8  C025  F010         	movff	_S_counter+1,?_printf+3
   960  0012AC  EC91  F00A         	call	_printf	;wreg free
   961                           
   962                           ;main.c: 331: _delay((unsigned long)((50)*(40000000/4000.0)));
   963  0012B0  0E03               	movlw	3
   964  0012B2  6E1A               	movwf	(??_main+1)& (0+255),c
   965  0012B4  0E8A               	movlw	138
   966  0012B6  6E19               	movwf	??_main& (0+255),c
   967  0012B8  0E56               	movlw	86
   968  0012BA                     u877:
   969  0012BA  2EE8               	decfsz	wreg,f,c
   970  0012BC  D7FE               	bra	u877
   971  0012BE  2E19               	decfsz	??_main& (0+255),f,c
   972  0012C0  D7FC               	bra	u877
   973  0012C2  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   974  0012C4  D7FA               	bra	u877
   975  0012C6  D7D3               	goto	l129
   976  0012C8                     l131:
   977                           
   978                           ;main.c: 332: }
   979                           ;main.c: 334: }
   980                           ;main.c: 336: initLCD();
   981  0012C8  ECF7  F00B         	call	_initLCD	;wreg free
   982                           
   983                           ;main.c: 337: printf("done");
   984  0012CC  0E4B               	movlw	low STR_3
   985  0012CE  6E0D               	movwf	printf@f,c
   986  0012D0  0E10               	movlw	high STR_3
   987  0012D2  6E0E               	movwf	printf@f+1,c
   988  0012D4  EC91  F00A         	call	_printf	;wreg free
   989                           
   990                           ;main.c: 338: _delay((unsigned long)((1000)*(40000000/4000.0)));
   991  0012D8  0E33               	movlw	51
   992  0012DA  6E1A               	movwf	(??_main+1)& (0+255),c
   993  0012DC  0EBB               	movlw	187
   994  0012DE  6E19               	movwf	??_main& (0+255),c
   995  0012E0  0EE0               	movlw	224
   996  0012E2                     u887:
   997  0012E2  2EE8               	decfsz	wreg,f,c
   998  0012E4  D7FE               	bra	u887
   999  0012E6  2E19               	decfsz	??_main& (0+255),f,c
  1000  0012E8  D7FC               	bra	u887
  1001  0012EA  2E1A               	decfsz	(??_main+1)& (0+255),f,c
  1002  0012EC  D7FA               	bra	u887
  1003                           
  1004                           ;main.c: 353: initLCD();
  1005  0012EE  ECF7  F00B         	call	_initLCD	;wreg free
  1006                           
  1007                           ;main.c: 354: printf("%d",W_counter);
  1008  0012F2  0E37               	movlw	low (STR_16+7)
  1009  0012F4  6E0D               	movwf	printf@f,c
  1010  0012F6  0E10               	movlw	high (STR_16+7)
  1011  0012F8  6E0E               	movwf	printf@f+1,c
  1012  0012FA  C022  F00F         	movff	_W_counter,?_printf+2
  1013  0012FE  C023  F010         	movff	_W_counter+1,?_printf+3
  1014  001302  EC91  F00A         	call	_printf	;wreg free
  1015                           
  1016                           ;main.c: 355: _delay((unsigned long)((100)*(40000000/4000.0)));
  1017  001306  0E06               	movlw	6
  1018  001308  6E1A               	movwf	(??_main+1)& (0+255),c
  1019  00130A  0E13               	movlw	19
  1020  00130C  6E19               	movwf	??_main& (0+255),c
  1021  00130E  0EAE               	movlw	174
  1022  001310                     u897:
  1023  001310  2EE8               	decfsz	wreg,f,c
  1024  001312  D7FE               	bra	u897
  1025  001314  2E19               	decfsz	??_main& (0+255),f,c
  1026  001316  D7FC               	bra	u897
  1027  001318  2E1A               	decfsz	(??_main+1)& (0+255),f,c
  1028  00131A  D7FA               	bra	u897
  1029                           
  1030                           ;main.c: 356: motorStart_3();
  1031  00131C  ECAA  F00C         	call	_motorStart_3	;wreg free
  1032  001320                     l1708:
  1033                           
  1034                           ;main.c: 360: if (W_counter == max){
  1035  001320  502E               	movf	_max,w,c
  1036  001322  1822               	xorwf	_W_counter,w,c
  1037  001324  E107               	bnz	l1712
  1038  001326  502F               	movf	_max+1,w,c
  1039  001328  1823               	xorwf	_W_counter+1,w,c
  1040  00132A  A4D8               	btfss	status,2,c
  1041  00132C  D003               	goto	l135
  1042                           
  1043                           ;main.c: 361: motorStop_3();
  1044  00132E  EC72  F00C         	call	_motorStop_3	;wreg free
  1045                           
  1046                           ;main.c: 362: break;
  1047  001332  D023               	goto	l136
  1048  001334                     l135:
  1049  001334                     l1712:
  1050                           
  1051                           ;main.c: 363: }
  1052                           ;main.c: 364: if (readADC(4)<=250 ){
  1053  001334  0E04               	movlw	4
  1054  001336  EC3E  F00C         	call	_readADC
  1055  00133A  5002               	movf	?_readADC+1,w,c
  1056  00133C  E1F1               	bnz	l1708
  1057  00133E  0EFB               	movlw	251
  1058  001340  5C01               	subwf	?_readADC,w,c
  1059  001342  B0D8               	btfsc	status,0,c
  1060  001344  D7ED               	goto	l134
  1061                           
  1062                           ;main.c: 366: W_counter ++;
  1063  001346  4A22               	infsnz	_W_counter,f,c
  1064  001348  2A23               	incf	_W_counter+1,f,c
  1065                           
  1066                           ;main.c: 367: initLCD();
  1067  00134A  ECF7  F00B         	call	_initLCD	;wreg free
  1068                           
  1069                           ;main.c: 368: printf("%d", W_counter);
  1070  00134E  0E37               	movlw	low (STR_16+7)
  1071  001350  6E0D               	movwf	printf@f,c
  1072  001352  0E10               	movlw	high (STR_16+7)
  1073  001354  6E0E               	movwf	printf@f+1,c
  1074  001356  C022  F00F         	movff	_W_counter,?_printf+2
  1075  00135A  C023  F010         	movff	_W_counter+1,?_printf+3
  1076  00135E  EC91  F00A         	call	_printf	;wreg free
  1077                           
  1078                           ;main.c: 369: _delay((unsigned long)((50)*(40000000/4000.0)));
  1079  001362  0E03               	movlw	3
  1080  001364  6E1A               	movwf	(??_main+1)& (0+255),c
  1081  001366  0E8A               	movlw	138
  1082  001368  6E19               	movwf	??_main& (0+255),c
  1083  00136A  0E56               	movlw	86
  1084  00136C                     u907:
  1085  00136C  2EE8               	decfsz	wreg,f,c
  1086  00136E  D7FE               	bra	u907
  1087  001370  2E19               	decfsz	??_main& (0+255),f,c
  1088  001372  D7FC               	bra	u907
  1089  001374  2E1A               	decfsz	(??_main+1)& (0+255),f,c
  1090  001376  D7FA               	bra	u907
  1091  001378  D7D3               	goto	l134
  1092  00137A                     l136:
  1093                           
  1094                           ;main.c: 370: }
  1095                           ;main.c: 372: }
  1096                           ;main.c: 374: initLCD();
  1097  00137A  ECF7  F00B         	call	_initLCD	;wreg free
  1098                           
  1099                           ;main.c: 375: printf("done");
  1100  00137E  0E4B               	movlw	low STR_3
  1101  001380  6E0D               	movwf	printf@f,c
  1102  001382  0E10               	movlw	high STR_3
  1103  001384  6E0E               	movwf	printf@f+1,c
  1104  001386  EC91  F00A         	call	_printf	;wreg free
  1105                           
  1106                           ;main.c: 376: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1107  00138A  0E33               	movlw	51
  1108  00138C  6E1A               	movwf	(??_main+1)& (0+255),c
  1109  00138E  0EBB               	movlw	187
  1110  001390  6E19               	movwf	??_main& (0+255),c
  1111  001392  0EE0               	movlw	224
  1112  001394                     u917:
  1113  001394  2EE8               	decfsz	wreg,f,c
  1114  001396  D7FE               	bra	u917
  1115  001398  2E19               	decfsz	??_main& (0+255),f,c
  1116  00139A  D7FC               	bra	u917
  1117  00139C  2E1A               	decfsz	(??_main+1)& (0+255),f,c
  1118  00139E  D7FA               	bra	u917
  1119                           
  1120                           ;main.c: 383: for (i = 0; i< 30; i ++){
  1121  0013A0  0E00               	movlw	0
  1122  0013A2  6E1D               	movwf	_i+1,c
  1123  0013A4  0E00               	movlw	0
  1124  0013A6  6E1C               	movwf	_i,c
  1125  0013A8                     l1730:
  1126  0013A8  BE1D               	btfsc	_i+1,7,c
  1127  0013AA  D006               	goto	l139
  1128  0013AC  501D               	movf	_i+1,w,c
  1129  0013AE  E107               	bnz	l1738
  1130  0013B0  0E1E               	movlw	30
  1131  0013B2  5C1C               	subwf	_i,w,c
  1132  0013B4  B0D8               	btfsc	status,0,c
  1133  0013B6  D003               	goto	u770
  1134  0013B8                     l139:
  1135  0013B8  4A1C               	infsnz	_i,f,c
  1136  0013BA  2A1D               	incf	_i+1,f,c
  1137  0013BC  D7F5               	goto	l1730
  1138  0013BE                     u770:
  1139  0013BE                     l1738:
  1140                           
  1141                           ;main.c: 384: void servoRotate_counter();
  1142                           ;main.c: 385: }
  1143                           ;main.c: 392: I2C_Master_Init(100000);
  1144  0013BE  0EA0               	movlw	160
  1145  0013C0  6E0E               	movwf	I2C_Master_Init@clockFreq,c
  1146  0013C2  0E86               	movlw	134
  1147  0013C4  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
  1148  0013C6  0E01               	movlw	1
  1149  0013C8  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
  1150  0013CA  0E00               	movlw	0
  1151  0013CC  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
  1152  0013CE  ECA0  F00B         	call	_I2C_Master_Init	;wreg free
  1153                           
  1154                           ;main.c: 393: I2C_Master_Start();
  1155  0013D2  EC08  F00D         	call	_I2C_Master_Start	;wreg free
  1156                           
  1157                           ;main.c: 400: I2C_Master_Write(0b00010000);
  1158  0013D6  0E00               	movlw	0
  1159  0013D8  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1160  0013DA  0E10               	movlw	16
  1161  0013DC  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1162  0013DE  ECFF  F00C         	call	_I2C_Master_Write	;wreg free
  1163                           
  1164                           ;main.c: 401: I2C_Master_Stop();
  1165  0013E2  EC04  F00D         	call	_I2C_Master_Stop	;wreg free
  1166                           
  1167                           ;main.c: 404: unsigned char mem[3];
  1168                           ;main.c: 405: unsigned char counter = 0;
  1169  0013E6  0E00               	movlw	0
  1170  0013E8  6E1B               	movwf	main@counter,c
  1171                           
  1172                           ;main.c: 406: unsigned char keypress;
  1173                           ;main.c: 407: unsigned char data;
  1174                           ;main.c: 408: static bit SEND;
  1175                           ;main.c: 409: SEND = 1;
  1176  0013EA  8030               	bsf	main@SEND/(0+8),main@SEND& (0+7),c
  1177                           
  1178                           ;main.c: 419: I2C_Master_Start();
  1179  0013EC  EC08  F00D         	call	_I2C_Master_Start	;wreg free
  1180                           
  1181                           ;main.c: 420: I2C_Master_Write(0b00010000);
  1182  0013F0  0E00               	movlw	0
  1183  0013F2  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1184  0013F4  0E10               	movlw	16
  1185  0013F6  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1186  0013F8  ECFF  F00C         	call	_I2C_Master_Write	;wreg free
  1187                           
  1188                           ;main.c: 421: I2C_Master_Write('2');
  1189  0013FC  0E00               	movlw	0
  1190  0013FE  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
  1191  001400  0E32               	movlw	50
  1192  001402  6E02               	movwf	I2C_Master_Write@byteToWrite,c
  1193  001404  ECFF  F00C         	call	_I2C_Master_Write	;wreg free
  1194                           
  1195                           ;main.c: 422: I2C_Master_Stop();
  1196  001408  EC04  F00D         	call	_I2C_Master_Stop	;wreg free
  1197                           
  1198                           ;main.c: 428: motorStart_0();
  1199  00140C  ECD4  F00C         	call	_motorStart_0	;wreg free
  1200  001410                     l1754:
  1201                           
  1202                           ;main.c: 431: if (B_remain == 2){
  1203  001410  0E02               	movlw	2
  1204  001412  1820               	xorwf	_B_remain,w,c
  1205  001414  1021               	iorwf	_B_remain+1,w,c
  1206  001416  A4D8               	btfss	status,2,c
  1207  001418  D003               	goto	l144
  1208                           
  1209                           ;main.c: 432: motorStop_0();
  1210  00141A  EC9C  F00C         	call	_motorStop_0	;wreg free
  1211                           
  1212                           ;main.c: 433: break;
  1213  00141E  D023               	goto	l145
  1214  001420                     l144:
  1215                           
  1216                           ;main.c: 434: }
  1217                           ;main.c: 435: if (readADC(0)<=250 ){
  1218  001420  0E00               	movlw	0
  1219  001422  EC3E  F00C         	call	_readADC
  1220  001426  5002               	movf	?_readADC+1,w,c
  1221  001428  E1F3               	bnz	l1754
  1222  00142A  0EFB               	movlw	251
  1223  00142C  5C01               	subwf	?_readADC,w,c
  1224  00142E  B0D8               	btfsc	status,0,c
  1225  001430  D7EF               	goto	l143
  1226                           
  1227                           ;main.c: 437: B_remain ++;
  1228  001432  4A20               	infsnz	_B_remain,f,c
  1229  001434  2A21               	incf	_B_remain+1,f,c
  1230                           
  1231                           ;main.c: 438: initLCD();
  1232  001436  ECF7  F00B         	call	_initLCD	;wreg free
  1233                           
  1234                           ;main.c: 439: printf("%d", B_remain);
  1235  00143A  0E37               	movlw	low (STR_16+7)
  1236  00143C  6E0D               	movwf	printf@f,c
  1237  00143E  0E10               	movlw	high (STR_16+7)
  1238  001440  6E0E               	movwf	printf@f+1,c
  1239  001442  C020  F00F         	movff	_B_remain,?_printf+2
  1240  001446  C021  F010         	movff	_B_remain+1,?_printf+3
  1241  00144A  EC91  F00A         	call	_printf	;wreg free
  1242                           
  1243                           ;main.c: 440: _delay((unsigned long)((50)*(40000000/4000.0)));
  1244  00144E  0E03               	movlw	3
  1245  001450  6E1A               	movwf	(??_main+1)& (0+255),c
  1246  001452  0E8A               	movlw	138
  1247  001454  6E19               	movwf	??_main& (0+255),c
  1248  001456  0E56               	movlw	86
  1249  001458                     u927:
  1250  001458  2EE8               	decfsz	wreg,f,c
  1251  00145A  D7FE               	bra	u927
  1252  00145C  2E19               	decfsz	??_main& (0+255),f,c
  1253  00145E  D7FC               	bra	u927
  1254  001460  2E1A               	decfsz	(??_main+1)& (0+255),f,c
  1255  001462  D7FA               	bra	u927
  1256  001464  D7D5               	goto	l143
  1257  001466                     l145:
  1258                           
  1259                           ;main.c: 441: }
  1260                           ;main.c: 448: }
  1261                           ;main.c: 452: initLCD();
  1262  001466  ECF7  F00B         	call	_initLCD	;wreg free
  1263                           
  1264                           ;main.c: 453: printf("Bolts:%d",B_counter);
  1265  00146A  0E3A               	movlw	low STR_14
  1266  00146C  6E0D               	movwf	printf@f,c
  1267  00146E  0E10               	movlw	high STR_14
  1268  001470  6E0E               	movwf	printf@f+1,c
  1269  001472  C028  F00F         	movff	_B_counter,?_printf+2
  1270  001476  C029  F010         	movff	_B_counter+1,?_printf+3
  1271  00147A  EC91  F00A         	call	_printf	;wreg free
  1272                           
  1273                           ;main.c: 454: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1274  00147E  0E33               	movlw	51
  1275  001480  6E1A               	movwf	(??_main+1)& (0+255),c
  1276  001482  0EBB               	movlw	187
  1277  001484  6E19               	movwf	??_main& (0+255),c
  1278  001486  0EE0               	movlw	224
  1279  001488                     u937:
  1280  001488  2EE8               	decfsz	wreg,f,c
  1281  00148A  D7FE               	bra	u937
  1282  00148C  2E19               	decfsz	??_main& (0+255),f,c
  1283  00148E  D7FC               	bra	u937
  1284  001490  2E1A               	decfsz	(??_main+1)& (0+255),f,c
  1285  001492  D7FA               	bra	u937
  1286                           
  1287                           ;main.c: 456: initLCD();
  1288  001494  ECF7  F00B         	call	_initLCD	;wreg free
  1289                           
  1290                           ;main.c: 457: printf("Nuts:%d",N_counter);
  1291  001498  0E43               	movlw	low STR_15
  1292  00149A  6E0D               	movwf	printf@f,c
  1293  00149C  0E10               	movlw	high STR_15
  1294  00149E  6E0E               	movwf	printf@f+1,c
  1295  0014A0  C026  F00F         	movff	_N_counter,?_printf+2
  1296  0014A4  C027  F010         	movff	_N_counter+1,?_printf+3
  1297  0014A8  EC91  F00A         	call	_printf	;wreg free
  1298                           
  1299                           ;main.c: 458: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1300  0014AC  0E33               	movlw	51
  1301  0014AE  6E1A               	movwf	(??_main+1)& (0+255),c
  1302  0014B0  0EBB               	movlw	187
  1303  0014B2  6E19               	movwf	??_main& (0+255),c
  1304  0014B4  0EE0               	movlw	224
  1305  0014B6                     u947:
  1306  0014B6  2EE8               	decfsz	wreg,f,c
  1307  0014B8  D7FE               	bra	u947
  1308  0014BA  2E19               	decfsz	??_main& (0+255),f,c
  1309  0014BC  D7FC               	bra	u947
  1310  0014BE  2E1A               	decfsz	(??_main+1)& (0+255),f,c
  1311  0014C0  D7FA               	bra	u947
  1312                           
  1313                           ;main.c: 460: initLCD();
  1314  0014C2  ECF7  F00B         	call	_initLCD	;wreg free
  1315                           
  1316                           ;main.c: 461: printf("Spacer:%d",S_counter);
  1317  0014C6  0E30               	movlw	low STR_16
  1318  0014C8  6E0D               	movwf	printf@f,c
  1319  0014CA  0E10               	movlw	high STR_16
  1320  0014CC  6E0E               	movwf	printf@f+1,c
  1321  0014CE  C024  F00F         	movff	_S_counter,?_printf+2
  1322  0014D2  C025  F010         	movff	_S_counter+1,?_printf+3
  1323  0014D6  EC91  F00A         	call	_printf	;wreg free
  1324                           
  1325                           ;main.c: 462: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1326  0014DA  0E33               	movlw	51
  1327  0014DC  6E1A               	movwf	(??_main+1)& (0+255),c
  1328  0014DE  0EBB               	movlw	187
  1329  0014E0  6E19               	movwf	??_main& (0+255),c
  1330  0014E2  0EE0               	movlw	224
  1331  0014E4                     u957:
  1332  0014E4  2EE8               	decfsz	wreg,f,c
  1333  0014E6  D7FE               	bra	u957
  1334  0014E8  2E19               	decfsz	??_main& (0+255),f,c
  1335  0014EA  D7FC               	bra	u957
  1336  0014EC  2E1A               	decfsz	(??_main+1)& (0+255),f,c
  1337  0014EE  D7FA               	bra	u957
  1338                           
  1339                           ;main.c: 464: initLCD();
  1340  0014F0  ECF7  F00B         	call	_initLCD	;wreg free
  1341                           
  1342                           ;main.c: 465: printf("Washers:%d",W_counter);
  1343  0014F4  0E25               	movlw	low STR_17
  1344  0014F6  6E0D               	movwf	printf@f,c
  1345  0014F8  0E10               	movlw	high STR_17
  1346  0014FA  6E0E               	movwf	printf@f+1,c
  1347  0014FC  C022  F00F         	movff	_W_counter,?_printf+2
  1348  001500  C023  F010         	movff	_W_counter+1,?_printf+3
  1349  001504  EC91  F00A         	call	_printf	;wreg free
  1350                           
  1351                           ;main.c: 466: _delay((unsigned long)((1000)*(40000000/4000.0)));
  1352  001508  0E33               	movlw	51
  1353  00150A  6E1A               	movwf	(??_main+1)& (0+255),c
  1354  00150C  0EBB               	movlw	187
  1355  00150E  6E19               	movwf	??_main& (0+255),c
  1356  001510  0EE0               	movlw	224
  1357  001512                     u967:
  1358  001512  2EE8               	decfsz	wreg,f,c
  1359  001514  D7FE               	bra	u967
  1360  001516  2E19               	decfsz	??_main& (0+255),f,c
  1361  001518  D7FC               	bra	u967
  1362  00151A  2E1A               	decfsz	(??_main+1)& (0+255),f,c
  1363  00151C  D7FA               	bra	u967
  1364  00151E  EF00  F000         	goto	start
  1365  001522                     __end_of_main:
  1366                           	opt stack 0
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           intcon	equ	0xFF2
  1372                           intcon3	equ	0xFF0
  1373                           postinc0	equ	0xFEE
  1374                           wreg	equ	0xFE8
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _readADC *****************
  1378 ;; Defined at:
  1379 ;;		line 472 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  channel         1    wreg     unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  channel         1    4[COMRAM] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  2    0[COMRAM] unsigned short 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;Total ram usage:        5 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text1
  1407  00187C                     __ptext1:
  1408                           	opt stack 0
  1409  00187C                     _readADC:
  1410                           	opt stack 30
  1411                           
  1412                           ;incstack = 0
  1413                           ;readADC@channel stored from wreg
  1414  00187C  6E05               	movwf	readADC@channel,c
  1415                           
  1416                           ;main.c: 481: ADCON0 = (channel & 0x0F) << 2;
  1417  00187E  C005  F003         	movff	readADC@channel,??_readADC
  1418  001882  0E0F               	movlw	15
  1419  001884  1603               	andwf	??_readADC,f,c
  1420  001886  90D8               	bcf	status,0,c
  1421  001888  3603               	rlcf	??_readADC,f,c
  1422  00188A  90D8               	bcf	status,0,c
  1423  00188C  3403               	rlcf	??_readADC,w,c
  1424  00188E  6EC2               	movwf	4034,c	;volatile
  1425                           
  1426                           ;main.c: 482: ADON = 1;
  1427  001890  80C2               	bsf	4034,0,c	;volatile
  1428                           
  1429                           ;main.c: 483: ADCON0bits.GO = 1;
  1430  001892  82C2               	bsf	4034,1,c	;volatile
  1431  001894  B2C2               	btfsc	4034,1,c	;volatile
  1432  001896  D7FE               	goto	l152
  1433                           
  1434                           ;main.c: 485: analog_result = ADRESL + (ADRESH*256);
  1435  001898  50C4               	movf	4036,w,c	;volatile
  1436  00189A  6E04               	movwf	(??_readADC+1)& (0+255),c
  1437  00189C  6A03               	clrf	??_readADC& (0+255),c
  1438  00189E  50C3               	movf	4035,w,c	;volatile
  1439  0018A0  2403               	addwf	??_readADC,w,c
  1440  0018A2  6E1E               	movwf	_analog_result,c
  1441  0018A4  0E00               	movlw	0
  1442  0018A6  2004               	addwfc	??_readADC+1,w,c
  1443  0018A8  6E1F               	movwf	_analog_result+1,c
  1444                           
  1445                           ;main.c: 486: return analog_result;
  1446  0018AA  C01E  F001         	movff	_analog_result,?_readADC
  1447  0018AE  C01F  F002         	movff	_analog_result+1,?_readADC+1
  1448  0018B2  0012               	return	
  1449  0018B4                     __end_of_readADC:
  1450                           	opt stack 0
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           intcon	equ	0xFF2
  1456                           intcon3	equ	0xFF0
  1457                           postinc0	equ	0xFEE
  1458                           wreg	equ	0xFE8
  1459                           status	equ	0xFD8
  1460                           
  1461 ;; *************** function _printf *****************
  1462 ;; Defined at:
  1463 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  f               2   12[COMRAM] PTR const unsigned char 
  1466 ;;		 -> STR_17(11), STR_16(10), STR_15(8), STR_14(9), 
  1467 ;;		 -> STR_13(3), STR_12(5), STR_11(3), STR_10(3), 
  1468 ;;		 -> STR_9(5), STR_8(3), STR_7(3), STR_6(5), 
  1469 ;;		 -> STR_5(3), STR_4(3), STR_3(5), STR_2(3), 
  1470 ;;		 -> STR_1(3), 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  tmpval          4    0        struct .
  1473 ;;  cp              3    0        PTR const unsigned char 
  1474 ;;  val             2   21[COMRAM] unsigned int 
  1475 ;;  ap              2   17[COMRAM] PTR void [1]
  1476 ;;		 -> ?_printf(2), 
  1477 ;;  len             2    0        unsigned int 
  1478 ;;  c               1   23[COMRAM] char 
  1479 ;;  prec            1   20[COMRAM] char 
  1480 ;;  flag            1   19[COMRAM] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  2   12[COMRAM] int 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;Total ram usage:       12 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    2
  1497 ;; This function calls:
  1498 ;;		___lwdiv
  1499 ;;		___lwmod
  1500 ;;		_putch
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text2
  1507  001522                     __ptext2:
  1508                           	opt stack 0
  1509  001522                     _printf:
  1510                           	opt stack 28
  1511                           
  1512                           ;doprnt.c: 466: va_list ap;
  1513                           ;doprnt.c: 499: signed char c;
  1514                           ;doprnt.c: 506: signed char prec;
  1515                           ;doprnt.c: 508: unsigned char flag;
  1516                           ;doprnt.c: 523: union {
  1517                           ;doprnt.c: 524: unsigned long vd;
  1518                           ;doprnt.c: 525: double integ;
  1519                           ;doprnt.c: 526: } tmpval;
  1520                           ;doprnt.c: 528: unsigned int val;
  1521                           ;doprnt.c: 529: unsigned len;
  1522                           ;doprnt.c: 530: const char * cp;
  1523                           ;doprnt.c: 533: *ap = __va_start();
  1524                           
  1525                           ;incstack = 0
  1526  001522  0E0F               	movlw	low (?_printf+2)
  1527  001524  6E12               	movwf	printf@ap,c
  1528  001526  0E00               	movlw	high (?_printf+2)
  1529  001528  6E13               	movwf	printf@ap+1,c
  1530                           
  1531                           ;doprnt.c: 536: while(c = *f++) {
  1532  00152A  D07D               	goto	u650
  1533  00152C                     
  1534                           ;doprnt.c: 538: if(c != '%')
  1535  00152C  0E25               	movlw	37
  1536  00152E  1818               	xorwf	printf@c,w,c
  1537  001530  B4D8               	btfsc	status,2,c
  1538  001532  D004               	goto	l301
  1539                           
  1540                           ;doprnt.c: 540: {
  1541                           ;doprnt.c: 541: (putch(c) );
  1542  001534  5018               	movf	printf@c,w,c
  1543  001536  ECE2  F00C         	call	_putch
  1544                           
  1545                           ;doprnt.c: 542: continue;
  1546  00153A  D075               	goto	u650
  1547  00153C                     l301:
  1548                           
  1549                           ;doprnt.c: 543: }
  1550                           ;doprnt.c: 548: flag = 0;
  1551  00153C  0E00               	movlw	0
  1552  00153E  6E14               	movwf	printf@flag,c
  1553                           
  1554                           ;doprnt.c: 822: }
  1555                           
  1556                           ;doprnt.c: 813: continue;
  1557                           
  1558                           ;doprnt.c: 802: default:
  1559                           
  1560                           ;doprnt.c: 698: case 'i':
  1561                           ;doprnt.c: 699: break;
  1562                           
  1563                           ;doprnt.c: 697: case 'd':
  1564                           
  1565                           ;doprnt.c: 638: goto alldone;
  1566                           
  1567                           ;doprnt.c: 637: case 0:
  1568                           
  1569                           ;doprnt.c: 635: switch(c = *f++) {
  1570  001540  C00D  FFF6         	movff	printf@f,tblptrl
  1571  001544  C00E  FFF7         	movff	printf@f+1,tblptrh
  1572  001548  4A0D               	infsnz	printf@f,f,c
  1573  00154A  2A0E               	incf	printf@f+1,f,c
  1574  00154C                     	if	0	;tblptru may be non-zero
  1575  00154C                     	endif
  1576  00154C                     	if	0	;tblptru may be non-zero
  1577  00154C                     	endif
  1578  00154C  0008               	tblrd		*
  1579  00154E  CFF5 F018          	movff	tablat,printf@c
  1580  001552  5018               	movf	printf@c,w,c
  1581                           
  1582                           ; Switch size 1, requested type "space"
  1583                           ; Number of cases is 3, Range of values is 0 to 105
  1584                           ; switch strategies available:
  1585                           ; Name         Instructions Cycles
  1586                           ; simple_byte           10     6 (average)
  1587                           ;	Chosen strategy is simple_byte
  1588  001554  0A00               	xorlw	0	; case 0
  1589  001556  B4D8               	btfsc	status,2,c
  1590  001558  0012               	return	
  1591  00155A  0A64               	xorlw	100	; case 100
  1592  00155C  B4D8               	btfsc	status,2,c
  1593  00155E  D003               	goto	l307
  1594  001560  0A0D               	xorlw	13	; case 105
  1595  001562  A4D8               	btfss	status,2,c
  1596  001564  D060               	goto	u650
  1597  001566                     l307:
  1598                           
  1599                           ;doprnt.c: 1253: {
  1600                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1601  001566  C012  FFD9         	movff	printf@ap,fsr2l
  1602  00156A  C013  FFDA         	movff	printf@ap+1,fsr2h
  1603  00156E  CFDE F016          	movff	postinc2,printf@val
  1604  001572  CFDD F017          	movff	postdec2,printf@val+1
  1605  001576  0E02               	movlw	2
  1606  001578  2612               	addwf	printf@ap,f,c
  1607  00157A  0E00               	movlw	0
  1608  00157C  2213               	addwfc	printf@ap+1,f,c
  1609                           
  1610                           ;doprnt.c: 1261: if((int)val < 0) {
  1611  00157E  AE17               	btfss	printf@val+1,7,c
  1612  001580  D006               	goto	l309
  1613                           
  1614                           ;doprnt.c: 1262: flag |= 0x03;
  1615  001582  0E03               	movlw	3
  1616  001584  1214               	iorwf	printf@flag,f,c
  1617                           
  1618                           ;doprnt.c: 1263: val = -val;
  1619  001586  6C16               	negf	printf@val,c
  1620  001588  1E17               	comf	printf@val+1,f,c
  1621  00158A  B0D8               	btfsc	status,0,c
  1622  00158C  2A17               	incf	printf@val+1,f,c
  1623  00158E                     l309:
  1624                           
  1625                           ;doprnt.c: 1264: }
  1626                           ;doprnt.c: 1266: }
  1627                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1628  00158E  0E01               	movlw	1
  1629  001590  6E18               	movwf	printf@c,c
  1630  001592                     l1562:
  1631  001592  0E05               	movlw	5
  1632  001594  1818               	xorwf	printf@c,w,c
  1633  001596  B4D8               	btfsc	status,2,c
  1634  001598  D012               	goto	u630
  1635                           
  1636                           ;doprnt.c: 1306: if(val < dpowers[c])
  1637  00159A  5018               	movf	printf@c,w,c
  1638  00159C  0D02               	mullw	2
  1639  00159E  0E12               	movlw	low _dpowers
  1640  0015A0  24F3               	addwf	prodl,w,c
  1641  0015A2  6EF6               	movwf	tblptrl,c
  1642  0015A4  0E10               	movlw	high _dpowers
  1643  0015A6  20F4               	addwfc	prodh,w,c
  1644  0015A8  6EF7               	movwf	tblptrh,c
  1645  0015AA                     	if	0	;There are less than 3 active tblptr bytes
  1646  0015AA                     	endif
  1647  0015AA  0009               	tblrd		*+
  1648  0015AC  50F5               	movf	tablat,w,c
  1649  0015AE  5C16               	subwf	printf@val,w,c
  1650  0015B0  0009               	tblrd		*+
  1651  0015B2  50F5               	movf	tablat,w,c
  1652  0015B4  5817               	subwfb	printf@val+1,w,c
  1653  0015B6  A0D8               	btfss	status,0,c
  1654  0015B8  D002               	goto	u630
  1655                           
  1656                           ;doprnt.c: 1307: break;
  1657  0015BA  2A18               	incf	printf@c,f,c
  1658  0015BC  D7EA               	goto	l1562
  1659  0015BE                     u630:
  1660                           
  1661                           ;doprnt.c: 1422: {
  1662                           ;doprnt.c: 1438: if(flag & 0x03)
  1663  0015BE  C014  F011         	movff	printf@flag,??_printf
  1664  0015C2  0E03               	movlw	3
  1665  0015C4  1611               	andwf	??_printf,f,c
  1666  0015C6  B4D8               	btfsc	status,2,c
  1667  0015C8  D003               	goto	l313
  1668                           
  1669                           ;doprnt.c: 1439: (putch('-') );
  1670  0015CA  0E2D               	movlw	45
  1671  0015CC  ECE2  F00C         	call	_putch
  1672  0015D0                     l313:
  1673                           
  1674                           ;doprnt.c: 1469: }
  1675                           ;doprnt.c: 1472: prec = c;
  1676  0015D0  C018  F015         	movff	printf@c,printf@prec
  1677                           
  1678                           ;doprnt.c: 1474: while(prec--) {
  1679  0015D4  D024               	goto	l314
  1680  0015D6                     
  1681                           ;doprnt.c: 1478: {
  1682                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1683  0015D6  5015               	movf	printf@prec,w,c
  1684  0015D8  0D02               	mullw	2
  1685  0015DA  0E12               	movlw	low _dpowers
  1686  0015DC  24F3               	addwf	prodl,w,c
  1687  0015DE  6EF6               	movwf	tblptrl,c
  1688  0015E0  0E10               	movlw	high _dpowers
  1689  0015E2  20F4               	addwfc	prodh,w,c
  1690  0015E4  6EF7               	movwf	tblptrh,c
  1691  0015E6                     	if	0	;There are less than 3 active tblptr bytes
  1692  0015E6                     	endif
  1693  0015E6  0009               	tblrd		*+
  1694  0015E8  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1695  0015EC  000A               	tblrd		*-
  1696  0015EE  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1697  0015F2  C016  F001         	movff	printf@val,___lwdiv@dividend
  1698  0015F6  C017  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1699  0015FA  ECCE  F00B         	call	___lwdiv	;wreg free
  1700  0015FE  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1701  001602  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1702  001606  0E00               	movlw	0
  1703  001608  6E0B               	movwf	___lwmod@divisor+1,c
  1704  00160A  0E0A               	movlw	10
  1705  00160C  6E0A               	movwf	___lwmod@divisor,c
  1706  00160E  EC1D  F00C         	call	___lwmod	;wreg free
  1707  001612  5008               	movf	?___lwmod,w,c
  1708  001614  0F30               	addlw	48
  1709  001616  6E18               	movwf	printf@c,c
  1710                           
  1711                           ;doprnt.c: 1523: }
  1712                           ;doprnt.c: 1524: (putch(c) );
  1713  001618  5018               	movf	printf@c,w,c
  1714  00161A  ECE2  F00C         	call	_putch
  1715  00161E                     l314:
  1716  00161E  0615               	decf	printf@prec,f,c
  1717  001620  2815               	incf	printf@prec,w,c
  1718  001622  A4D8               	btfss	status,2,c
  1719  001624  D7D8               	goto	l315
  1720  001626                     u650:
  1721  001626  C00D  FFF6         	movff	printf@f,tblptrl
  1722  00162A  C00E  FFF7         	movff	printf@f+1,tblptrh
  1723  00162E  4A0D               	infsnz	printf@f,f,c
  1724  001630  2A0E               	incf	printf@f+1,f,c
  1725  001632                     	if	0	;tblptru may be non-zero
  1726  001632                     	endif
  1727  001632                     	if	0	;tblptru may be non-zero
  1728  001632                     	endif
  1729  001632  0008               	tblrd		*
  1730  001634  CFF5 F018          	movff	tablat,printf@c
  1731  001638  5018               	movf	printf@c,w,c
  1732  00163A  B4D8               	btfsc	status,2,c
  1733  00163C  0012               	return	
  1734  00163E  D776               	goto	l300
  1735  001640                     __end_of_printf:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           prodh	equ	0xFF4
  1742                           prodl	equ	0xFF3
  1743                           intcon	equ	0xFF2
  1744                           intcon3	equ	0xFF0
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postinc2	equ	0xFDE
  1748                           postdec2	equ	0xFDD
  1749                           fsr2h	equ	0xFDA
  1750                           fsr2l	equ	0xFD9
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _putch *****************
  1754 ;; Defined at:
  1755 ;;		line 24 in file "lcd.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  data            1    wreg     unsigned char 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  data            1    2[COMRAM] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;Total ram usage:        1 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    1
  1776 ;; This function calls:
  1777 ;;		_lcdNibble
  1778 ;; This function is called by:
  1779 ;;		_printf
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text3
  1784  0019C4                     __ptext3:
  1785                           	opt stack 0
  1786  0019C4                     _putch:
  1787                           	opt stack 28
  1788                           
  1789                           ;incstack = 0
  1790                           ;putch@data stored from wreg
  1791  0019C4  6E03               	movwf	putch@data,c
  1792                           
  1793                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  1794  0019C6  848C               	bsf	3980,2,c	;volatile
  1795                           
  1796                           ;lcd.c: 33: lcdNibble(data);
  1797  0019C8  5003               	movf	putch@data,w,c
  1798  0019CA  EC61  F00B         	call	_lcdNibble
  1799                           
  1800                           ;lcd.c: 34: _delay((unsigned long)((100)*(40000000/4000000.0)));
  1801  0019CE  0EC8               	movlw	200
  1802  0019D0                     u977:
  1803  0019D0  D000               	nop2	
  1804  0019D2  2EE8               	decfsz	wreg,f,c
  1805  0019D4  D7FD               	bra	u977
  1806  0019D6  0012               	return		;funcret
  1807  0019D8                     __end_of_putch:
  1808                           	opt stack 0
  1809                           tblptru	equ	0xFF8
  1810                           tblptrh	equ	0xFF7
  1811                           tblptrl	equ	0xFF6
  1812                           tablat	equ	0xFF5
  1813                           prodh	equ	0xFF4
  1814                           prodl	equ	0xFF3
  1815                           intcon	equ	0xFF2
  1816                           intcon3	equ	0xFF0
  1817                           postinc0	equ	0xFEE
  1818                           wreg	equ	0xFE8
  1819                           postinc2	equ	0xFDE
  1820                           postdec2	equ	0xFDD
  1821                           fsr2h	equ	0xFDA
  1822                           fsr2l	equ	0xFD9
  1823                           status	equ	0xFD8
  1824                           
  1825 ;; *************** function ___lwmod *****************
  1826 ;; Defined at:
  1827 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwmod.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  dividend        2    7[COMRAM] unsigned int 
  1830 ;;  divisor         2    9[COMRAM] unsigned int 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  counter         1   11[COMRAM] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2    7[COMRAM] unsigned int 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;Total ram usage:        5 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_printf
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text4
  1856  00183A                     __ptext4:
  1857                           	opt stack 0
  1858  00183A                     ___lwmod:
  1859                           	opt stack 29
  1860                           
  1861                           ;incstack = 0
  1862  00183A  500A               	movf	___lwmod@divisor,w,c
  1863  00183C  100B               	iorwf	___lwmod@divisor+1,w,c
  1864  00183E  B4D8               	btfsc	status,2,c
  1865  001840  D018               	goto	l737
  1866  001842  0E01               	movlw	1
  1867  001844  6E0C               	movwf	___lwmod@counter,c
  1868  001846  D004               	goto	l732
  1869  001848  90D8               	bcf	status,0,c
  1870  00184A  360A               	rlcf	___lwmod@divisor,f,c
  1871  00184C  360B               	rlcf	___lwmod@divisor+1,f,c
  1872  00184E  2A0C               	incf	___lwmod@counter,f,c
  1873  001850                     l732:
  1874  001850  AE0B               	btfss	___lwmod@divisor+1,7,c
  1875  001852  D7FA               	goto	l733
  1876  001854                     u560:
  1877  001854  500A               	movf	___lwmod@divisor,w,c
  1878  001856  5C08               	subwf	___lwmod@dividend,w,c
  1879  001858  500B               	movf	___lwmod@divisor+1,w,c
  1880  00185A  5809               	subwfb	___lwmod@dividend+1,w,c
  1881  00185C  A0D8               	btfss	status,0,c
  1882  00185E  D004               	goto	l736
  1883  001860  500A               	movf	___lwmod@divisor,w,c
  1884  001862  5E08               	subwf	___lwmod@dividend,f,c
  1885  001864  500B               	movf	___lwmod@divisor+1,w,c
  1886  001866  5A09               	subwfb	___lwmod@dividend+1,f,c
  1887  001868                     l736:
  1888  001868  90D8               	bcf	status,0,c
  1889  00186A  320B               	rrcf	___lwmod@divisor+1,f,c
  1890  00186C  320A               	rrcf	___lwmod@divisor,f,c
  1891  00186E  2E0C               	decfsz	___lwmod@counter,f,c
  1892  001870  D7F1               	goto	u560
  1893  001872                     l737:
  1894  001872  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1895  001876  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1896  00187A  0012               	return		;funcret
  1897  00187C                     __end_of___lwmod:
  1898                           	opt stack 0
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           prodh	equ	0xFF4
  1904                           prodl	equ	0xFF3
  1905                           intcon	equ	0xFF2
  1906                           intcon3	equ	0xFF0
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           postinc2	equ	0xFDE
  1910                           postdec2	equ	0xFDD
  1911                           fsr2h	equ	0xFDA
  1912                           fsr2l	equ	0xFD9
  1913                           status	equ	0xFD8
  1914                           
  1915 ;; *************** function ___lwdiv *****************
  1916 ;; Defined at:
  1917 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  dividend        2    0[COMRAM] unsigned int 
  1920 ;;  divisor         2    2[COMRAM] unsigned int 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  quotient        2    4[COMRAM] unsigned int 
  1923 ;;  counter         1    6[COMRAM] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  2    0[COMRAM] unsigned int 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;Total ram usage:        7 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_printf
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text5
  1947  00179C                     __ptext5:
  1948                           	opt stack 0
  1949  00179C                     ___lwdiv:
  1950                           	opt stack 29
  1951                           
  1952                           ;incstack = 0
  1953  00179C  0E00               	movlw	0
  1954  00179E  6E06               	movwf	___lwdiv@quotient+1,c
  1955  0017A0  0E00               	movlw	0
  1956  0017A2  6E05               	movwf	___lwdiv@quotient,c
  1957  0017A4  5003               	movf	___lwdiv@divisor,w,c
  1958  0017A6  1004               	iorwf	___lwdiv@divisor+1,w,c
  1959  0017A8  B4D8               	btfsc	status,2,c
  1960  0017AA  D01C               	goto	l727
  1961  0017AC  0E01               	movlw	1
  1962  0017AE  6E07               	movwf	___lwdiv@counter,c
  1963  0017B0  D004               	goto	l722
  1964  0017B2  90D8               	bcf	status,0,c
  1965  0017B4  3603               	rlcf	___lwdiv@divisor,f,c
  1966  0017B6  3604               	rlcf	___lwdiv@divisor+1,f,c
  1967  0017B8  2A07               	incf	___lwdiv@counter,f,c
  1968  0017BA                     l722:
  1969  0017BA  AE04               	btfss	___lwdiv@divisor+1,7,c
  1970  0017BC  D7FA               	goto	l723
  1971  0017BE                     u530:
  1972  0017BE  90D8               	bcf	status,0,c
  1973  0017C0  3605               	rlcf	___lwdiv@quotient,f,c
  1974  0017C2  3606               	rlcf	___lwdiv@quotient+1,f,c
  1975  0017C4  5003               	movf	___lwdiv@divisor,w,c
  1976  0017C6  5C01               	subwf	___lwdiv@dividend,w,c
  1977  0017C8  5004               	movf	___lwdiv@divisor+1,w,c
  1978  0017CA  5802               	subwfb	___lwdiv@dividend+1,w,c
  1979  0017CC  A0D8               	btfss	status,0,c
  1980  0017CE  D005               	goto	l726
  1981  0017D0  5003               	movf	___lwdiv@divisor,w,c
  1982  0017D2  5E01               	subwf	___lwdiv@dividend,f,c
  1983  0017D4  5004               	movf	___lwdiv@divisor+1,w,c
  1984  0017D6  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1985  0017D8  8005               	bsf	___lwdiv@quotient,0,c
  1986  0017DA                     l726:
  1987  0017DA  90D8               	bcf	status,0,c
  1988  0017DC  3204               	rrcf	___lwdiv@divisor+1,f,c
  1989  0017DE  3203               	rrcf	___lwdiv@divisor,f,c
  1990  0017E0  2E07               	decfsz	___lwdiv@counter,f,c
  1991  0017E2  D7ED               	goto	u530
  1992  0017E4                     l727:
  1993  0017E4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1994  0017E8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1995  0017EC  0012               	return		;funcret
  1996  0017EE                     __end_of___lwdiv:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           prodh	equ	0xFF4
  2003                           prodl	equ	0xFF3
  2004                           intcon	equ	0xFF2
  2005                           intcon3	equ	0xFF0
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           postinc2	equ	0xFDE
  2009                           postdec2	equ	0xFDD
  2010                           fsr2h	equ	0xFDA
  2011                           fsr2l	equ	0xFD9
  2012                           status	equ	0xFD8
  2013                           
  2014 ;; *************** function _motorStop_3 *****************
  2015 ;; Defined at:
  2016 ;;		line 554 in file "main.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;Total ram usage:        2 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text6
  2044  0018E4                     __ptext6:
  2045                           	opt stack 0
  2046  0018E4                     _motorStop_3:
  2047                           	opt stack 30
  2048                           
  2049                           ;main.c: 555: LATCbits.LATC5 = 0;
  2050                           
  2051                           ;incstack = 0
  2052  0018E4  9A8B               	bcf	3979,5,c	;volatile
  2053                           
  2054                           ;main.c: 556: TRISCbits.RC5 = 0;
  2055  0018E6  9A94               	bcf	3988,5,c	;volatile
  2056                           
  2057                           ;main.c: 558: _delay((unsigned long)((200)*(40000000/4000.0)));
  2058  0018E8  0E0B               	movlw	11
  2059  0018EA  6E02               	movwf	(??_motorStop_3+1)& (0+255),c
  2060  0018EC  0E26               	movlw	38
  2061  0018EE  6E01               	movwf	??_motorStop_3& (0+255),c
  2062  0018F0  0E5E               	movlw	94
  2063  0018F2                     u987:
  2064  0018F2  2EE8               	decfsz	wreg,f,c
  2065  0018F4  D7FE               	bra	u987
  2066  0018F6  2E01               	decfsz	??_motorStop_3& (0+255),f,c
  2067  0018F8  D7FC               	bra	u987
  2068  0018FA  2E02               	decfsz	(??_motorStop_3+1)& (0+255),f,c
  2069  0018FC  D7FA               	bra	u987
  2070  0018FE  0012               	return		;funcret
  2071  001900                     __end_of_motorStop_3:
  2072                           	opt stack 0
  2073                           tblptru	equ	0xFF8
  2074                           tblptrh	equ	0xFF7
  2075                           tblptrl	equ	0xFF6
  2076                           tablat	equ	0xFF5
  2077                           prodh	equ	0xFF4
  2078                           prodl	equ	0xFF3
  2079                           intcon	equ	0xFF2
  2080                           intcon3	equ	0xFF0
  2081                           postinc0	equ	0xFEE
  2082                           wreg	equ	0xFE8
  2083                           postinc2	equ	0xFDE
  2084                           postdec2	equ	0xFDD
  2085                           fsr2h	equ	0xFDA
  2086                           fsr2l	equ	0xFD9
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _motorStop_2 *****************
  2090 ;; Defined at:
  2091 ;;		line 536 in file "main.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;Total ram usage:        2 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text7
  2119  001900                     __ptext7:
  2120                           	opt stack 0
  2121  001900                     _motorStop_2:
  2122                           	opt stack 30
  2123                           
  2124                           ;main.c: 537: LATCbits.LATC2 = 0;
  2125                           
  2126                           ;incstack = 0
  2127  001900  948B               	bcf	3979,2,c	;volatile
  2128                           
  2129                           ;main.c: 538: TRISCbits.RC2 = 0;
  2130  001902  9494               	bcf	3988,2,c	;volatile
  2131                           
  2132                           ;main.c: 540: _delay((unsigned long)((200)*(40000000/4000.0)));
  2133  001904  0E0B               	movlw	11
  2134  001906  6E02               	movwf	(??_motorStop_2+1)& (0+255),c
  2135  001908  0E26               	movlw	38
  2136  00190A  6E01               	movwf	??_motorStop_2& (0+255),c
  2137  00190C  0E5E               	movlw	94
  2138  00190E                     u997:
  2139  00190E  2EE8               	decfsz	wreg,f,c
  2140  001910  D7FE               	bra	u997
  2141  001912  2E01               	decfsz	??_motorStop_2& (0+255),f,c
  2142  001914  D7FC               	bra	u997
  2143  001916  2E02               	decfsz	(??_motorStop_2+1)& (0+255),f,c
  2144  001918  D7FA               	bra	u997
  2145  00191A  0012               	return		;funcret
  2146  00191C                     __end_of_motorStop_2:
  2147                           	opt stack 0
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           prodh	equ	0xFF4
  2153                           prodl	equ	0xFF3
  2154                           intcon	equ	0xFF2
  2155                           intcon3	equ	0xFF0
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           postinc2	equ	0xFDE
  2159                           postdec2	equ	0xFDD
  2160                           fsr2h	equ	0xFDA
  2161                           fsr2l	equ	0xFD9
  2162                           status	equ	0xFD8
  2163                           
  2164 ;; *************** function _motorStop_1 *****************
  2165 ;; Defined at:
  2166 ;;		line 519 in file "main.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:        2 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text8
  2194  00191C                     __ptext8:
  2195                           	opt stack 0
  2196  00191C                     _motorStop_1:
  2197                           	opt stack 30
  2198                           
  2199                           ;main.c: 520: LATCbits.LATC1 = 0;
  2200                           
  2201                           ;incstack = 0
  2202  00191C  928B               	bcf	3979,1,c	;volatile
  2203                           
  2204                           ;main.c: 521: TRISCbits.RC1 = 0;
  2205  00191E  9294               	bcf	3988,1,c	;volatile
  2206                           
  2207                           ;main.c: 523: _delay((unsigned long)((200)*(40000000/4000.0)));
  2208  001920  0E0B               	movlw	11
  2209  001922  6E02               	movwf	(??_motorStop_1+1)& (0+255),c
  2210  001924  0E26               	movlw	38
  2211  001926  6E01               	movwf	??_motorStop_1& (0+255),c
  2212  001928  0E5E               	movlw	94
  2213  00192A                     u1007:
  2214  00192A  2EE8               	decfsz	wreg,f,c
  2215  00192C  D7FE               	bra	u1007
  2216  00192E  2E01               	decfsz	??_motorStop_1& (0+255),f,c
  2217  001930  D7FC               	bra	u1007
  2218  001932  2E02               	decfsz	(??_motorStop_1+1)& (0+255),f,c
  2219  001934  D7FA               	bra	u1007
  2220  001936  0012               	return		;funcret
  2221  001938                     __end_of_motorStop_1:
  2222                           	opt stack 0
  2223                           tblptru	equ	0xFF8
  2224                           tblptrh	equ	0xFF7
  2225                           tblptrl	equ	0xFF6
  2226                           tablat	equ	0xFF5
  2227                           prodh	equ	0xFF4
  2228                           prodl	equ	0xFF3
  2229                           intcon	equ	0xFF2
  2230                           intcon3	equ	0xFF0
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           postinc2	equ	0xFDE
  2234                           postdec2	equ	0xFDD
  2235                           fsr2h	equ	0xFDA
  2236                           fsr2l	equ	0xFD9
  2237                           status	equ	0xFD8
  2238                           
  2239 ;; *************** function _motorStop_0 *****************
  2240 ;; Defined at:
  2241 ;;		line 502 in file "main.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;Total ram usage:        2 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text9
  2269  001938                     __ptext9:
  2270                           	opt stack 0
  2271  001938                     _motorStop_0:
  2272                           	opt stack 30
  2273                           
  2274                           ;main.c: 503: LATCbits.LATC0 = 0;
  2275                           
  2276                           ;incstack = 0
  2277  001938  908B               	bcf	3979,0,c	;volatile
  2278                           
  2279                           ;main.c: 504: TRISCbits.RC0 = 0;
  2280  00193A  9094               	bcf	3988,0,c	;volatile
  2281                           
  2282                           ;main.c: 506: _delay((unsigned long)((200)*(40000000/4000.0)));
  2283  00193C  0E0B               	movlw	11
  2284  00193E  6E02               	movwf	(??_motorStop_0+1)& (0+255),c
  2285  001940  0E26               	movlw	38
  2286  001942  6E01               	movwf	??_motorStop_0& (0+255),c
  2287  001944  0E5E               	movlw	94
  2288  001946                     u1017:
  2289  001946  2EE8               	decfsz	wreg,f,c
  2290  001948  D7FE               	bra	u1017
  2291  00194A  2E01               	decfsz	??_motorStop_0& (0+255),f,c
  2292  00194C  D7FC               	bra	u1017
  2293  00194E  2E02               	decfsz	(??_motorStop_0+1)& (0+255),f,c
  2294  001950  D7FA               	bra	u1017
  2295  001952  0012               	return		;funcret
  2296  001954                     __end_of_motorStop_0:
  2297                           	opt stack 0
  2298                           tblptru	equ	0xFF8
  2299                           tblptrh	equ	0xFF7
  2300                           tblptrl	equ	0xFF6
  2301                           tablat	equ	0xFF5
  2302                           prodh	equ	0xFF4
  2303                           prodl	equ	0xFF3
  2304                           intcon	equ	0xFF2
  2305                           intcon3	equ	0xFF0
  2306                           postinc0	equ	0xFEE
  2307                           wreg	equ	0xFE8
  2308                           postinc2	equ	0xFDE
  2309                           postdec2	equ	0xFDD
  2310                           fsr2h	equ	0xFDA
  2311                           fsr2l	equ	0xFD9
  2312                           status	equ	0xFD8
  2313                           
  2314 ;; *************** function _motorStart_3 *****************
  2315 ;; Defined at:
  2316 ;;		line 545 in file "main.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;Total ram usage:        2 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_main
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text10
  2344  001954                     __ptext10:
  2345                           	opt stack 0
  2346  001954                     _motorStart_3:
  2347                           	opt stack 30
  2348                           
  2349                           ;main.c: 547: LATCbits.LATC5 = 1;
  2350                           
  2351                           ;incstack = 0
  2352  001954  8A8B               	bsf	3979,5,c	;volatile
  2353                           
  2354                           ;main.c: 548: TRISCbits.RC5 = 0;
  2355  001956  9A94               	bcf	3988,5,c	;volatile
  2356                           
  2357                           ;main.c: 550: _delay((unsigned long)((200)*(40000000/4000.0)));
  2358  001958  0E0B               	movlw	11
  2359  00195A  6E02               	movwf	(??_motorStart_3+1)& (0+255),c
  2360  00195C  0E26               	movlw	38
  2361  00195E  6E01               	movwf	??_motorStart_3& (0+255),c
  2362  001960  0E5E               	movlw	94
  2363  001962                     u1027:
  2364  001962  2EE8               	decfsz	wreg,f,c
  2365  001964  D7FE               	bra	u1027
  2366  001966  2E01               	decfsz	??_motorStart_3& (0+255),f,c
  2367  001968  D7FC               	bra	u1027
  2368  00196A  2E02               	decfsz	(??_motorStart_3+1)& (0+255),f,c
  2369  00196C  D7FA               	bra	u1027
  2370  00196E  0012               	return		;funcret
  2371  001970                     __end_of_motorStart_3:
  2372                           	opt stack 0
  2373                           tblptru	equ	0xFF8
  2374                           tblptrh	equ	0xFF7
  2375                           tblptrl	equ	0xFF6
  2376                           tablat	equ	0xFF5
  2377                           prodh	equ	0xFF4
  2378                           prodl	equ	0xFF3
  2379                           intcon	equ	0xFF2
  2380                           intcon3	equ	0xFF0
  2381                           postinc0	equ	0xFEE
  2382                           wreg	equ	0xFE8
  2383                           postinc2	equ	0xFDE
  2384                           postdec2	equ	0xFDD
  2385                           fsr2h	equ	0xFDA
  2386                           fsr2l	equ	0xFD9
  2387                           status	equ	0xFD8
  2388                           
  2389 ;; *************** function _motorStart_2 *****************
  2390 ;; Defined at:
  2391 ;;		line 527 in file "main.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;Total ram usage:        2 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text11
  2419  001970                     __ptext11:
  2420                           	opt stack 0
  2421  001970                     _motorStart_2:
  2422                           	opt stack 30
  2423                           
  2424                           ;main.c: 529: LATCbits.LATC2 = 1;
  2425                           
  2426                           ;incstack = 0
  2427  001970  848B               	bsf	3979,2,c	;volatile
  2428                           
  2429                           ;main.c: 530: TRISCbits.RC2 = 0;
  2430  001972  9494               	bcf	3988,2,c	;volatile
  2431                           
  2432                           ;main.c: 532: _delay((unsigned long)((200)*(40000000/4000.0)));
  2433  001974  0E0B               	movlw	11
  2434  001976  6E02               	movwf	(??_motorStart_2+1)& (0+255),c
  2435  001978  0E26               	movlw	38
  2436  00197A  6E01               	movwf	??_motorStart_2& (0+255),c
  2437  00197C  0E5E               	movlw	94
  2438  00197E                     u1037:
  2439  00197E  2EE8               	decfsz	wreg,f,c
  2440  001980  D7FE               	bra	u1037
  2441  001982  2E01               	decfsz	??_motorStart_2& (0+255),f,c
  2442  001984  D7FC               	bra	u1037
  2443  001986  2E02               	decfsz	(??_motorStart_2+1)& (0+255),f,c
  2444  001988  D7FA               	bra	u1037
  2445  00198A  0012               	return		;funcret
  2446  00198C                     __end_of_motorStart_2:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           prodh	equ	0xFF4
  2453                           prodl	equ	0xFF3
  2454                           intcon	equ	0xFF2
  2455                           intcon3	equ	0xFF0
  2456                           postinc0	equ	0xFEE
  2457                           wreg	equ	0xFE8
  2458                           postinc2	equ	0xFDE
  2459                           postdec2	equ	0xFDD
  2460                           fsr2h	equ	0xFDA
  2461                           fsr2l	equ	0xFD9
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _motorStart_1 *****************
  2465 ;; Defined at:
  2466 ;;		line 510 in file "main.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;Total ram usage:        2 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_main
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text12
  2494  00198C                     __ptext12:
  2495                           	opt stack 0
  2496  00198C                     _motorStart_1:
  2497                           	opt stack 30
  2498                           
  2499                           ;main.c: 512: LATCbits.LATC1 = 1;
  2500                           
  2501                           ;incstack = 0
  2502  00198C  828B               	bsf	3979,1,c	;volatile
  2503                           
  2504                           ;main.c: 513: TRISCbits.RC1 = 0;
  2505  00198E  9294               	bcf	3988,1,c	;volatile
  2506                           
  2507                           ;main.c: 515: _delay((unsigned long)((200)*(40000000/4000.0)));
  2508  001990  0E0B               	movlw	11
  2509  001992  6E02               	movwf	(??_motorStart_1+1)& (0+255),c
  2510  001994  0E26               	movlw	38
  2511  001996  6E01               	movwf	??_motorStart_1& (0+255),c
  2512  001998  0E5E               	movlw	94
  2513  00199A                     u1047:
  2514  00199A  2EE8               	decfsz	wreg,f,c
  2515  00199C  D7FE               	bra	u1047
  2516  00199E  2E01               	decfsz	??_motorStart_1& (0+255),f,c
  2517  0019A0  D7FC               	bra	u1047
  2518  0019A2  2E02               	decfsz	(??_motorStart_1+1)& (0+255),f,c
  2519  0019A4  D7FA               	bra	u1047
  2520  0019A6  0012               	return		;funcret
  2521  0019A8                     __end_of_motorStart_1:
  2522                           	opt stack 0
  2523                           tblptru	equ	0xFF8
  2524                           tblptrh	equ	0xFF7
  2525                           tblptrl	equ	0xFF6
  2526                           tablat	equ	0xFF5
  2527                           prodh	equ	0xFF4
  2528                           prodl	equ	0xFF3
  2529                           intcon	equ	0xFF2
  2530                           intcon3	equ	0xFF0
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           postinc2	equ	0xFDE
  2534                           postdec2	equ	0xFDD
  2535                           fsr2h	equ	0xFDA
  2536                           fsr2l	equ	0xFD9
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _motorStart_0 *****************
  2540 ;; Defined at:
  2541 ;;		line 493 in file "main.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;Total ram usage:        2 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text13
  2569  0019A8                     __ptext13:
  2570                           	opt stack 0
  2571  0019A8                     _motorStart_0:
  2572                           	opt stack 30
  2573                           
  2574                           ;main.c: 495: LATCbits.LATC0 = 1;
  2575                           
  2576                           ;incstack = 0
  2577  0019A8  808B               	bsf	3979,0,c	;volatile
  2578                           
  2579                           ;main.c: 496: TRISCbits.RC0 = 0;
  2580  0019AA  9094               	bcf	3988,0,c	;volatile
  2581                           
  2582                           ;main.c: 498: _delay((unsigned long)((200)*(40000000/4000.0)));
  2583  0019AC  0E0B               	movlw	11
  2584  0019AE  6E02               	movwf	(??_motorStart_0+1)& (0+255),c
  2585  0019B0  0E26               	movlw	38
  2586  0019B2  6E01               	movwf	??_motorStart_0& (0+255),c
  2587  0019B4  0E5E               	movlw	94
  2588  0019B6                     u1057:
  2589  0019B6  2EE8               	decfsz	wreg,f,c
  2590  0019B8  D7FE               	bra	u1057
  2591  0019BA  2E01               	decfsz	??_motorStart_0& (0+255),f,c
  2592  0019BC  D7FC               	bra	u1057
  2593  0019BE  2E02               	decfsz	(??_motorStart_0+1)& (0+255),f,c
  2594  0019C0  D7FA               	bra	u1057
  2595  0019C2  0012               	return		;funcret
  2596  0019C4                     __end_of_motorStart_0:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           prodh	equ	0xFF4
  2603                           prodl	equ	0xFF3
  2604                           intcon	equ	0xFF2
  2605                           intcon3	equ	0xFF0
  2606                           postinc0	equ	0xFEE
  2607                           wreg	equ	0xFE8
  2608                           postinc2	equ	0xFDE
  2609                           postdec2	equ	0xFDD
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _initLCD *****************
  2615 ;; Defined at:
  2616 ;;		line 60 in file "lcd.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;Total ram usage:        1 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    2
  2637 ;; This function calls:
  2638 ;;		_lcdInst
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text14
  2645  0017EE                     __ptext14:
  2646                           	opt stack 0
  2647  0017EE                     _initLCD:
  2648                           	opt stack 28
  2649                           
  2650                           ;lcd.c: 68: _delay((unsigned long)((15)*(40000000/4000.0)));
  2651                           
  2652                           ;incstack = 0
  2653  0017EE  0EC3               	movlw	195
  2654  0017F0  6E04               	movwf	??_initLCD& (0+255),c
  2655  0017F2  0ECD               	movlw	205
  2656  0017F4                     u1067:
  2657  0017F4  2EE8               	decfsz	wreg,f,c
  2658  0017F6  D7FE               	bra	u1067
  2659  0017F8  2E04               	decfsz	??_initLCD& (0+255),f,c
  2660  0017FA  D7FC               	bra	u1067
  2661  0017FC  F000               	nop	
  2662                           
  2663                           ;lcd.c: 69: lcdInst(0b00110011);
  2664  0017FE  0E33               	movlw	51
  2665  001800  ECEC  F00C         	call	_lcdInst
  2666                           
  2667                           ;lcd.c: 70: lcdInst(0b00110010);
  2668  001804  0E32               	movlw	50
  2669  001806  ECEC  F00C         	call	_lcdInst
  2670                           
  2671                           ;lcd.c: 71: lcdInst(0b00101000);
  2672  00180A  0E28               	movlw	40
  2673  00180C  ECEC  F00C         	call	_lcdInst
  2674                           
  2675                           ;lcd.c: 72: lcdInst(0b00001111);
  2676  001810  0E0F               	movlw	15
  2677  001812  ECEC  F00C         	call	_lcdInst
  2678                           
  2679                           ;lcd.c: 73: lcdInst(0b00000110);
  2680  001816  0E06               	movlw	6
  2681  001818  ECEC  F00C         	call	_lcdInst
  2682                           
  2683                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
  2684  00181C  0E01               	movlw	1
  2685  00181E  ECEC  F00C         	call	_lcdInst
  2686  001822  0EC3               	movlw	195
  2687  001824  6E04               	movwf	??_initLCD& (0+255),c
  2688  001826  0ECD               	movlw	205
  2689  001828                     u1077:
  2690  001828  2EE8               	decfsz	wreg,f,c
  2691  00182A  D7FE               	bra	u1077
  2692  00182C  2E04               	decfsz	??_initLCD& (0+255),f,c
  2693  00182E  D7FC               	bra	u1077
  2694  001830  F000               	nop	
  2695                           
  2696                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  2697  001832  0E0F               	movlw	15
  2698  001834  ECEC  F00C         	call	_lcdInst
  2699  001838  0012               	return		;funcret
  2700  00183A                     __end_of_initLCD:
  2701                           	opt stack 0
  2702                           tblptru	equ	0xFF8
  2703                           tblptrh	equ	0xFF7
  2704                           tblptrl	equ	0xFF6
  2705                           tablat	equ	0xFF5
  2706                           prodh	equ	0xFF4
  2707                           prodl	equ	0xFF3
  2708                           intcon	equ	0xFF2
  2709                           intcon3	equ	0xFF0
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           postinc2	equ	0xFDE
  2713                           postdec2	equ	0xFDD
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function _lcdInst *****************
  2719 ;; Defined at:
  2720 ;;		line 11 in file "lcd.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  data            1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  data            1    2[COMRAM] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;Total ram usage:        1 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    1
  2741 ;; This function calls:
  2742 ;;		_lcdNibble
  2743 ;; This function is called by:
  2744 ;;		_initLCD
  2745 ;;		_lcd_set_cursor
  2746 ;;		_lcd_shift_cursor
  2747 ;;		_lcd_shift_display
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text15
  2752  0019D8                     __ptext15:
  2753                           	opt stack 0
  2754  0019D8                     _lcdInst:
  2755                           	opt stack 28
  2756                           
  2757                           ;incstack = 0
  2758                           ;lcdInst@data stored from wreg
  2759  0019D8  6E03               	movwf	lcdInst@data,c
  2760                           
  2761                           ;lcd.c: 19: LATDbits.LATD2 = 0;
  2762  0019DA  948C               	bcf	3980,2,c	;volatile
  2763                           
  2764                           ;lcd.c: 20: lcdNibble(data);
  2765  0019DC  5003               	movf	lcdInst@data,w,c
  2766  0019DE  EC61  F00B         	call	_lcdNibble
  2767                           
  2768                           ;lcd.c: 21: _delay((unsigned long)((100)*(40000000/4000000.0)));
  2769  0019E2  0EC8               	movlw	200
  2770  0019E4                     u1087:
  2771  0019E4  D000               	nop2	
  2772  0019E6  2EE8               	decfsz	wreg,f,c
  2773  0019E8  D7FD               	bra	u1087
  2774  0019EA  0012               	return		;funcret
  2775  0019EC                     __end_of_lcdInst:
  2776                           	opt stack 0
  2777                           tblptru	equ	0xFF8
  2778                           tblptrh	equ	0xFF7
  2779                           tblptrl	equ	0xFF6
  2780                           tablat	equ	0xFF5
  2781                           prodh	equ	0xFF4
  2782                           prodl	equ	0xFF3
  2783                           intcon	equ	0xFF2
  2784                           intcon3	equ	0xFF0
  2785                           postinc0	equ	0xFEE
  2786                           wreg	equ	0xFE8
  2787                           postinc2	equ	0xFDE
  2788                           postdec2	equ	0xFDD
  2789                           fsr2h	equ	0xFDA
  2790                           fsr2l	equ	0xFD9
  2791                           status	equ	0xFD8
  2792                           
  2793 ;; *************** function _lcdNibble *****************
  2794 ;; Defined at:
  2795 ;;		line 37 in file "lcd.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  data            1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  data            1    1[COMRAM] unsigned char 
  2800 ;;  temp            1    0[COMRAM] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_lcdInst
  2820 ;;		_putch
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text16
  2825  0016C2                     __ptext16:
  2826                           	opt stack 0
  2827  0016C2                     _lcdNibble:
  2828                           	opt stack 28
  2829                           
  2830                           ;incstack = 0
  2831                           ;lcdNibble@data stored from wreg
  2832  0016C2  6E02               	movwf	lcdNibble@data,c
  2833                           
  2834                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
  2835  0016C4  5002               	movf	lcdNibble@data,w,c
  2836  0016C6  0BF0               	andlw	240
  2837  0016C8  6E01               	movwf	lcdNibble@temp,c
  2838                           
  2839                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
  2840  0016CA  508C               	movf	3980,w,c	;volatile
  2841  0016CC  0B0F               	andlw	15
  2842  0016CE  6E8C               	movwf	3980,c	;volatile
  2843                           
  2844                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
  2845  0016D0  5001               	movf	lcdNibble@temp,w,c
  2846  0016D2  108C               	iorwf	3980,w,c	;volatile
  2847  0016D4  6E8C               	movwf	3980,c	;volatile
  2848                           
  2849                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  2850  0016D6  0E00               	movlw	0
  2851  0016D8  BEF2               	btfsc	intcon,7,c	;volatile
  2852  0016DA  0E01               	movlw	1
  2853  0016DC  6E2C               	movwf	lcd@LCDinterruptState,c
  2854  0016DE  9EF2               	bcf	intcon,7,c	;volatile
  2855  0016E0  868C               	bsf	3980,3,c	;volatile
  2856  0016E2  0E53               	movlw	83
  2857  0016E4                     u1097:
  2858  0016E4  2EE8               	decfsz	wreg,f,c
  2859  0016E6  D7FE               	bra	u1097
  2860  0016E8  F000               	nop	
  2861  0016EA  968C               	bcf	3980,3,c	;volatile
  2862  0016EC  0EC8               	movlw	200
  2863  0016EE                     u1107:
  2864  0016EE  D000               	nop2	
  2865  0016F0  2EE8               	decfsz	wreg,f,c
  2866  0016F2  D7FD               	bra	u1107
  2867  0016F4  B02C               	btfsc	lcd@LCDinterruptState,0,c
  2868  0016F6  D002               	bra	u15
  2869  0016F8  9EF2               	bcf	intcon,7,c	;volatile
  2870  0016FA  D001               	bra	u16
  2871  0016FC                     u15:
  2872  0016FC  8EF2               	bsf	intcon,7,c	;volatile
  2873  0016FE                     u16:
  2874                           
  2875                           ;lcd.c: 52: data = (unsigned char) (data << 4);
  2876  0016FE  3802               	swapf	lcdNibble@data,w,c
  2877  001700  0BF0               	andlw	240
  2878  001702  6E02               	movwf	lcdNibble@data,c
  2879                           
  2880                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
  2881  001704  5002               	movf	lcdNibble@data,w,c
  2882  001706  0BF0               	andlw	240
  2883  001708  6E01               	movwf	lcdNibble@temp,c
  2884                           
  2885                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
  2886  00170A  508C               	movf	3980,w,c	;volatile
  2887  00170C  0B0F               	andlw	15
  2888  00170E  6E8C               	movwf	3980,c	;volatile
  2889                           
  2890                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
  2891  001710  5001               	movf	lcdNibble@temp,w,c
  2892  001712  108C               	iorwf	3980,w,c	;volatile
  2893  001714  6E8C               	movwf	3980,c	;volatile
  2894                           
  2895                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  2896  001716  0E00               	movlw	0
  2897  001718  BEF2               	btfsc	intcon,7,c	;volatile
  2898  00171A  0E01               	movlw	1
  2899  00171C  6E2C               	movwf	lcd@LCDinterruptState,c
  2900  00171E  9EF2               	bcf	intcon,7,c	;volatile
  2901  001720  868C               	bsf	3980,3,c	;volatile
  2902  001722  0E53               	movlw	83
  2903  001724                     u1117:
  2904  001724  2EE8               	decfsz	wreg,f,c
  2905  001726  D7FE               	bra	u1117
  2906  001728  F000               	nop	
  2907  00172A  968C               	bcf	3980,3,c	;volatile
  2908  00172C  0EC8               	movlw	200
  2909  00172E                     u1127:
  2910  00172E  D000               	nop2	
  2911  001730  2EE8               	decfsz	wreg,f,c
  2912  001732  D7FD               	bra	u1127
  2913  001734  B02C               	btfsc	lcd@LCDinterruptState,0,c
  2914  001736  D002               	bra	u25
  2915  001738  9EF2               	bcf	intcon,7,c	;volatile
  2916  00173A  D001               	bra	u26
  2917  00173C                     u25:
  2918  00173C  8EF2               	bsf	intcon,7,c	;volatile
  2919  00173E                     u26:
  2920  00173E  0012               	return		;funcret
  2921  001740                     __end_of_lcdNibble:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           prodh	equ	0xFF4
  2928                           prodl	equ	0xFF3
  2929                           intcon	equ	0xFF2
  2930                           intcon3	equ	0xFF0
  2931                           postinc0	equ	0xFEE
  2932                           wreg	equ	0xFE8
  2933                           postinc2	equ	0xFDE
  2934                           postdec2	equ	0xFDD
  2935                           fsr2h	equ	0xFDA
  2936                           fsr2l	equ	0xFD9
  2937                           status	equ	0xFD8
  2938                           
  2939 ;; *************** function _I2C_Master_Write *****************
  2940 ;; Defined at:
  2941 ;;		line 108 in file "I2C.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  byteToWrite     2    1[COMRAM] unsigned int 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;Total ram usage:        2 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    1
  2962 ;; This function calls:
  2963 ;;		_I2C_Master_Wait
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text17
  2970  0019FE                     __ptext17:
  2971                           	opt stack 0
  2972  0019FE                     _I2C_Master_Write:
  2973                           	opt stack 29
  2974                           
  2975                           ;I2C.c: 116: I2C_Master_Wait();
  2976                           
  2977                           ;incstack = 0
  2978  0019FE  ECF6  F00C         	call	_I2C_Master_Wait	;wreg free
  2979                           
  2980                           ;I2C.c: 117: SSPBUF = byteToWrite;
  2981  001A02  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  2982  001A06  0012               	return		;funcret
  2983  001A08                     __end_of_I2C_Master_Write:
  2984                           	opt stack 0
  2985                           tblptru	equ	0xFF8
  2986                           tblptrh	equ	0xFF7
  2987                           tblptrl	equ	0xFF6
  2988                           tablat	equ	0xFF5
  2989                           prodh	equ	0xFF4
  2990                           prodl	equ	0xFF3
  2991                           intcon	equ	0xFF2
  2992                           intcon3	equ	0xFF0
  2993                           postinc0	equ	0xFEE
  2994                           wreg	equ	0xFE8
  2995                           postinc2	equ	0xFDE
  2996                           postdec2	equ	0xFDD
  2997                           fsr2h	equ	0xFDA
  2998                           fsr2l	equ	0xFD9
  2999                           status	equ	0xFD8
  3000                           
  3001 ;; *************** function _I2C_Master_Stop *****************
  3002 ;; Defined at:
  3003 ;;		line 95 in file "I2C.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    1
  3024 ;; This function calls:
  3025 ;;		_I2C_Master_Wait
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text18
  3032  001A08                     __ptext18:
  3033                           	opt stack 0
  3034  001A08                     _I2C_Master_Stop:
  3035                           	opt stack 29
  3036                           
  3037                           ;I2C.c: 104: I2C_Master_Wait();
  3038                           
  3039                           ;incstack = 0
  3040  001A08  ECF6  F00C         	call	_I2C_Master_Wait	;wreg free
  3041                           
  3042                           ;I2C.c: 105: SSPCON2bits.PEN = 1;
  3043  001A0C  84C5               	bsf	4037,2,c	;volatile
  3044  001A0E  0012               	return		;funcret
  3045  001A10                     __end_of_I2C_Master_Stop:
  3046                           	opt stack 0
  3047                           tblptru	equ	0xFF8
  3048                           tblptrh	equ	0xFF7
  3049                           tblptrl	equ	0xFF6
  3050                           tablat	equ	0xFF5
  3051                           prodh	equ	0xFF4
  3052                           prodl	equ	0xFF3
  3053                           intcon	equ	0xFF2
  3054                           intcon3	equ	0xFF0
  3055                           postinc0	equ	0xFEE
  3056                           wreg	equ	0xFE8
  3057                           postinc2	equ	0xFDE
  3058                           postdec2	equ	0xFDD
  3059                           fsr2h	equ	0xFDA
  3060                           fsr2l	equ	0xFD9
  3061                           status	equ	0xFD8
  3062                           
  3063 ;; *************** function _I2C_Master_Start *****************
  3064 ;; Defined at:
  3065 ;;		line 69 in file "I2C.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;Total ram usage:        0 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    1
  3086 ;; This function calls:
  3087 ;;		_I2C_Master_Wait
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text19
  3094  001A10                     __ptext19:
  3095                           	opt stack 0
  3096  001A10                     _I2C_Master_Start:
  3097                           	opt stack 29
  3098                           
  3099                           ;I2C.c: 78: I2C_Master_Wait();
  3100                           
  3101                           ;incstack = 0
  3102  001A10  ECF6  F00C         	call	_I2C_Master_Wait	;wreg free
  3103                           
  3104                           ;I2C.c: 79: SSPCON2bits.SEN = 1;
  3105  001A14  80C5               	bsf	4037,0,c	;volatile
  3106  001A16  0012               	return		;funcret
  3107  001A18                     __end_of_I2C_Master_Start:
  3108                           	opt stack 0
  3109                           tblptru	equ	0xFF8
  3110                           tblptrh	equ	0xFF7
  3111                           tblptrl	equ	0xFF6
  3112                           tablat	equ	0xFF5
  3113                           prodh	equ	0xFF4
  3114                           prodl	equ	0xFF3
  3115                           intcon	equ	0xFF2
  3116                           intcon3	equ	0xFF0
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postinc2	equ	0xFDE
  3120                           postdec2	equ	0xFDD
  3121                           fsr2h	equ	0xFDA
  3122                           fsr2l	equ	0xFD9
  3123                           status	equ	0xFD8
  3124                           
  3125 ;; *************** function _I2C_Master_Wait *****************
  3126 ;; Defined at:
  3127 ;;		line 51 in file "I2C.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;Total ram usage:        1 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_I2C_Master_Start
  3151 ;;		_I2C_Master_Stop
  3152 ;;		_I2C_Master_Write
  3153 ;;		_I2C_Master_RepeatedStart
  3154 ;;		_I2C_Master_Read
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text20
  3159  0019EC                     __ptext20:
  3160                           	opt stack 0
  3161  0019EC                     _I2C_Master_Wait:
  3162                           	opt stack 29
  3163                           
  3164                           ;I2C.c: 66: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3165                           
  3166                           ;incstack = 0
  3167  0019EC  B4C7               	btfsc	4039,2,c	;volatile
  3168  0019EE  D7FE               	goto	_I2C_Master_Wait
  3169  0019F0  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  3170  0019F4  0E1F               	movlw	31
  3171  0019F6  1601               	andwf	??_I2C_Master_Wait,f,c
  3172  0019F8  B4D8               	btfsc	status,2,c
  3173  0019FA  0012               	return	
  3174  0019FC  D7F7               	goto	_I2C_Master_Wait
  3175  0019FE                     __end_of_I2C_Master_Wait:
  3176                           	opt stack 0
  3177                           tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           prodh	equ	0xFF4
  3182                           prodl	equ	0xFF3
  3183                           intcon	equ	0xFF2
  3184                           intcon3	equ	0xFF0
  3185                           postinc0	equ	0xFEE
  3186                           wreg	equ	0xFE8
  3187                           postinc2	equ	0xFDE
  3188                           postdec2	equ	0xFDD
  3189                           fsr2h	equ	0xFDA
  3190                           fsr2l	equ	0xFD9
  3191                           status	equ	0xFD8
  3192                           
  3193 ;; *************** function _I2C_Master_Init *****************
  3194 ;; Defined at:
  3195 ;;		line 14 in file "I2C.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  clockFreq       4   13[COMRAM] const unsigned long 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;		None
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;Total ram usage:        8 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    1
  3216 ;; This function calls:
  3217 ;;		___lldiv
  3218 ;; This function is called by:
  3219 ;;		_main
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text21
  3224  001740                     __ptext21:
  3225                           	opt stack 0
  3226  001740                     _I2C_Master_Init:
  3227                           	opt stack 29
  3228                           
  3229                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
  3230                           
  3231                           ;incstack = 0
  3232  001740  9AC6               	bcf	4038,5,c	;volatile
  3233                           
  3234                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
  3235  001742  8694               	bsf	3988,3,c	;volatile
  3236                           
  3237                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
  3238  001744  8894               	bsf	3988,4,c	;volatile
  3239                           
  3240                           ;I2C.c: 41: SSPSTAT = 0b10000000;
  3241  001746  0E80               	movlw	128
  3242  001748  6EC7               	movwf	4039,c	;volatile
  3243                           
  3244                           ;I2C.c: 42: SSPCON1 = 0b00101000;
  3245  00174A  0E28               	movlw	40
  3246  00174C  6EC6               	movwf	4038,c	;volatile
  3247                           
  3248                           ;I2C.c: 43: SSPCON2 = 0b00000000;
  3249  00174E  0E00               	movlw	0
  3250  001750  6EC5               	movwf	4037,c	;volatile
  3251                           
  3252                           ;I2C.c: 48: SSPADD = (40000000 / (4 * clockFreq)) - 1;
  3253  001752  0E00               	movlw	0
  3254  001754  6E01               	movwf	___lldiv@dividend,c
  3255  001756  0E5A               	movlw	90
  3256  001758  6E02               	movwf	___lldiv@dividend+1,c
  3257  00175A  0E62               	movlw	98
  3258  00175C  6E03               	movwf	___lldiv@dividend+2,c
  3259  00175E  0E02               	movlw	2
  3260  001760  6E04               	movwf	___lldiv@dividend+3,c
  3261  001762  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  3262  001766  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  3263  00176A  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  3264  00176E  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  3265  001772  0E02               	movlw	2
  3266  001774                     u585:
  3267  001774  90D8               	bcf	status,0,c
  3268  001776  3612               	rlcf	??_I2C_Master_Init,f,c
  3269  001778  3613               	rlcf	??_I2C_Master_Init+1,f,c
  3270  00177A  3614               	rlcf	??_I2C_Master_Init+2,f,c
  3271  00177C  3615               	rlcf	??_I2C_Master_Init+3,f,c
  3272  00177E  2EE8               	decfsz	wreg,f,c
  3273  001780  D7F9               	goto	u585
  3274  001782  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  3275  001786  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3276  00178A  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3277  00178E  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3278  001792  EC20  F00B         	call	___lldiv	;wreg free
  3279  001796  0401               	decf	?___lldiv,w,c
  3280  001798  6EC8               	movwf	4040,c	;volatile
  3281  00179A  0012               	return		;funcret
  3282  00179C                     __end_of_I2C_Master_Init:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           prodh	equ	0xFF4
  3289                           prodl	equ	0xFF3
  3290                           intcon	equ	0xFF2
  3291                           intcon3	equ	0xFF0
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           postinc2	equ	0xFDE
  3295                           postdec2	equ	0xFDD
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8
  3299                           
  3300 ;; *************** function ___lldiv *****************
  3301 ;; Defined at:
  3302 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lldiv.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  dividend        4    0[COMRAM] unsigned long 
  3305 ;;  divisor         4    4[COMRAM] unsigned long 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  quotient        4    8[COMRAM] unsigned long 
  3308 ;;  counter         1   12[COMRAM] unsigned char 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  4    0[COMRAM] unsigned long 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3318 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;Total ram usage:       13 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_I2C_Master_Init
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text22
  3332  001640                     __ptext22:
  3333                           	opt stack 0
  3334  001640                     ___lldiv:
  3335                           	opt stack 29
  3336                           
  3337                           ;incstack = 0
  3338  001640  0E00               	movlw	0
  3339  001642  6E09               	movwf	___lldiv@quotient,c
  3340  001644  0E00               	movlw	0
  3341  001646  6E0A               	movwf	___lldiv@quotient+1,c
  3342  001648  0E00               	movlw	0
  3343  00164A  6E0B               	movwf	___lldiv@quotient+2,c
  3344  00164C  0E00               	movlw	0
  3345  00164E  6E0C               	movwf	___lldiv@quotient+3,c
  3346  001650  5005               	movf	___lldiv@divisor,w,c
  3347  001652  1006               	iorwf	___lldiv@divisor+1,w,c
  3348  001654  1007               	iorwf	___lldiv@divisor+2,w,c
  3349  001656  1008               	iorwf	___lldiv@divisor+3,w,c
  3350  001658  B4D8               	btfsc	status,2,c
  3351  00165A  D02A               	goto	l674
  3352  00165C  0E01               	movlw	1
  3353  00165E  6E0D               	movwf	___lldiv@counter,c
  3354  001660  D006               	goto	l669
  3355  001662  90D8               	bcf	status,0,c
  3356  001664  3605               	rlcf	___lldiv@divisor,f,c
  3357  001666  3606               	rlcf	___lldiv@divisor+1,f,c
  3358  001668  3607               	rlcf	___lldiv@divisor+2,f,c
  3359  00166A  3608               	rlcf	___lldiv@divisor+3,f,c
  3360  00166C  2A0D               	incf	___lldiv@counter,f,c
  3361  00166E                     l669:
  3362  00166E  AE08               	btfss	___lldiv@divisor+3,7,c
  3363  001670  D7F8               	goto	l670
  3364  001672                     u500:
  3365  001672  90D8               	bcf	status,0,c
  3366  001674  3609               	rlcf	___lldiv@quotient,f,c
  3367  001676  360A               	rlcf	___lldiv@quotient+1,f,c
  3368  001678  360B               	rlcf	___lldiv@quotient+2,f,c
  3369  00167A  360C               	rlcf	___lldiv@quotient+3,f,c
  3370  00167C  5005               	movf	___lldiv@divisor,w,c
  3371  00167E  5C01               	subwf	___lldiv@dividend,w,c
  3372  001680  5006               	movf	___lldiv@divisor+1,w,c
  3373  001682  5802               	subwfb	___lldiv@dividend+1,w,c
  3374  001684  5007               	movf	___lldiv@divisor+2,w,c
  3375  001686  5803               	subwfb	___lldiv@dividend+2,w,c
  3376  001688  5008               	movf	___lldiv@divisor+3,w,c
  3377  00168A  5804               	subwfb	___lldiv@dividend+3,w,c
  3378  00168C  A0D8               	btfss	status,0,c
  3379  00168E  D009               	goto	l673
  3380  001690  5005               	movf	___lldiv@divisor,w,c
  3381  001692  5E01               	subwf	___lldiv@dividend,f,c
  3382  001694  5006               	movf	___lldiv@divisor+1,w,c
  3383  001696  5A02               	subwfb	___lldiv@dividend+1,f,c
  3384  001698  5007               	movf	___lldiv@divisor+2,w,c
  3385  00169A  5A03               	subwfb	___lldiv@dividend+2,f,c
  3386  00169C  5008               	movf	___lldiv@divisor+3,w,c
  3387  00169E  5A04               	subwfb	___lldiv@dividend+3,f,c
  3388  0016A0  8009               	bsf	___lldiv@quotient,0,c
  3389  0016A2                     l673:
  3390  0016A2  90D8               	bcf	status,0,c
  3391  0016A4  3208               	rrcf	___lldiv@divisor+3,f,c
  3392  0016A6  3207               	rrcf	___lldiv@divisor+2,f,c
  3393  0016A8  3206               	rrcf	___lldiv@divisor+1,f,c
  3394  0016AA  3205               	rrcf	___lldiv@divisor,f,c
  3395  0016AC  2E0D               	decfsz	___lldiv@counter,f,c
  3396  0016AE  D7E1               	goto	u500
  3397  0016B0                     l674:
  3398  0016B0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3399  0016B4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3400  0016B8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3401  0016BC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3402  0016C0  0012               	return		;funcret
  3403  0016C2                     __end_of___lldiv:
  3404                           	opt stack 0
  3405                           tblptru	equ	0xFF8
  3406                           tblptrh	equ	0xFF7
  3407                           tblptrl	equ	0xFF6
  3408                           tablat	equ	0xFF5
  3409                           prodh	equ	0xFF4
  3410                           prodl	equ	0xFF3
  3411                           intcon	equ	0xFF2
  3412                           intcon3	equ	0xFF0
  3413                           postinc0	equ	0xFEE
  3414                           wreg	equ	0xFE8
  3415                           postinc2	equ	0xFDE
  3416                           postdec2	equ	0xFDD
  3417                           fsr2h	equ	0xFDA
  3418                           fsr2l	equ	0xFD9
  3419                           status	equ	0xFD8
  3420                           tblptru	equ	0xFF8
  3421                           tblptrh	equ	0xFF7
  3422                           tblptrl	equ	0xFF6
  3423                           tablat	equ	0xFF5
  3424                           prodh	equ	0xFF4
  3425                           prodl	equ	0xFF3
  3426                           intcon	equ	0xFF2
  3427                           intcon3	equ	0xFF0
  3428                           postinc0	equ	0xFEE
  3429                           wreg	equ	0xFE8
  3430                           postinc2	equ	0xFDE
  3431                           postdec2	equ	0xFDD
  3432                           fsr2h	equ	0xFDA
  3433                           fsr2l	equ	0xFD9
  3434                           status	equ	0xFD8
  3435                           
  3436                           	psect	rparam
  3437  0000                     tblptru	equ	0xFF8
  3438                           tblptrh	equ	0xFF7
  3439                           tblptrl	equ	0xFF6
  3440                           tablat	equ	0xFF5
  3441                           prodh	equ	0xFF4
  3442                           prodl	equ	0xFF3
  3443                           intcon	equ	0xFF2
  3444                           intcon3	equ	0xFF0
  3445                           postinc0	equ	0xFEE
  3446                           wreg	equ	0xFE8
  3447                           postinc2	equ	0xFDE
  3448                           postdec2	equ	0xFDD
  3449                           fsr2h	equ	0xFDA
  3450                           fsr2l	equ	0xFD9
  3451                           status	equ	0xFD8


Data Sizes:
    Strings     43
    Constant    36
    Data        2
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27      48
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_17(CODE[11]), STR_16(CODE[10]), STR_15(CODE[8]), STR_14(CODE[9]), 
		 -> STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[3]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[5]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    3473
                                             24 COMRAM     3     3      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                       _motorStart_0
                       _motorStart_1
                       _motorStart_2
                       _motorStart_3
                        _motorStop_0
                        _motorStop_1
                        _motorStop_2
                        _motorStop_3
                             _printf
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    2393
                                             12 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _motorStop_3                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _motorStop_2                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _motorStop_1                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _motorStop_0                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _motorStart_3                                         2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _motorStart_2                                         2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _motorStart_1                                         2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _motorStart_0                                         2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     478
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     488
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _lcdNibble
   _motorStart_0
   _motorStart_1
   _motorStart_2
   _motorStart_3
   _motorStop_0
   _motorStop_1
   _motorStop_2
   _motorStop_3
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _lcdNibble
   _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       1       0        0.8%
COMRAM              7F     1B      30       1       37.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      34        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 16 15:27:12 2018

                          _i 001C                           u15 16FC                           u16 16FE  
                         u25 173C                           u26 173E                  __CFG_CPD$ON 000000  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l120 111E  
                        l121 1164                          l130 1282                          l131 12C8  
                        l300 152C                          l124 11BC                          l301 153C  
                        l125 11D0                          l134 1320                          l126 1216  
                        l143 1410                          l135 1334                          l119 110A  
                        l152 1894                          l144 1420                          l136 137A  
                        l313 15D0                          l145 1466                          l129 126E  
                        l314 161E                          l315 15D6                          l307 1566  
                        l139 13B8                          l309 158E                          l722 17BA  
                        l723 17B2                          l732 1850                          l733 1848  
                        l670 1662                          l726 17DA                          l727 17E4  
                        l736 1868                          l673 16A2                          l737 1872  
                        l674 16B0                          l669 166E                 __CFG_CPB$OFF 000000  
                        u500 1672                          u530 17BE                          u630 15BE  
                        u560 1854                          u650 1626                          u807 10FA  
                        u585 1774                          u817 1156                          u770 13BE  
                        u907 136C                          u827 117E                          u917 1394  
                        u837 11AC                          u927 1458                          u847 1208  
                        u937 1488                          u857 1230                          u947 14B6  
                        u867 125E                          u957 14E4                          u877 12BA  
                        u967 1512                          u887 12E2                          u977 19D0  
                        u897 1310                          u987 18F2                          u997 190E  
                        _max 002E                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         l1630 110A                         l1712 1334  
                       l1562 1592                         l1730 13A8                         l1634 111E  
                       l1708 1320                         l1660 11D0                         l1656 11BC  
                       l1754 1410                         l1738 13BE                         l1682 126E  
                       l1686 1282                         _ADON 007E10                         STR_1 1037  
                       STR_2 1037                         STR_3 104B                         STR_4 1037  
                       STR_5 1037                         STR_6 104B                         STR_7 1037  
                       STR_8 1037                         STR_9 104B                         u1007 192A  
                       u1017 1946                         u1107 16EE                         u1027 1962  
                       u1117 1724                         u1037 197E                         u1127 172E  
                       u1047 199A                         u1057 19B6                         u1067 17F4  
                       u1077 1828                         _LATA 000F89                         _LATB 000F8A  
                       u1087 19E4                         _LATC 000F8B                         _LATD 000F8C  
                       u1097 16E4                         _LATE 000F8D                  main@counter 001B  
                       _main 1052                         _keys 1001                         fsr2h 000FDA  
                       fsr2l 000FD9                         prodh 000FF4                         prodl 000FF3  
                       start 0000                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000             __end_of_LCD_LEFT 1020             ?_I2C_Master_Init 000E  
           ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001                        ?_main 0001  
                      STR_10 1037                        STR_11 1037                        STR_12 104B  
                      STR_13 1037                        STR_14 103A                        STR_15 1043  
                      STR_16 1030                        STR_17 1025              __end_of___lldiv 16C2  
            __end_of___lwdiv 17EE              __end_of___lwmod 187C                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_lcdInst 19EC               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
            __end_of_readADC 18B4              __end_of_initLCD 183A               __CFG_EBTRB$OFF 000000  
            __end_of_dpowers 101C                        _array 101C                        _state 002A  
                      _putch 19C4               __pbitbssCOMRAM 0180                        tablat 000FF5  
          _LCDinterruptState 002D                        status 000FD8               __CFG_PBADEN$ON 000000  
            __initialization 18B4                 __end_of_main 1522                 __end_of_keys 1012  
             __CFG_OSC$HSPLL 000000            __end_of_LCD_RIGHT 1021                       ??_main 0019  
              __activetblptr 000002            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0002  
         ??_I2C_Master_Start 0002                       _ADCON0 000FC2                       _ADCON1 000FC1  
         ??_I2C_Master_Write 0004                       _ADRESH 000FC4                       _ADRESL 000FC3  
                     ?_putch 0001                       _INT1IE 007F83                       _SSPADD 000FC8  
                     _SSPBUF 000FC9               __CFG_XINST$OFF 000000               __CFG_STVREN$ON 000000  
                  ??___lldiv 0009                    ??___lwdiv 0005                    ??___lwmod 000C  
                     clear_0 18D4                 ?_motorStop_0 0001                 ?_motorStop_1 0001  
               ?_motorStop_2 0001                 ?_motorStop_3 0001                    ??_lcdInst 0003  
                     _printf 1522                    ??_readADC 0003                    ??_initLCD 0004  
               __pdataCOMRAM 002E                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                   __accesstop 0080  
    __end_of__initialization 18DA                ___rparam_used 000001               __pcstackCOMRAM 0001  
              __end_of_array 101F                __end_of_putch 19D8           __size_of_lcdNibble 007E  
                    ??_putch 0003                      ?_printf 000D         lcd@LCDinterruptState 002C  
                    _SSPCON1 000FC6                      _SSPCON2 000FC5                      _SSPSTAT 000FC7  
          __end_of_lcdNibble 1740                      __Hparam 0000                      __Lparam 0000  
                    ___lldiv 1640                      ___lwdiv 179C                      ___lwmod 183A  
               __psmallconst 1000                      __pcinit 18B4                      __ramtop 1000  
                    _lcdInst 19D8                      __ptext0 1052                      __ptext1 187C  
                    __ptext2 1522                      __ptext3 19C4                      __ptext4 183A  
                    __ptext5 179C                      __ptext6 18E4                      __ptext7 1900  
                    __ptext8 191C                      __ptext9 1938              __size_of_printf 011E  
                    _readADC 187C                      _initLCD 17EE         __size_of_motorStop_0 001C  
       __size_of_motorStop_1 001C         __size_of_motorStop_2 001C         __size_of_motorStop_3 001C  
                    _dpowers 1012                ?_motorStart_0 0001                ?_motorStart_1 0001  
              ?_motorStart_2 0001                ?_motorStart_3 0001                    _LCD_RIGHT 1020  
   __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008  
       end_of_initialization 18DA        __end_of_LCD_SIZE_HORZ 1023        __end_of_LCD_SIZE_VERT 1022  
              __Lmediumconst 0000    __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A  
            ___lldiv@divisor 0005              ___lldiv@counter 000D                      printf@c 0018  
                    printf@f 000D                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE               ??_motorStart_0 0001               ??_motorStart_1 0001  
             ??_motorStart_2 0001               ??_motorStart_3 0001                    _TRISCbits 000F94  
                  _TRISDbits 000F95                    _B_counter 0028                __pidataCOMRAM 1A18  
             __end_of_printf 1640                    _N_counter 0026          start_initialization 18B4  
                  _S_counter 0024            ??_I2C_Master_Init 0012            ??_I2C_Master_Wait 0001  
          ??_I2C_Master_Stop 0002                    _W_counter 0022     I2C_Master_Init@clockFreq 000E  
           __CFG_LPT1OSC$OFF 000000                     ??_printf 0011                _analog_result 001E  
                __pbssCOMRAM 001C             _I2C_Master_Start 1A10             _I2C_Master_Write 19FE  
       __end_of_motorStart_0 19C4         __end_of_motorStart_1 19A8         __end_of_motorStart_2 198C  
       __end_of_motorStart_3 1970             ___lwdiv@dividend 0001            __CFG_CCP2MX$PORTC 000000  
                  _lcdNibble 16C2                     ?___lldiv 0001                     ?___lwdiv 0001  
                   ?___lwmod 0008                     ?_lcdInst 0001                     ?_readADC 0001  
                   ?_initLCD 0001                  __smallconst 1000             ___lwdiv@quotient 0005  
             __size_of_putch 0014                     _LCD_LEFT 101F                     _LATCbits 000F8B  
                   _LATDbits 000F8C             __CFG_WDTPS$32768 000000                   ?_lcdNibble 0001  
              ??_motorStop_0 0001                ??_motorStop_1 0001                ??_motorStop_2 0001  
              ??_motorStop_3 0001                   _ADCON0bits 000FC2                lcdNibble@data 0002  
                   _B_remain 0020                   printf@flag 0014                lcdNibble@temp 0001  
                 printf@prec 0015               _LCD_HORZ_LIMIT 1024                     __Hrparam 0000  
                   __Lrparam 0000           __CFG_BOREN$SBORDIS 000000             __size_of___lldiv 0082  
           __size_of___lwdiv 0052             __size_of___lwmod 0042               readADC@channel 0005  
           __size_of_lcdInst 0014              _I2C_Master_Init 1740             __size_of_readADC 0038  
           __size_of_initLCD 004C              _I2C_Master_Wait 19EC              _I2C_Master_Stop 1A08  
     __end_of_LCD_HORZ_LIMIT 1025          __end_of_motorStop_0 1954          __end_of_motorStop_1 1938  
        __end_of_motorStop_2 191C          __end_of_motorStop_3 1900              ___lwdiv@divisor 0003  
            ___lwdiv@counter 0007                     __ptext10 1954                     __ptext11 1970  
                   __ptext20 19EC                     __ptext12 198C                     __ptext21 1740  
                   __ptext13 19A8                     __ptext22 1640                     __ptext14 17EE  
                   __ptext15 19D8                     __ptext16 16C2                     __ptext17 19FE  
                   __ptext18 1A08                     __ptext19 1A10               _LCD_VERT_LIMIT 1023  
      __size_of_motorStart_0 001C        __size_of_motorStart_1 001C        __size_of_motorStart_2 001C  
      __size_of_motorStart_3 001C                __size_of_main 04D0                  ??_lcdNibble 0001  
                   main@SEND 0180                    printf@val 0016  I2C_Master_Write@byteToWrite 0002  
                  putch@data 0003     __end_of_I2C_Master_Start 1A18     __end_of_I2C_Master_Write 1A08  
                 _INTCONbits 000FF2                 _motorStart_0 19A8                 _motorStart_1 198C  
               _motorStart_2 1970                 _motorStart_3 1954       __end_of_LCD_VERT_LIMIT 1024  
              _LCD_SIZE_HORZ 1022             ___lwmod@dividend 0008                _LCD_SIZE_VERT 1021  
           ___lldiv@dividend 0001                     printf@ap 0012      __end_of_I2C_Master_Init 179C  
    __end_of_I2C_Master_Wait 19FE      __end_of_I2C_Master_Stop 1A10                  lcdInst@data 0003  
                _motorStop_0 1938                  _motorStop_1 191C                  _motorStop_2 1900  
                _motorStop_3 18E4             ___lldiv@quotient 0009              ___lwmod@divisor 000A  
            ___lwmod@counter 000C                  _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
