

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 30 15:47:27 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	smallconst
    59  001000                     __psmallconst:
    60                           	opt stack 0
    61  001000  00                 	db	0
    62  001001                     _keys:
    63                           	opt stack 0
    64  001001  31                 	db	49
    65  001002  32                 	db	50
    66  001003  33                 	db	51
    67  001004  41                 	db	65
    68  001005  34                 	db	52
    69  001006  35                 	db	53
    70  001007  36                 	db	54
    71  001008  42                 	db	66
    72  001009  37                 	db	55
    73  00100A  38                 	db	56
    74  00100B  39                 	db	57
    75  00100C  43                 	db	67
    76  00100D  2A                 	db	42
    77  00100E  30                 	db	48
    78  00100F  23                 	db	35
    79  001010  44                 	db	68
    80  001011  00                 	db	0
    81  001012                     __end_of_keys:
    82                           	opt stack 0
    83  001012                     _LCD_LEFT:
    84                           	opt stack 0
    85  001012  00                 	db	0
    86  001013                     __end_of_LCD_LEFT:
    87                           	opt stack 0
    88  001013                     _LCD_RIGHT:
    89                           	opt stack 0
    90  001013  01                 	db	1
    91  001014                     __end_of_LCD_RIGHT:
    92                           	opt stack 0
    93  001014                     _LCD_SIZE_VERT:
    94                           	opt stack 0
    95  001014  02                 	db	2
    96  001015                     __end_of_LCD_SIZE_VERT:
    97                           	opt stack 0
    98  001015                     _LCD_SIZE_HORZ:
    99                           	opt stack 0
   100  001015  10                 	db	16
   101  001016                     __end_of_LCD_SIZE_HORZ:
   102                           	opt stack 0
   103  001016                     _LCD_VERT_LIMIT:
   104                           	opt stack 0
   105  001016  02                 	db	2
   106  001017                     __end_of_LCD_VERT_LIMIT:
   107                           	opt stack 0
   108  001017                     _LCD_HORZ_LIMIT:
   109                           	opt stack 0
   110  001017  28                 	db	40
   111  001018                     __end_of_LCD_HORZ_LIMIT:
   112                           	opt stack 0
   113  0000                     _SSPBUF	set	4041
   114  0000                     _SSPCON2bits	set	4037
   115  0000                     _SSPADD	set	4040
   116  0000                     _SSPCON2	set	4037
   117  0000                     _SSPCON1	set	4038
   118  0000                     _SSPSTAT	set	4039
   119  0000                     _TRISCbits	set	3988
   120  0000                     _SSPCON1bits	set	4038
   121  0000                     _INTCONbits	set	4082
   122  0000                     _LATDbits	set	3980
   123  0000                     _ADCON1	set	4033
   124  0000                     _ADCON0	set	4034
   125  0000                     _TRISE	set	3990
   126  0000                     _TRISD	set	3989
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISB	set	3987
   129  0000                     _TRISA	set	3986
   130  0000                     _LATE	set	3981
   131  0000                     _LATD	set	3980
   132  0000                     _LATC	set	3979
   133  0000                     _LATB	set	3978
   134  0000                     _LATA	set	3977
   135                           
   136                           ; #config settings
   137  001018  00                 	db	0	; dummy byte at the end
   138  0000                     
   139                           	psect	cinit
   140  001262                     __pcinit:
   141                           	opt stack 0
   142  001262                     start_initialization:
   143                           	opt stack 0
   144  001262                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   148  001262  6A19               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   149                           
   150                           ; Clear objects allocated to COMRAM (2 bytes)
   151  001264  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   152  001266  6A17               	clrf	__pbssCOMRAM& (0+255),c
   153  001268                     end_of_initialization:
   154                           	opt stack 0
   155  001268                     __end_of__initialization:
   156                           	opt stack 0
   157  001268  0E00               	movlw	low (__Lsmallconst shr (0+16))
   158  00126A  6EF8               	movwf	tblptru,c
   159  00126C  0E10               	movlw	high __Lsmallconst
   160  00126E  6EF7               	movwf	tblptrh,c
   161  001270  0100               	movlb	0
   162  001272  EF0D  F008         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           
   166                           	psect	bitbssCOMRAM
   167  0000C8                     __pbitbssCOMRAM:
   168                           	opt stack 0
   169  0000C8                     main@SEND:
   170                           	opt stack 0
   171  0000C8                     	ds	1
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           
   175                           	psect	bssCOMRAM
   176  000017                     __pbssCOMRAM:
   177                           	opt stack 0
   178  000017                     lcd@LCDinterruptState:
   179                           	opt stack 0
   180  000017                     	ds	1
   181  000018                     	ds	1
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           
   185                           	psect	cstackCOMRAM
   186  000001                     __pcstackCOMRAM:
   187                           	opt stack 0
   188  000001                     ??_I2C_Master_Wait:
   189  000001                     ?___lldiv:
   190                           	opt stack 0
   191  000001                     lcdNibble@temp:
   192                           	opt stack 0
   193  000001                     ___lldiv@dividend:
   194                           	opt stack 0
   195                           
   196                           ; 4 bytes @ 0x0
   197  000001                     	ds	1
   198  000002                     lcdNibble@data:
   199                           	opt stack 0
   200  000002                     I2C_Master_Write@byteToWrite:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x1
   204  000002                     	ds	1
   205  000003                     lcdInst@data:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x2
   209  000003                     	ds	1
   210  000004                     ??_initLCD:
   211  000004                     
   212                           ; 1 bytes @ 0x3
   213  000004                     	ds	1
   214  000005                     ___lldiv@divisor:
   215                           	opt stack 0
   216                           
   217                           ; 4 bytes @ 0x4
   218  000005                     	ds	4
   219  000009                     ___lldiv@quotient:
   220                           	opt stack 0
   221                           
   222                           ; 4 bytes @ 0x8
   223  000009                     	ds	4
   224  00000D                     ___lldiv@counter:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0xC
   228  00000D                     	ds	1
   229  00000E                     I2C_Master_Init@clockFreq:
   230                           	opt stack 0
   231                           
   232                           ; 4 bytes @ 0xD
   233  00000E                     	ds	4
   234  000012                     ??_I2C_Master_Init:
   235                           
   236                           ; 1 bytes @ 0x11
   237  000012                     	ds	4
   238  000016                     main@counter:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x15
   242  000016                     	ds	1
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           
   246 ;;
   247 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   248 ;;
   249 ;; *************** function _main *****************
   250 ;; Defined at:
   251 ;;		line 33 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;  mem             3    0        unsigned char [3]
   256 ;;  counter         1   21[COMRAM] unsigned char 
   257 ;;  data            1    0        unsigned char 
   258 ;;  keypress        1    0        unsigned char 
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, status,0, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;Total ram usage:        1 bytes
   273 ;; Hardware stack levels required when called:    3
   274 ;; This function calls:
   275 ;;		_I2C_Master_Init
   276 ;;		_I2C_Master_Start
   277 ;;		_I2C_Master_Stop
   278 ;;		_I2C_Master_Write
   279 ;;		_initLCD
   280 ;; This function is called by:
   281 ;;		Startup code after reset
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text0
   286  00101A                     __ptext0:
   287                           	opt stack 0
   288  00101A                     _main:
   289                           	opt stack 28
   290                           
   291                           ;main.c: 44: LATA = 0x00;
   292                           
   293                           ;incstack = 0
   294  00101A  0E00               	movlw	0
   295  00101C  6E89               	movwf	3977,c	;volatile
   296                           
   297                           ;main.c: 45: LATB = 0x00;
   298  00101E  0E00               	movlw	0
   299  001020  6E8A               	movwf	3978,c	;volatile
   300                           
   301                           ;main.c: 46: LATC = 0x00;
   302  001022  0E00               	movlw	0
   303  001024  6E8B               	movwf	3979,c	;volatile
   304                           
   305                           ;main.c: 47: LATD = 0x00;
   306  001026  0E00               	movlw	0
   307  001028  6E8C               	movwf	3980,c	;volatile
   308                           
   309                           ;main.c: 48: LATE = 0x00;
   310  00102A  0E00               	movlw	0
   311  00102C  6E8D               	movwf	3981,c	;volatile
   312                           
   313                           ;main.c: 52: TRISA = 0xFF;
   314  00102E  6892               	setf	3986,c	;volatile
   315                           
   316                           ;main.c: 53: TRISB = 0xFF;
   317  001030  6893               	setf	3987,c	;volatile
   318                           
   319                           ;main.c: 54: TRISC = 0b10000000;
   320  001032  0E80               	movlw	128
   321  001034  6E94               	movwf	3988,c	;volatile
   322                           
   323                           ;main.c: 58: TRISD = 0x00;
   324  001036  0E00               	movlw	0
   325  001038  6E95               	movwf	3989,c	;volatile
   326                           
   327                           ;main.c: 59: TRISE = 0x00;
   328  00103A  0E00               	movlw	0
   329  00103C  6E96               	movwf	3990,c	;volatile
   330                           
   331                           ;main.c: 62: ADCON0 = 0x00;
   332  00103E  0E00               	movlw	0
   333  001040  6EC2               	movwf	4034,c	;volatile
   334                           
   335                           ;main.c: 63: ADCON1 = 0b00001111;
   336  001042  0E0F               	movlw	15
   337  001044  6EC1               	movwf	4033,c	;volatile
   338                           
   339                           ;main.c: 67: initLCD();
   340  001046  EC0B  F009         	call	_initLCD	;wreg free
   341                           
   342                           ;main.c: 70: I2C_Master_Init(100000);
   343  00104A  0EA0               	movlw	160
   344  00104C  6E0E               	movwf	I2C_Master_Init@clockFreq,c
   345  00104E  0E86               	movlw	134
   346  001050  6E0F               	movwf	I2C_Master_Init@clockFreq+1,c
   347  001052  0E01               	movlw	1
   348  001054  6E10               	movwf	I2C_Master_Init@clockFreq+2,c
   349  001056  0E00               	movlw	0
   350  001058  6E11               	movwf	I2C_Master_Init@clockFreq+3,c
   351  00105A  ECDD  F008         	call	_I2C_Master_Init	;wreg free
   352                           
   353                           ;main.c: 71: I2C_Master_Start();
   354  00105E  EC57  F009         	call	_I2C_Master_Start	;wreg free
   355                           
   356                           ;main.c: 74: I2C_Master_Write(0b00010000);
   357  001062  0E00               	movlw	0
   358  001064  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   359  001066  0E10               	movlw	16
   360  001068  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   361  00106A  EC4E  F009         	call	_I2C_Master_Write	;wreg free
   362                           
   363                           ;main.c: 75: I2C_Master_Stop();
   364  00106E  EC53  F009         	call	_I2C_Master_Stop	;wreg free
   365                           
   366                           ;main.c: 78: unsigned char mem[3];
   367                           ;main.c: 79: unsigned char counter = 0;
   368  001072  0E00               	movlw	0
   369  001074  6E16               	movwf	main@counter,c
   370                           
   371                           ;main.c: 80: unsigned char keypress;
   372                           ;main.c: 81: unsigned char data;
   373                           ;main.c: 82: static bit SEND;
   374                           ;main.c: 83: SEND = 1;
   375  001076  8019               	bsf	main@SEND/(0+8),main@SEND& (0+7),c
   376  001078                     l57:
   377                           
   378                           ;main.c: 91: I2C_Master_Start();
   379  001078  EC57  F009         	call	_I2C_Master_Start	;wreg free
   380                           
   381                           ;main.c: 92: I2C_Master_Write(0b00010000);
   382  00107C  0E00               	movlw	0
   383  00107E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   384  001080  0E10               	movlw	16
   385  001082  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   386  001084  EC4E  F009         	call	_I2C_Master_Write	;wreg free
   387                           
   388                           ;main.c: 93: I2C_Master_Write('1');
   389  001088  0E00               	movlw	0
   390  00108A  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   391  00108C  0E31               	movlw	49
   392  00108E  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   393  001090  EC4E  F009         	call	_I2C_Master_Write	;wreg free
   394                           
   395                           ;main.c: 94: I2C_Master_Stop();
   396  001094  EC53  F009         	call	_I2C_Master_Stop	;wreg free
   397                           
   398                           ;main.c: 98: I2C_Master_Start();
   399  001098  EC57  F009         	call	_I2C_Master_Start	;wreg free
   400                           
   401                           ;main.c: 99: I2C_Master_Write(0b00010000);
   402  00109C  0E00               	movlw	0
   403  00109E  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   404  0010A0  0E10               	movlw	16
   405  0010A2  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   406  0010A4  EC4E  F009         	call	_I2C_Master_Write	;wreg free
   407                           
   408                           ;main.c: 100: I2C_Master_Write('2');
   409  0010A8  0E00               	movlw	0
   410  0010AA  6E03               	movwf	I2C_Master_Write@byteToWrite+1,c
   411  0010AC  0E32               	movlw	50
   412  0010AE  6E02               	movwf	I2C_Master_Write@byteToWrite,c
   413  0010B0  EC4E  F009         	call	_I2C_Master_Write	;wreg free
   414                           
   415                           ;main.c: 101: I2C_Master_Stop();
   416  0010B4  EC53  F009         	call	_I2C_Master_Stop	;wreg free
   417  0010B8  D7DF               	goto	l57
   418  0010BA                     __end_of_main:
   419                           	opt stack 0
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           
   423 ;; *************** function _initLCD *****************
   424 ;; Defined at:
   425 ;;		line 60 in file "lcd.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;Total ram usage:        1 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; Hardware stack levels required when called:    2
   446 ;; This function calls:
   447 ;;		_lcdInst
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text1
   454  001216                     __ptext1:
   455                           	opt stack 0
   456  001216                     _initLCD:
   457                           	opt stack 28
   458                           
   459                           ;lcd.c: 68: _delay((unsigned long)((15)*(40000000/4000.0)));
   460                           
   461                           ;incstack = 0
   462  001216  0EC3               	movlw	195
   463  001218  6E04               	movwf	??_initLCD& (0+255),c
   464  00121A  0ECD               	movlw	205
   465  00121C                     u207:
   466  00121C  2EE8               	decfsz	wreg,f,c
   467  00121E  D7FE               	bra	u207
   468  001220  2E04               	decfsz	??_initLCD& (0+255),f,c
   469  001222  D7FC               	bra	u207
   470  001224  F000               	nop	
   471                           
   472                           ;lcd.c: 69: lcdInst(0b00110011);
   473  001226  0E33               	movlw	51
   474  001228  EC3B  F009         	call	_lcdInst
   475                           
   476                           ;lcd.c: 70: lcdInst(0b00110010);
   477  00122C  0E32               	movlw	50
   478  00122E  EC3B  F009         	call	_lcdInst
   479                           
   480                           ;lcd.c: 71: lcdInst(0b00101000);
   481  001232  0E28               	movlw	40
   482  001234  EC3B  F009         	call	_lcdInst
   483                           
   484                           ;lcd.c: 72: lcdInst(0b00001111);
   485  001238  0E0F               	movlw	15
   486  00123A  EC3B  F009         	call	_lcdInst
   487                           
   488                           ;lcd.c: 73: lcdInst(0b00000110);
   489  00123E  0E06               	movlw	6
   490  001240  EC3B  F009         	call	_lcdInst
   491                           
   492                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(40000000/4000.0)));;
   493  001244  0E01               	movlw	1
   494  001246  EC3B  F009         	call	_lcdInst
   495  00124A  0EC3               	movlw	195
   496  00124C  6E04               	movwf	??_initLCD& (0+255),c
   497  00124E  0ECD               	movlw	205
   498  001250                     u217:
   499  001250  2EE8               	decfsz	wreg,f,c
   500  001252  D7FE               	bra	u217
   501  001254  2E04               	decfsz	??_initLCD& (0+255),f,c
   502  001256  D7FC               	bra	u217
   503  001258  F000               	nop	
   504                           
   505                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
   506  00125A  0E0F               	movlw	15
   507  00125C  EC3B  F009         	call	_lcdInst
   508  001260  0012               	return		;funcret
   509  001262                     __end_of_initLCD:
   510                           	opt stack 0
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           wreg	equ	0xFE8
   514                           
   515 ;; *************** function _lcdInst *****************
   516 ;; Defined at:
   517 ;;		line 11 in file "lcd.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  data            1    wreg     unsigned char 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  data            1    2[COMRAM] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;Total ram usage:        1 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    1
   538 ;; This function calls:
   539 ;;		_lcdNibble
   540 ;; This function is called by:
   541 ;;		_initLCD
   542 ;;		_lcd_set_cursor
   543 ;;		_lcd_shift_cursor
   544 ;;		_lcd_shift_display
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text2
   549  001276                     __ptext2:
   550                           	opt stack 0
   551  001276                     _lcdInst:
   552                           	opt stack 28
   553                           
   554                           ;incstack = 0
   555                           ;lcdInst@data stored from wreg
   556  001276  6E03               	movwf	lcdInst@data,c
   557                           
   558                           ;lcd.c: 19: LATDbits.LATD2 = 0;
   559  001278  948C               	bcf	3980,2,c	;volatile
   560                           
   561                           ;lcd.c: 20: lcdNibble(data);
   562  00127A  5003               	movf	lcdInst@data,w,c
   563  00127C  EC9E  F008         	call	_lcdNibble
   564                           
   565                           ;lcd.c: 21: _delay((unsigned long)((100)*(40000000/4000000.0)));
   566  001280  0EC8               	movlw	200
   567  001282                     u227:
   568  001282  D000               	nop2	
   569  001284  2EE8               	decfsz	wreg,f,c
   570  001286  D7FD               	bra	u227
   571  001288  0012               	return		;funcret
   572  00128A                     __end_of_lcdInst:
   573                           	opt stack 0
   574                           tblptru	equ	0xFF8
   575                           tblptrh	equ	0xFF7
   576                           wreg	equ	0xFE8
   577                           
   578 ;; *************** function _lcdNibble *****************
   579 ;; Defined at:
   580 ;;		line 37 in file "lcd.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;  data            1    wreg     unsigned char 
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  data            1    1[COMRAM] unsigned char 
   585 ;;  temp            1    0[COMRAM] unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;Total ram usage:        2 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_lcdInst
   605 ;;		_putch
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text3
   610  00113C                     __ptext3:
   611                           	opt stack 0
   612  00113C                     _lcdNibble:
   613                           	opt stack 28
   614                           
   615                           ;incstack = 0
   616                           ;lcdNibble@data stored from wreg
   617  00113C  6E02               	movwf	lcdNibble@data,c
   618                           
   619                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
   620  00113E  5002               	movf	lcdNibble@data,w,c
   621  001140  0BF0               	andlw	240
   622  001142  6E01               	movwf	lcdNibble@temp,c
   623                           
   624                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
   625  001144  508C               	movf	3980,w,c	;volatile
   626  001146  0B0F               	andlw	15
   627  001148  6E8C               	movwf	3980,c	;volatile
   628                           
   629                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
   630  00114A  5001               	movf	lcdNibble@temp,w,c
   631  00114C  108C               	iorwf	3980,w,c	;volatile
   632  00114E  6E8C               	movwf	3980,c	;volatile
   633                           
   634                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   635  001150  0E00               	movlw	0
   636  001152  BEF2               	btfsc	intcon,7,c	;volatile
   637  001154  0E01               	movlw	1
   638  001156  6E17               	movwf	lcd@LCDinterruptState,c
   639  001158  9EF2               	bcf	intcon,7,c	;volatile
   640  00115A  868C               	bsf	3980,3,c	;volatile
   641  00115C  0E53               	movlw	83
   642  00115E                     u237:
   643  00115E  2EE8               	decfsz	wreg,f,c
   644  001160  D7FE               	bra	u237
   645  001162  F000               	nop	
   646  001164  968C               	bcf	3980,3,c	;volatile
   647  001166  0EC8               	movlw	200
   648  001168                     u247:
   649  001168  D000               	nop2	
   650  00116A  2EE8               	decfsz	wreg,f,c
   651  00116C  D7FD               	bra	u247
   652  00116E  B017               	btfsc	lcd@LCDinterruptState,0,c
   653  001170  D002               	bra	u15
   654  001172  9EF2               	bcf	intcon,7,c	;volatile
   655  001174  D001               	bra	u16
   656  001176                     u15:
   657  001176  8EF2               	bsf	intcon,7,c	;volatile
   658  001178                     u16:
   659                           
   660                           ;lcd.c: 52: data = (unsigned char) (data << 4);
   661  001178  3802               	swapf	lcdNibble@data,w,c
   662  00117A  0BF0               	andlw	240
   663  00117C  6E02               	movwf	lcdNibble@data,c
   664                           
   665                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
   666  00117E  5002               	movf	lcdNibble@data,w,c
   667  001180  0BF0               	andlw	240
   668  001182  6E01               	movwf	lcdNibble@temp,c
   669                           
   670                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
   671  001184  508C               	movf	3980,w,c	;volatile
   672  001186  0B0F               	andlw	15
   673  001188  6E8C               	movwf	3980,c	;volatile
   674                           
   675                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
   676  00118A  5001               	movf	lcdNibble@temp,w,c
   677  00118C  108C               	iorwf	3980,w,c	;volatile
   678  00118E  6E8C               	movwf	3980,c	;volatile
   679                           
   680                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(40000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(40000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   681  001190  0E00               	movlw	0
   682  001192  BEF2               	btfsc	intcon,7,c	;volatile
   683  001194  0E01               	movlw	1
   684  001196  6E17               	movwf	lcd@LCDinterruptState,c
   685  001198  9EF2               	bcf	intcon,7,c	;volatile
   686  00119A  868C               	bsf	3980,3,c	;volatile
   687  00119C  0E53               	movlw	83
   688  00119E                     u257:
   689  00119E  2EE8               	decfsz	wreg,f,c
   690  0011A0  D7FE               	bra	u257
   691  0011A2  F000               	nop	
   692  0011A4  968C               	bcf	3980,3,c	;volatile
   693  0011A6  0EC8               	movlw	200
   694  0011A8                     u267:
   695  0011A8  D000               	nop2	
   696  0011AA  2EE8               	decfsz	wreg,f,c
   697  0011AC  D7FD               	bra	u267
   698  0011AE  B017               	btfsc	lcd@LCDinterruptState,0,c
   699  0011B0  D002               	bra	u25
   700  0011B2  9EF2               	bcf	intcon,7,c	;volatile
   701  0011B4  D001               	bra	u26
   702  0011B6                     u25:
   703  0011B6  8EF2               	bsf	intcon,7,c	;volatile
   704  0011B8                     u26:
   705  0011B8  0012               	return		;funcret
   706  0011BA                     __end_of_lcdNibble:
   707                           	opt stack 0
   708                           tblptru	equ	0xFF8
   709                           tblptrh	equ	0xFF7
   710                           intcon	equ	0xFF2
   711                           wreg	equ	0xFE8
   712                           
   713 ;; *************** function _I2C_Master_Write *****************
   714 ;; Defined at:
   715 ;;		line 108 in file "I2C.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  byteToWrite     2    1[COMRAM] unsigned int 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:    1
   736 ;; This function calls:
   737 ;;		_I2C_Master_Wait
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text4
   744  00129C                     __ptext4:
   745                           	opt stack 0
   746  00129C                     _I2C_Master_Write:
   747                           	opt stack 29
   748                           
   749                           ;I2C.c: 116: I2C_Master_Wait();
   750                           
   751                           ;incstack = 0
   752  00129C  EC45  F009         	call	_I2C_Master_Wait	;wreg free
   753                           
   754                           ;I2C.c: 117: SSPBUF = byteToWrite;
   755  0012A0  C002  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
   756  0012A4  0012               	return		;funcret
   757  0012A6                     __end_of_I2C_Master_Write:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           intcon	equ	0xFF2
   762                           wreg	equ	0xFE8
   763                           
   764 ;; *************** function _I2C_Master_Stop *****************
   765 ;; Defined at:
   766 ;;		line 95 in file "I2C.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    1
   787 ;; This function calls:
   788 ;;		_I2C_Master_Wait
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text5
   795  0012A6                     __ptext5:
   796                           	opt stack 0
   797  0012A6                     _I2C_Master_Stop:
   798                           	opt stack 29
   799                           
   800                           ;I2C.c: 104: I2C_Master_Wait();
   801                           
   802                           ;incstack = 0
   803  0012A6  EC45  F009         	call	_I2C_Master_Wait	;wreg free
   804                           
   805                           ;I2C.c: 105: SSPCON2bits.PEN = 1;
   806  0012AA  84C5               	bsf	4037,2,c	;volatile
   807  0012AC  0012               	return		;funcret
   808  0012AE                     __end_of_I2C_Master_Stop:
   809                           	opt stack 0
   810                           tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           intcon	equ	0xFF2
   813                           wreg	equ	0xFE8
   814                           
   815 ;; *************** function _I2C_Master_Start *****************
   816 ;; Defined at:
   817 ;;		line 69 in file "I2C.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    1
   838 ;; This function calls:
   839 ;;		_I2C_Master_Wait
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text6
   846  0012AE                     __ptext6:
   847                           	opt stack 0
   848  0012AE                     _I2C_Master_Start:
   849                           	opt stack 29
   850                           
   851                           ;I2C.c: 78: I2C_Master_Wait();
   852                           
   853                           ;incstack = 0
   854  0012AE  EC45  F009         	call	_I2C_Master_Wait	;wreg free
   855                           
   856                           ;I2C.c: 79: SSPCON2bits.SEN = 1;
   857  0012B2  80C5               	bsf	4037,0,c	;volatile
   858  0012B4  0012               	return		;funcret
   859  0012B6                     __end_of_I2C_Master_Start:
   860                           	opt stack 0
   861                           tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           intcon	equ	0xFF2
   864                           wreg	equ	0xFE8
   865                           
   866 ;; *************** function _I2C_Master_Wait *****************
   867 ;; Defined at:
   868 ;;		line 51 in file "I2C.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;Total ram usage:        1 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_I2C_Master_Start
   892 ;;		_I2C_Master_Stop
   893 ;;		_I2C_Master_Write
   894 ;;		_I2C_Master_RepeatedStart
   895 ;;		_I2C_Master_Read
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text7
   900  00128A                     __ptext7:
   901                           	opt stack 0
   902  00128A                     _I2C_Master_Wait:
   903                           	opt stack 29
   904                           
   905                           ;I2C.c: 66: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   906                           
   907                           ;incstack = 0
   908  00128A  B4C7               	btfsc	4039,2,c	;volatile
   909  00128C  D7FE               	goto	_I2C_Master_Wait
   910  00128E  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
   911  001292  0E1F               	movlw	31
   912  001294  1601               	andwf	??_I2C_Master_Wait,f,c
   913  001296  B4D8               	btfsc	status,2,c
   914  001298  0012               	return	
   915  00129A  D7F7               	goto	_I2C_Master_Wait
   916  00129C                     __end_of_I2C_Master_Wait:
   917                           	opt stack 0
   918                           tblptru	equ	0xFF8
   919                           tblptrh	equ	0xFF7
   920                           intcon	equ	0xFF2
   921                           wreg	equ	0xFE8
   922                           status	equ	0xFD8
   923                           
   924 ;; *************** function _I2C_Master_Init *****************
   925 ;; Defined at:
   926 ;;		line 14 in file "I2C.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  clockFreq       4   13[COMRAM] const unsigned long 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;Total ram usage:        8 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    1
   947 ;; This function calls:
   948 ;;		___lldiv
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text8
   955  0011BA                     __ptext8:
   956                           	opt stack 0
   957  0011BA                     _I2C_Master_Init:
   958                           	opt stack 29
   959                           
   960                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
   961                           
   962                           ;incstack = 0
   963  0011BA  9AC6               	bcf	4038,5,c	;volatile
   964                           
   965                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
   966  0011BC  8694               	bsf	3988,3,c	;volatile
   967                           
   968                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
   969  0011BE  8894               	bsf	3988,4,c	;volatile
   970                           
   971                           ;I2C.c: 41: SSPSTAT = 0b10000000;
   972  0011C0  0E80               	movlw	128
   973  0011C2  6EC7               	movwf	4039,c	;volatile
   974                           
   975                           ;I2C.c: 42: SSPCON1 = 0b00101000;
   976  0011C4  0E28               	movlw	40
   977  0011C6  6EC6               	movwf	4038,c	;volatile
   978                           
   979                           ;I2C.c: 43: SSPCON2 = 0b00000000;
   980  0011C8  0E00               	movlw	0
   981  0011CA  6EC5               	movwf	4037,c	;volatile
   982                           
   983                           ;I2C.c: 48: SSPADD = (40000000 / (4 * clockFreq)) - 1;
   984  0011CC  0E00               	movlw	0
   985  0011CE  6E01               	movwf	___lldiv@dividend,c
   986  0011D0  0E5A               	movlw	90
   987  0011D2  6E02               	movwf	___lldiv@dividend+1,c
   988  0011D4  0E62               	movlw	98
   989  0011D6  6E03               	movwf	___lldiv@dividend+2,c
   990  0011D8  0E02               	movlw	2
   991  0011DA  6E04               	movwf	___lldiv@dividend+3,c
   992  0011DC  C00E  F012         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
   993  0011E0  C00F  F013         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
   994  0011E4  C010  F014         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
   995  0011E8  C011  F015         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
   996  0011EC  0E02               	movlw	2
   997  0011EE                     u195:
   998  0011EE  90D8               	bcf	status,0,c
   999  0011F0  3612               	rlcf	??_I2C_Master_Init,f,c
  1000  0011F2  3613               	rlcf	??_I2C_Master_Init+1,f,c
  1001  0011F4  3614               	rlcf	??_I2C_Master_Init+2,f,c
  1002  0011F6  3615               	rlcf	??_I2C_Master_Init+3,f,c
  1003  0011F8  2EE8               	decfsz	wreg,f,c
  1004  0011FA  D7F9               	goto	u195
  1005  0011FC  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  1006  001200  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1007  001204  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1008  001208  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1009  00120C  EC5D  F008         	call	___lldiv	;wreg free
  1010  001210  0401               	decf	?___lldiv,w,c
  1011  001212  6EC8               	movwf	4040,c	;volatile
  1012  001214  0012               	return		;funcret
  1013  001216                     __end_of_I2C_Master_Init:
  1014                           	opt stack 0
  1015                           tblptru	equ	0xFF8
  1016                           tblptrh	equ	0xFF7
  1017                           intcon	equ	0xFF2
  1018                           wreg	equ	0xFE8
  1019                           status	equ	0xFD8
  1020                           
  1021 ;; *************** function ___lldiv *****************
  1022 ;; Defined at:
  1023 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lldiv.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  dividend        4    0[COMRAM] unsigned long 
  1026 ;;  divisor         4    4[COMRAM] unsigned long 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  quotient        4    8[COMRAM] unsigned long 
  1029 ;;  counter         1   12[COMRAM] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  4    0[COMRAM] unsigned long 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1039 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;Total ram usage:       13 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; This function calls:
  1046 ;;		Nothing
  1047 ;; This function is called by:
  1048 ;;		_I2C_Master_Init
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text9
  1053  0010BA                     __ptext9:
  1054                           	opt stack 0
  1055  0010BA                     ___lldiv:
  1056                           	opt stack 29
  1057                           
  1058                           ;incstack = 0
  1059  0010BA  0E00               	movlw	0
  1060  0010BC  6E09               	movwf	___lldiv@quotient,c
  1061  0010BE  0E00               	movlw	0
  1062  0010C0  6E0A               	movwf	___lldiv@quotient+1,c
  1063  0010C2  0E00               	movlw	0
  1064  0010C4  6E0B               	movwf	___lldiv@quotient+2,c
  1065  0010C6  0E00               	movlw	0
  1066  0010C8  6E0C               	movwf	___lldiv@quotient+3,c
  1067  0010CA  5005               	movf	___lldiv@divisor,w,c
  1068  0010CC  1006               	iorwf	___lldiv@divisor+1,w,c
  1069  0010CE  1007               	iorwf	___lldiv@divisor+2,w,c
  1070  0010D0  1008               	iorwf	___lldiv@divisor+3,w,c
  1071  0010D2  B4D8               	btfsc	status,2,c
  1072  0010D4  D02A               	goto	l511
  1073  0010D6  0E01               	movlw	1
  1074  0010D8  6E0D               	movwf	___lldiv@counter,c
  1075  0010DA  D006               	goto	l506
  1076  0010DC  90D8               	bcf	status,0,c
  1077  0010DE  3605               	rlcf	___lldiv@divisor,f,c
  1078  0010E0  3606               	rlcf	___lldiv@divisor+1,f,c
  1079  0010E2  3607               	rlcf	___lldiv@divisor+2,f,c
  1080  0010E4  3608               	rlcf	___lldiv@divisor+3,f,c
  1081  0010E6  2A0D               	incf	___lldiv@counter,f,c
  1082  0010E8                     l506:
  1083  0010E8  AE08               	btfss	___lldiv@divisor+3,7,c
  1084  0010EA  D7F8               	goto	l507
  1085  0010EC                     u170:
  1086  0010EC  90D8               	bcf	status,0,c
  1087  0010EE  3609               	rlcf	___lldiv@quotient,f,c
  1088  0010F0  360A               	rlcf	___lldiv@quotient+1,f,c
  1089  0010F2  360B               	rlcf	___lldiv@quotient+2,f,c
  1090  0010F4  360C               	rlcf	___lldiv@quotient+3,f,c
  1091  0010F6  5005               	movf	___lldiv@divisor,w,c
  1092  0010F8  5C01               	subwf	___lldiv@dividend,w,c
  1093  0010FA  5006               	movf	___lldiv@divisor+1,w,c
  1094  0010FC  5802               	subwfb	___lldiv@dividend+1,w,c
  1095  0010FE  5007               	movf	___lldiv@divisor+2,w,c
  1096  001100  5803               	subwfb	___lldiv@dividend+2,w,c
  1097  001102  5008               	movf	___lldiv@divisor+3,w,c
  1098  001104  5804               	subwfb	___lldiv@dividend+3,w,c
  1099  001106  A0D8               	btfss	status,0,c
  1100  001108  D009               	goto	l510
  1101  00110A  5005               	movf	___lldiv@divisor,w,c
  1102  00110C  5E01               	subwf	___lldiv@dividend,f,c
  1103  00110E  5006               	movf	___lldiv@divisor+1,w,c
  1104  001110  5A02               	subwfb	___lldiv@dividend+1,f,c
  1105  001112  5007               	movf	___lldiv@divisor+2,w,c
  1106  001114  5A03               	subwfb	___lldiv@dividend+2,f,c
  1107  001116  5008               	movf	___lldiv@divisor+3,w,c
  1108  001118  5A04               	subwfb	___lldiv@dividend+3,f,c
  1109  00111A  8009               	bsf	___lldiv@quotient,0,c
  1110  00111C                     l510:
  1111  00111C  90D8               	bcf	status,0,c
  1112  00111E  3208               	rrcf	___lldiv@divisor+3,f,c
  1113  001120  3207               	rrcf	___lldiv@divisor+2,f,c
  1114  001122  3206               	rrcf	___lldiv@divisor+1,f,c
  1115  001124  3205               	rrcf	___lldiv@divisor,f,c
  1116  001126  2E0D               	decfsz	___lldiv@counter,f,c
  1117  001128  D7E1               	goto	u170
  1118  00112A                     l511:
  1119  00112A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1120  00112E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1121  001132  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1122  001136  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1123  00113A  0012               	return		;funcret
  1124  00113C                     __end_of___lldiv:
  1125                           	opt stack 0
  1126                           tblptru	equ	0xFF8
  1127                           tblptrh	equ	0xFF7
  1128                           intcon	equ	0xFF2
  1129                           wreg	equ	0xFE8
  1130                           status	equ	0xFD8
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           intcon	equ	0xFF2
  1134                           wreg	equ	0xFE8
  1135                           status	equ	0xFD8
  1136                           
  1137                           	psect	rparam
  1138  0000                     tblptru	equ	0xFF8
  1139                           tblptrh	equ	0xFF7
  1140                           intcon	equ	0xFF2
  1141                           wreg	equ	0xFE8
  1142                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    23
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     22      25
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_I2C_Master_Init
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     905
                                             21 COMRAM     1     1      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       1       0        0.8%
COMRAM              7F     16      19       1       19.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      34        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 30 15:47:27 2018

                         l57 1078                           u15 1176                           u16 1178  
                         u25 11B6                           u26 11B8                  __CFG_CPD$ON 000000  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l510 111C  
                        l511 112A                          l506 10E8                          l507 10DC  
               __CFG_CPB$OFF 000000                          u207 121C                          u217 1250  
                        u170 10EC                          u227 1282                          u237 115E  
                        u247 1168                          u257 119E                          u195 11EE  
                        u267 11A8                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         _LATA 000F89                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         _LATE 000F8D  
                main@counter 0016                         _main 101A                         _keys 1001  
                       start 0000                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000             __end_of_LCD_LEFT 1013             ?_I2C_Master_Init 000E  
           ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001                        ?_main 0001  
            __end_of___lldiv 113C                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000              __end_of_lcdInst 128A  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_initLCD 1262  
             __CFG_EBTRB$OFF 000000               __pbitbssCOMRAM 00C8            _LCDinterruptState 0018  
                      status 000FD8               __CFG_PBADEN$ON 000000              __initialization 1262  
               __end_of_main 10BA                 __end_of_keys 1012               __CFG_OSC$HSPLL 000000  
          __end_of_LCD_RIGHT 1014                       ??_main 0016                __activetblptr 000001  
          ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0002           ??_I2C_Master_Start 0002  
                     _ADCON0 000FC2                       _ADCON1 000FC1           ??_I2C_Master_Write 0004  
                     _SSPADD 000FC8                       _SSPBUF 000FC9               __CFG_XINST$OFF 000000  
             __CFG_STVREN$ON 000000                    ??___lldiv 0009                    ??_lcdInst 0003  
                  ??_initLCD 0004                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptru 000FF8                   __accesstop 0080      __end_of__initialization 1268  
              ___rparam_used 000001               __pcstackCOMRAM 0001           __size_of_lcdNibble 007E  
       lcd@LCDinterruptState 0017                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
                    _SSPSTAT 000FC7            __end_of_lcdNibble 11BA                      __Hparam 0000  
                    __Lparam 0000                      ___lldiv 10BA                 __psmallconst 1000  
                    __pcinit 1262                      __ramtop 1000                      _lcdInst 1276  
                    __ptext0 101A                      __ptext1 1216                      __ptext2 1276  
                    __ptext3 113C                      __ptext4 129C                      __ptext5 12A6  
                    __ptext6 12AE                      __ptext7 128A                      __ptext8 11BA  
                    __ptext9 10BA                      _initLCD 1216                    _LCD_RIGHT 1013  
   __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008  
       end_of_initialization 1268        __end_of_LCD_SIZE_HORZ 1016        __end_of_LCD_SIZE_VERT 1015  
  __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0005  
            ___lldiv@counter 000D                    _TRISCbits 000F94          start_initialization 1262  
          ??_I2C_Master_Init 0012            ??_I2C_Master_Wait 0001            ??_I2C_Master_Stop 0002  
   I2C_Master_Init@clockFreq 000E             __CFG_LPT1OSC$OFF 000000                  __pbssCOMRAM 0017  
           _I2C_Master_Start 12AE             _I2C_Master_Write 129C            __CFG_CCP2MX$PORTC 000000  
                  _lcdNibble 113C                     ?___lldiv 0001                     ?_lcdInst 0001  
                   ?_initLCD 0001                  __smallconst 1000                     _LCD_LEFT 1012  
                   _LATDbits 000F8C             __CFG_WDTPS$32768 000000                   ?_lcdNibble 0001  
              lcdNibble@data 0002                lcdNibble@temp 0001               _LCD_HORZ_LIMIT 1017  
                   __Hrparam 0000                     __Lrparam 0000                 __Lsmallconst 1000  
         __CFG_BOREN$SBORDIS 000000             __size_of___lldiv 0082             __size_of_lcdInst 0014  
            _I2C_Master_Init 11BA             __size_of_initLCD 004C              _I2C_Master_Wait 128A  
            _I2C_Master_Stop 12A6       __end_of_LCD_HORZ_LIMIT 1018               _LCD_VERT_LIMIT 1016  
              __size_of_main 00A0                  ??_lcdNibble 0001                     main@SEND 00C8  
I2C_Master_Write@byteToWrite 0002     __end_of_I2C_Master_Start 12B6     __end_of_I2C_Master_Write 12A6  
                 _INTCONbits 000FF2       __end_of_LCD_VERT_LIMIT 1017                _LCD_SIZE_HORZ 1015  
              _LCD_SIZE_VERT 1014             ___lldiv@dividend 0001      __end_of_I2C_Master_Init 1216  
    __end_of_I2C_Master_Wait 129C      __end_of_I2C_Master_Stop 12AE                  lcdInst@data 0003  
           ___lldiv@quotient 0009                  _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
