

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr  3 14:13:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4620 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	smallconst
    74  001000                     __psmallconst:
    75                           	opt stack 0
    76  001000  00                 	db	0
    77  001001                     _dpowers:
    78                           	opt stack 0
    79  001001  0001               	dw	1
    80  001003  000A               	dw	10
    81  001005  0064               	dw	100
    82  001007  03E8               	dw	1000
    83  001009  2710               	dw	10000
    84  00100B                     __end_of_dpowers:
    85                           	opt stack 0
    86  00100B                     _LCD_LEFT:
    87                           	opt stack 0
    88  00100B  00                 	db	0
    89  00100C                     __end_of_LCD_LEFT:
    90                           	opt stack 0
    91  00100C                     _LCD_RIGHT:
    92                           	opt stack 0
    93  00100C  01                 	db	1
    94  00100D                     __end_of_LCD_RIGHT:
    95                           	opt stack 0
    96  00100D                     _LCD_SIZE_VERT:
    97                           	opt stack 0
    98  00100D  02                 	db	2
    99  00100E                     __end_of_LCD_SIZE_VERT:
   100                           	opt stack 0
   101  00100E                     _LCD_SIZE_HORZ:
   102                           	opt stack 0
   103  00100E  10                 	db	16
   104  00100F                     __end_of_LCD_SIZE_HORZ:
   105                           	opt stack 0
   106  00100F                     _LCD_VERT_LIMIT:
   107                           	opt stack 0
   108  00100F  02                 	db	2
   109  001010                     __end_of_LCD_VERT_LIMIT:
   110                           	opt stack 0
   111  001010                     _LCD_HORZ_LIMIT:
   112                           	opt stack 0
   113  001010  28                 	db	40
   114  001011                     __end_of_LCD_HORZ_LIMIT:
   115                           	opt stack 0
   116  0000                     _SSPBUF	set	4041
   117  0000                     _SSPCON2bits	set	4037
   118  0000                     _SSPADD	set	4040
   119  0000                     _SSPCON2	set	4037
   120  0000                     _SSPCON1	set	4038
   121  0000                     _SSPSTAT	set	4039
   122  0000                     _SSPCON1bits	set	4038
   123  0000                     _ADRESL	set	4035
   124  0000                     _ADRESH	set	4036
   125  0000                     _ADCON0bits	set	4034
   126  0000                     _PORTBbits	set	3969
   127  0000                     _TRISBbits	set	3987
   128  0000                     _TRISCbits	set	3988
   129  0000                     _LATCbits	set	3979
   130  0000                     _ADCON2bits	set	4032
   131  0000                     _ADCON1	set	4033
   132  0000                     _ADCON0	set	4034
   133  0000                     _TRISE	set	3990
   134  0000                     _TRISD	set	3989
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISB	set	3987
   137  0000                     _TRISA	set	3986
   138  0000                     _LATE	set	3981
   139  0000                     _LATC	set	3979
   140  0000                     _LATB	set	3978
   141  0000                     _LATA	set	3977
   142  0000                     _OSCTUNEbits	set	3995
   143  0000                     _OSCCONbits	set	4051
   144  0000                     _INTCONbits	set	4082
   145  0000                     _LATD	set	3980
   146  0000                     _LATDbits	set	3980
   147  0000                     _ADON	set	32272
   148  0000                     _RBIF	set	32656
   149  0000                     _RBIE	set	32659
   150  001011                     STR_1:
   151  001011  53                 	db	83	;'S'
   152  001012  5F                 	db	95	;'_'
   153  001013  63                 	db	99	;'c'
   154  001014  6F                 	db	111	;'o'
   155  001015  75                 	db	117	;'u'
   156  001016  6E                 	db	110	;'n'
   157  001017  74                 	db	116	;'t'
   158  001018  3A                 	db	58	;':'
   159  001019  25                 	db	37
   160  00101A  64                 	db	100	;'d'
   161  00101B  00                 	db	0
   162  0000                     
   163                           ; #config settings
   164  00101C  00                 	db	0	; dummy byte at the end
   165  0000                     
   166                           	psect	cinit
   167  001726                     __pcinit:
   168                           	opt stack 0
   169  001726                     start_initialization:
   170                           	opt stack 0
   171  001726                     __initialization:
   172                           	opt stack 0
   173                           
   174                           ; Clear objects allocated to COMRAM (10 bytes)
   175  001726  EE00  F047         	lfsr	0,__pbssCOMRAM
   176  00172A  0E0A               	movlw	10
   177  00172C                     clear_0:
   178  00172C  6AEE               	clrf	postinc0,c
   179  00172E  06E8               	decf	wreg,f,c
   180  001730  E1FD               	bnz	clear_0
   181  001732                     end_of_initialization:
   182                           	opt stack 0
   183  001732                     __end_of__initialization:
   184                           	opt stack 0
   185  001732  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   186  001734  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   187  001736  0E00               	movlw	low (__Lmediumconst shr (0+16))
   188  001738  6EF8               	movwf	tblptru,c
   189  00173A  0100               	movlb	0
   190  00173C  EFB5  F009         	goto	_main	;jump to C main() function
   191                           tblptru	equ	0xFF8
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           
   195                           	psect	bssCOMRAM
   196  000047                     __pbssCOMRAM:
   197                           	opt stack 0
   198  000047                     _W_count:
   199                           	opt stack 0
   200  000047                     	ds	2
   201  000049                     _S_count:
   202                           	opt stack 0
   203  000049                     	ds	2
   204  00004B                     _N_count:
   205                           	opt stack 0
   206  00004B                     	ds	2
   207  00004D                     _B_count:
   208                           	opt stack 0
   209  00004D                     	ds	2
   210  00004F                     	ds	1
   211  000050                     _LCDinterruptState:
   212                           	opt stack 0
   213  000050                     	ds	1
   214                           tblptru	equ	0xFF8
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           
   218                           	psect	cstackBANK0
   219  000080                     __pcstackBANK0:
   220                           	opt stack 0
   221  000080                     main@input:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x0
   225  000080                     	ds	2
   226                           tblptru	equ	0xFF8
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           
   230                           	psect	cstackCOMRAM
   231  000001                     __pcstackCOMRAM:
   232                           	opt stack 0
   233  000001                     ?i2___lwdiv:
   234                           	opt stack 0
   235  000001                     i2lcdNibble@temp:
   236                           	opt stack 0
   237  000001                     i2___lwdiv@dividend:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x0
   241  000001                     	ds	1
   242  000002                     i2lcdNibble@data:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x1
   246  000002                     	ds	1
   247  000003                     i2lcdInst@data:
   248                           	opt stack 0
   249  000003                     i2putch@data:
   250                           	opt stack 0
   251  000003                     i2___lwdiv@divisor:
   252                           	opt stack 0
   253                           
   254                           ; 2 bytes @ 0x2
   255  000003                     	ds	1
   256  000004                     ??i2_initLCD:
   257                           
   258                           ; 1 bytes @ 0x3
   259  000004                     	ds	1
   260  000005                     i2___lwdiv@quotient:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x4
   264  000005                     	ds	2
   265  000007                     i2___lwdiv@counter:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0x6
   269  000007                     	ds	1
   270  000008                     ?i2___lwmod:
   271                           	opt stack 0
   272  000008                     i2___lwmod@dividend:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x7
   276  000008                     	ds	2
   277  00000A                     i2___lwmod@divisor:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x9
   281  00000A                     	ds	2
   282  00000C                     i2___lwmod@counter:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0xB
   286  00000C                     	ds	1
   287  00000D                     ?i2_printf:
   288                           	opt stack 0
   289  00000D                     i2printf@f:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0xC
   293  00000D                     	ds	4
   294  000011                     ??i2_printf:
   295                           
   296                           ; 1 bytes @ 0x10
   297  000011                     	ds	1
   298  000012                     i2printf@ap:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x11
   302  000012                     	ds	2
   303  000014                     i2printf@flag:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x13
   307  000014                     	ds	1
   308  000015                     i2printf@prec:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x14
   312  000015                     	ds	1
   313  000016                     i2printf@val:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x15
   317  000016                     	ds	2
   318  000018                     i2printf@c:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x17
   322  000018                     	ds	1
   323  000019                     ??_interruptHandler:
   324                           
   325                           ; 1 bytes @ 0x18
   326  000019                     	ds	19
   327  00002C                     interruptHandler@input:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x2B
   331  00002C                     	ds	2
   332  00002E                     ??_I2C_Master_Wait:
   333  00002E                     ?___lwdiv:
   334                           	opt stack 0
   335  00002E                     lcdNibble@temp:
   336                           	opt stack 0
   337  00002E                     ___lwdiv@dividend:
   338                           	opt stack 0
   339  00002E                     I2C_Master_Init@clockFreq:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0x2D
   343  00002E                     	ds	1
   344  00002F                     lcdNibble@data:
   345                           	opt stack 0
   346  00002F                     I2C_Master_Write@byteToWrite:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x2E
   350  00002F                     	ds	1
   351  000030                     lcdInst@data:
   352                           	opt stack 0
   353  000030                     putch@data:
   354                           	opt stack 0
   355  000030                     ___lwdiv@divisor:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x2F
   359  000030                     	ds	1
   360  000031                     ??_initLCD:
   361  000031                     I2C_sendData@char_data:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x30
   365  000031                     	ds	1
   366  000032                     ___lwdiv@counter:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x31
   370  000032                     	ds	1
   371  000033                     ___lwdiv@quotient:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x32
   375  000033                     	ds	2
   376  000035                     ?___lwmod:
   377                           	opt stack 0
   378  000035                     ___lwmod@dividend:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x34
   382  000035                     	ds	2
   383  000037                     ___lwmod@divisor:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x36
   387  000037                     	ds	2
   388  000039                     ___lwmod@counter:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x38
   392  000039                     	ds	1
   393  00003A                     ?_printf:
   394                           	opt stack 0
   395  00003A                     printf@f:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x39
   399  00003A                     	ds	4
   400  00003E                     ??_printf:
   401                           
   402                           ; 1 bytes @ 0x3D
   403  00003E                     	ds	1
   404  00003F                     printf@ap:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x3E
   408  00003F                     	ds	2
   409  000041                     printf@flag:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x40
   413  000041                     	ds	1
   414  000042                     printf@prec:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x41
   418  000042                     	ds	1
   419  000043                     printf@val:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x42
   423  000043                     	ds	2
   424  000045                     printf@c:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x44
   428  000045                     	ds	1
   429  000046                     ??_main:
   430                           
   431                           ; 1 bytes @ 0x45
   432  000046                     	ds	1
   433                           tblptru	equ	0xFF8
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 28 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  input           2    0[BANK0 ] int 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;Total ram usage:        3 bytes
   461 ;; Hardware stack levels required when called:    7
   462 ;; This function calls:
   463 ;;		_I2C_init
   464 ;;		_I2C_sendData
   465 ;;		_initLCD
   466 ;;		_lcdInst
   467 ;;		_printf
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text0
   474  00136A                     __ptext0:
   475                           	opt stack 0
   476  00136A                     _main:
   477                           	opt stack 24
   478                           
   479                           ;main.c: 35: OSCCONbits.IRCF2 = 1;
   480                           
   481                           ;incstack = 0
   482  00136A  8CD3               	bsf	4051,6,c	;volatile
   483                           
   484                           ;main.c: 36: OSCCONbits.IRCF1 = 1;
   485  00136C  8AD3               	bsf	4051,5,c	;volatile
   486                           
   487                           ;main.c: 37: OSCCONbits.IRCF0 = 1;
   488  00136E  88D3               	bsf	4051,4,c	;volatile
   489                           
   490                           ;main.c: 38: OSCCONbits.SCS1 = 1;
   491  001370  82D3               	bsf	4051,1,c	;volatile
   492                           
   493                           ;main.c: 39: OSCTUNEbits.PLLEN = 1;
   494  001372  8C9B               	bsf	3995,6,c	;volatile
   495                           
   496                           ;main.c: 43: LATA = 0x00;
   497  001374  0E00               	movlw	0
   498  001376  6E89               	movwf	3977,c	;volatile
   499                           
   500                           ;main.c: 44: LATB = 0x00;
   501  001378  0E00               	movlw	0
   502  00137A  6E8A               	movwf	3978,c	;volatile
   503                           
   504                           ;main.c: 45: LATC = 0x00;
   505  00137C  0E00               	movlw	0
   506  00137E  6E8B               	movwf	3979,c	;volatile
   507                           
   508                           ;main.c: 46: LATD = 0x00;
   509  001380  0E00               	movlw	0
   510  001382  6E8C               	movwf	3980,c	;volatile
   511                           
   512                           ;main.c: 47: LATE = 0x00;
   513  001384  0E00               	movlw	0
   514  001386  6E8D               	movwf	3981,c	;volatile
   515                           
   516                           ;main.c: 51: TRISA = 0xFF;
   517  001388  6892               	setf	3986,c	;volatile
   518                           
   519                           ;main.c: 52: TRISB = 0xFF;
   520  00138A  6893               	setf	3987,c	;volatile
   521                           
   522                           ;main.c: 53: TRISC = 0x00;
   523  00138C  0E00               	movlw	0
   524  00138E  6E94               	movwf	3988,c	;volatile
   525                           
   526                           ;main.c: 54: TRISD = 0x00;
   527  001390  0E00               	movlw	0
   528  001392  6E95               	movwf	3989,c	;volatile
   529                           
   530                           ;main.c: 55: TRISE = 0x00;
   531  001394  0E00               	movlw	0
   532  001396  6E96               	movwf	3990,c	;volatile
   533                           
   534                           ;main.c: 58: ADCON0 = 0x00;
   535  001398  0E00               	movlw	0
   536  00139A  6EC2               	movwf	4034,c	;volatile
   537                           
   538                           ;main.c: 59: ADCON1 = 0b00001111;
   539  00139C  0E0F               	movlw	15
   540  00139E  6EC1               	movwf	4033,c	;volatile
   541                           
   542                           ;main.c: 60: ADCON2bits.ADFM = 1;
   543  0013A0  8EC0               	bsf	4032,7,c	;volatile
   544                           
   545                           ;main.c: 65: (INTCONbits.GIE = 1);
   546  0013A2  8EF2               	bsf	intcon,7,c	;volatile
   547                           
   548                           ;main.c: 66: initLCD();
   549  0013A4  ECDF  F00A         	call	_initLCD	;wreg free
   550                           
   551                           ;main.c: 67: I2C_init();
   552  0013A8  EC6D  F00B         	call	_I2C_init	;wreg free
   553                           
   554                           ;main.c: 72: LATCbits.LATC0 = 1;
   555  0013AC  808B               	bsf	3979,0,c	;volatile
   556                           
   557                           ;main.c: 73: TRISCbits.RC0 = 0;
   558  0013AE  9094               	bcf	3988,0,c	;volatile
   559                           
   560                           ;main.c: 76: RBIE = 1;
   561  0013B0  86F2               	bsf	intcon,3,c	;volatile
   562                           
   563                           ;main.c: 81: initLCD();
   564  0013B2  ECDF  F00A         	call	_initLCD	;wreg free
   565                           
   566                           ;main.c: 83: I2C_sendData('9');
   567  0013B6  0E39               	movlw	57
   568  0013B8  EC82  F00B         	call	_I2C_sendData
   569                           
   570                           ;main.c: 84: S_count = 0;
   571  0013BC  0E00               	movlw	0
   572  0013BE  6E4A               	movwf	_S_count+1,c
   573  0013C0  0E00               	movlw	0
   574  0013C2  6E49               	movwf	_S_count,c
   575  0013C4                     
   576                           ;main.c: 86: TRISBbits.RB6 = 1;
   577  0013C4  8C93               	bsf	3987,6,c	;volatile
   578                           
   579                           ;main.c: 87: int input = PORTBbits.RB6;
   580  0013C6  AC81               	btfss	3969,6,c	;volatile
   581  0013C8  D003               	goto	u1070
   582  0013CA  6A46               	clrf	??_main& (0+255),c
   583  0013CC  2A46               	incf	??_main& (0+255),f,c
   584  0013CE  D001               	goto	u1078
   585  0013D0                     u1070:
   586  0013D0  6A46               	clrf	??_main& (0+255),c
   587  0013D2                     u1078:
   588  0013D2  5046               	movf	??_main,w,c
   589  0013D4  0100               	movlb	0	; () banked
   590  0013D6  6F80               	movwf	main@input& (0+255),b
   591  0013D8  6B81               	clrf	(main@input+1)& (0+255),b
   592                           
   593                           ; BSR set to: 0
   594                           ;main.c: 88: initLCD();
   595  0013DA  ECDF  F00A         	call	_initLCD	;wreg free
   596                           
   597                           ;main.c: 91: printf("S_count:%d",S_count);
   598  0013DE  0E11               	movlw	low STR_1
   599  0013E0  6E3A               	movwf	printf@f,c
   600  0013E2  0E10               	movlw	high STR_1
   601  0013E4  6E3B               	movwf	printf@f+1,c
   602  0013E6  C049  F03C         	movff	_S_count,?_printf+2
   603  0013EA  C04A  F03D         	movff	_S_count+1,?_printf+3
   604  0013EE  EC0F  F008         	call	_printf	;wreg free
   605                           
   606                           ;main.c: 92: if(S_count >= 4){
   607  0013F2  BE4A               	btfsc	_S_count+1,7,c
   608  0013F4  D009               	goto	l155
   609  0013F6  504A               	movf	_S_count+1,w,c
   610  0013F8  E104               	bnz	u1080
   611  0013FA  0E04               	movlw	4
   612  0013FC  5C49               	subwf	_S_count,w,c
   613  0013FE  A0D8               	btfss	status,0,c
   614  001400  D003               	goto	l155
   615  001402                     u1080:
   616                           
   617                           ;main.c: 93: I2C_sendData('6');
   618  001402  0E36               	movlw	54
   619  001404  EC82  F00B         	call	_I2C_sendData
   620  001408                     l155:
   621                           
   622                           ;main.c: 95: }
   623                           ;main.c: 96: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
   624  001408  0E80               	movlw	128
   625  00140A  ECB6  F00B         	call	_lcdInst
   626  00140E  0E34               	movlw	52
   627  001410  6E46               	movwf	??_main& (0+255),c
   628  001412  0EF2               	movlw	242
   629  001414                     u1107:
   630  001414  2EE8               	decfsz	wreg,f,c
   631  001416  D7FE               	bra	u1107
   632  001418  2E46               	decfsz	??_main& (0+255),f,c
   633  00141A  D7FC               	bra	u1107
   634  00141C  D7D3               	goto	l154
   635  00141E                     __end_of_main:
   636                           	opt stack 0
   637                           tblptru	equ	0xFF8
   638                           intcon	equ	0xFF2
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           status	equ	0xFD8
   642                           
   643 ;; *************** function _printf *****************
   644 ;; Defined at:
   645 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  f               2   57[COMRAM] PTR const unsigned char 
   648 ;;		 -> STR_3(3), STR_2(3), STR_1(11), 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  tmpval          4    0        struct .
   651 ;;  cp              3    0        PTR const unsigned char 
   652 ;;  val             2   66[COMRAM] unsigned int 
   653 ;;  ap              2   62[COMRAM] PTR void [1]
   654 ;;		 -> ?i2_printf(2), ?_printf(2), 
   655 ;;  len             2    0        unsigned int 
   656 ;;  c               1   68[COMRAM] char 
   657 ;;  prec            1   65[COMRAM] char 
   658 ;;  flag            1   64[COMRAM] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  2   57[COMRAM] int 
   661 ;; Registers used:
   662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;Total ram usage:       12 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    6
   675 ;; This function calls:
   676 ;;		___lwdiv
   677 ;;		___lwmod
   678 ;;		_putch
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text1
   685  00101E                     __ptext1:
   686                           	opt stack 0
   687  00101E                     _printf:
   688                           	opt stack 24
   689                           
   690                           ;doprnt.c: 466: va_list ap;
   691                           ;doprnt.c: 499: signed char c;
   692                           ;doprnt.c: 506: signed char prec;
   693                           ;doprnt.c: 508: unsigned char flag;
   694                           ;doprnt.c: 523: union {
   695                           ;doprnt.c: 524: unsigned long vd;
   696                           ;doprnt.c: 525: double integ;
   697                           ;doprnt.c: 526: } tmpval;
   698                           ;doprnt.c: 528: unsigned int val;
   699                           ;doprnt.c: 529: unsigned len;
   700                           ;doprnt.c: 530: const char * cp;
   701                           ;doprnt.c: 533: *ap = __va_start();
   702                           
   703                           ;incstack = 0
   704  00101E  0E3C               	movlw	low (?_printf+2)
   705  001020  6E3F               	movwf	printf@ap,c
   706  001022  0E00               	movlw	high (?_printf+2)
   707  001024  6E40               	movwf	printf@ap+1,c
   708                           
   709                           ;doprnt.c: 536: while(c = *f++) {
   710  001026  D07D               	goto	u990
   711  001028                     
   712                           ;doprnt.c: 538: if(c != '%')
   713  001028  0E25               	movlw	37
   714  00102A  1845               	xorwf	printf@c,w,c
   715  00102C  B4D8               	btfsc	status,2,c
   716  00102E  D004               	goto	l230
   717                           
   718                           ;doprnt.c: 540: {
   719                           ;doprnt.c: 541: (putch(c) );
   720  001030  5045               	movf	printf@c,w,c
   721  001032  ECAC  F00B         	call	_putch
   722                           
   723                           ;doprnt.c: 542: continue;
   724  001036  D075               	goto	u990
   725  001038                     l230:
   726                           
   727                           ;doprnt.c: 543: }
   728                           ;doprnt.c: 548: flag = 0;
   729  001038  0E00               	movlw	0
   730  00103A  6E41               	movwf	printf@flag,c
   731                           
   732                           ;doprnt.c: 822: }
   733                           
   734                           ;doprnt.c: 813: continue;
   735                           
   736                           ;doprnt.c: 802: default:
   737                           
   738                           ;doprnt.c: 698: case 'i':
   739                           ;doprnt.c: 699: break;
   740                           
   741                           ;doprnt.c: 697: case 'd':
   742                           
   743                           ;doprnt.c: 638: goto alldone;
   744                           
   745                           ;doprnt.c: 637: case 0:
   746                           
   747                           ;doprnt.c: 635: switch(c = *f++) {
   748  00103C  C03A  FFF6         	movff	printf@f,tblptrl
   749  001040  C03B  FFF7         	movff	printf@f+1,tblptrh
   750  001044  4A3A               	infsnz	printf@f,f,c
   751  001046  2A3B               	incf	printf@f+1,f,c
   752  001048                     	if	0	;tblptru may be non-zero
   753  001048                     	endif
   754  001048                     	if	0	;tblptru may be non-zero
   755  001048                     	endif
   756  001048  0008               	tblrd		*
   757  00104A  CFF5 F045          	movff	tablat,printf@c
   758  00104E  5045               	movf	printf@c,w,c
   759                           
   760                           ; Switch size 1, requested type "space"
   761                           ; Number of cases is 3, Range of values is 0 to 105
   762                           ; switch strategies available:
   763                           ; Name         Instructions Cycles
   764                           ; simple_byte           10     6 (average)
   765                           ;	Chosen strategy is simple_byte
   766  001050  0A00               	xorlw	0	; case 0
   767  001052  B4D8               	btfsc	status,2,c
   768  001054  0012               	return	
   769  001056  0A64               	xorlw	100	; case 100
   770  001058  B4D8               	btfsc	status,2,c
   771  00105A  D003               	goto	l236
   772  00105C  0A0D               	xorlw	13	; case 105
   773  00105E  A4D8               	btfss	status,2,c
   774  001060  D060               	goto	u990
   775  001062                     l236:
   776                           
   777                           ;doprnt.c: 1253: {
   778                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   779  001062  C03F  FFD9         	movff	printf@ap,fsr2l
   780  001066  C040  FFDA         	movff	printf@ap+1,fsr2h
   781  00106A  CFDE F043          	movff	postinc2,printf@val
   782  00106E  CFDD F044          	movff	postdec2,printf@val+1
   783  001072  0E02               	movlw	2
   784  001074  263F               	addwf	printf@ap,f,c
   785  001076  0E00               	movlw	0
   786  001078  2240               	addwfc	printf@ap+1,f,c
   787                           
   788                           ;doprnt.c: 1261: if((int)val < 0) {
   789  00107A  AE44               	btfss	printf@val+1,7,c
   790  00107C  D006               	goto	l238
   791                           
   792                           ;doprnt.c: 1262: flag |= 0x03;
   793  00107E  0E03               	movlw	3
   794  001080  1241               	iorwf	printf@flag,f,c
   795                           
   796                           ;doprnt.c: 1263: val = -val;
   797  001082  6C43               	negf	printf@val,c
   798  001084  1E44               	comf	printf@val+1,f,c
   799  001086  B0D8               	btfsc	status,0,c
   800  001088  2A44               	incf	printf@val+1,f,c
   801  00108A                     l238:
   802                           
   803                           ;doprnt.c: 1264: }
   804                           ;doprnt.c: 1266: }
   805                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   806  00108A  0E01               	movlw	1
   807  00108C  6E45               	movwf	printf@c,c
   808  00108E                     l1831:
   809  00108E  0E05               	movlw	5
   810  001090  1845               	xorwf	printf@c,w,c
   811  001092  B4D8               	btfsc	status,2,c
   812  001094  D012               	goto	u970
   813                           
   814                           ;doprnt.c: 1306: if(val < dpowers[c])
   815  001096  5045               	movf	printf@c,w,c
   816  001098  0D02               	mullw	2
   817  00109A  0E01               	movlw	low _dpowers
   818  00109C  24F3               	addwf	prodl,w,c
   819  00109E  6EF6               	movwf	tblptrl,c
   820  0010A0  0E10               	movlw	high _dpowers
   821  0010A2  20F4               	addwfc	prodh,w,c
   822  0010A4  6EF7               	movwf	tblptrh,c
   823  0010A6                     	if	0	;There are less than 3 active tblptr bytes
   824  0010A6                     	endif
   825  0010A6  0009               	tblrd		*+
   826  0010A8  50F5               	movf	tablat,w,c
   827  0010AA  5C43               	subwf	printf@val,w,c
   828  0010AC  0009               	tblrd		*+
   829  0010AE  50F5               	movf	tablat,w,c
   830  0010B0  5844               	subwfb	printf@val+1,w,c
   831  0010B2  A0D8               	btfss	status,0,c
   832  0010B4  D002               	goto	u970
   833                           
   834                           ;doprnt.c: 1307: break;
   835  0010B6  2A45               	incf	printf@c,f,c
   836  0010B8  D7EA               	goto	l1831
   837  0010BA                     u970:
   838                           
   839                           ;doprnt.c: 1422: {
   840                           ;doprnt.c: 1438: if(flag & 0x03)
   841  0010BA  C041  F03E         	movff	printf@flag,??_printf
   842  0010BE  0E03               	movlw	3
   843  0010C0  163E               	andwf	??_printf,f,c
   844  0010C2  B4D8               	btfsc	status,2,c
   845  0010C4  D003               	goto	l242
   846                           
   847                           ;doprnt.c: 1439: (putch('-') );
   848  0010C6  0E2D               	movlw	45
   849  0010C8  ECAC  F00B         	call	_putch
   850  0010CC                     l242:
   851                           
   852                           ;doprnt.c: 1469: }
   853                           ;doprnt.c: 1472: prec = c;
   854  0010CC  C045  F042         	movff	printf@c,printf@prec
   855                           
   856                           ;doprnt.c: 1474: while(prec--) {
   857  0010D0  D024               	goto	l243
   858  0010D2                     
   859                           ;doprnt.c: 1478: {
   860                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   861  0010D2  5042               	movf	printf@prec,w,c
   862  0010D4  0D02               	mullw	2
   863  0010D6  0E01               	movlw	low _dpowers
   864  0010D8  24F3               	addwf	prodl,w,c
   865  0010DA  6EF6               	movwf	tblptrl,c
   866  0010DC  0E10               	movlw	high _dpowers
   867  0010DE  20F4               	addwfc	prodh,w,c
   868  0010E0  6EF7               	movwf	tblptrh,c
   869  0010E2                     	if	0	;There are less than 3 active tblptr bytes
   870  0010E2                     	endif
   871  0010E2  0009               	tblrd		*+
   872  0010E4  CFF5 F030          	movff	tablat,___lwdiv@divisor
   873  0010E8  000A               	tblrd		*-
   874  0010EA  CFF5 F031          	movff	tablat,___lwdiv@divisor+1
   875  0010EE  C043  F02E         	movff	printf@val,___lwdiv@dividend
   876  0010F2  C044  F02F         	movff	printf@val+1,___lwdiv@dividend+1
   877  0010F6  EC8D  F00A         	call	___lwdiv	;wreg free
   878  0010FA  C02E  F035         	movff	?___lwdiv,___lwmod@dividend
   879  0010FE  C02F  F036         	movff	?___lwdiv+1,___lwmod@dividend+1
   880  001102  0E00               	movlw	0
   881  001104  6E38               	movwf	___lwmod@divisor+1,c
   882  001106  0E0A               	movlw	10
   883  001108  6E37               	movwf	___lwmod@divisor,c
   884  00110A  EC2B  F00B         	call	___lwmod	;wreg free
   885  00110E  5035               	movf	?___lwmod,w,c
   886  001110  0F30               	addlw	48
   887  001112  6E45               	movwf	printf@c,c
   888                           
   889                           ;doprnt.c: 1523: }
   890                           ;doprnt.c: 1524: (putch(c) );
   891  001114  5045               	movf	printf@c,w,c
   892  001116  ECAC  F00B         	call	_putch
   893  00111A                     l243:
   894  00111A  0642               	decf	printf@prec,f,c
   895  00111C  2842               	incf	printf@prec,w,c
   896  00111E  A4D8               	btfss	status,2,c
   897  001120  D7D8               	goto	l244
   898  001122                     u990:
   899  001122  C03A  FFF6         	movff	printf@f,tblptrl
   900  001126  C03B  FFF7         	movff	printf@f+1,tblptrh
   901  00112A  4A3A               	infsnz	printf@f,f,c
   902  00112C  2A3B               	incf	printf@f+1,f,c
   903  00112E                     	if	0	;tblptru may be non-zero
   904  00112E                     	endif
   905  00112E                     	if	0	;tblptru may be non-zero
   906  00112E                     	endif
   907  00112E  0008               	tblrd		*
   908  001130  CFF5 F045          	movff	tablat,printf@c
   909  001134  5045               	movf	printf@c,w,c
   910  001136  B4D8               	btfsc	status,2,c
   911  001138  0012               	return	
   912  00113A  D776               	goto	l229
   913  00113C                     __end_of_printf:
   914                           	opt stack 0
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           prodh	equ	0xFF4
   920                           prodl	equ	0xFF3
   921                           intcon	equ	0xFF2
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           postinc2	equ	0xFDE
   925                           postdec2	equ	0xFDD
   926                           fsr2h	equ	0xFDA
   927                           fsr2l	equ	0xFD9
   928                           status	equ	0xFD8
   929                           
   930 ;; *************** function _putch *****************
   931 ;; Defined at:
   932 ;;		line 24 in file "lcd.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  data            1    wreg     unsigned char 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  data            1   47[COMRAM] unsigned char 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;Total ram usage:        1 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    5
   953 ;; This function calls:
   954 ;;		_lcdNibble
   955 ;; This function is called by:
   956 ;;		_printf
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text2
   961  001758                     __ptext2:
   962                           	opt stack 0
   963  001758                     _putch:
   964                           	opt stack 24
   965                           
   966                           ;incstack = 0
   967                           ;putch@data stored from wreg
   968  001758  6E30               	movwf	putch@data,c
   969                           
   970                           ;lcd.c: 32: LATDbits.LATD2 = 1;
   971  00175A  848C               	bsf	3980,2,c	;volatile
   972                           
   973                           ;lcd.c: 33: lcdNibble(data);
   974  00175C  5030               	movf	putch@data,w,c
   975  00175E  EC0F  F00A         	call	_lcdNibble
   976                           
   977                           ;lcd.c: 34: _delay((unsigned long)((100)*(32000000/4000000.0)));
   978  001762  0EA0               	movlw	160
   979  001764                     u1117:
   980  001764  D000               	nop2	
   981  001766  2EE8               	decfsz	wreg,f,c
   982  001768  D7FD               	bra	u1117
   983  00176A  0012               	return		;funcret
   984  00176C                     __end_of_putch:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           prodh	equ	0xFF4
   991                           prodl	equ	0xFF3
   992                           intcon	equ	0xFF2
   993                           postinc0	equ	0xFEE
   994                           wreg	equ	0xFE8
   995                           postinc2	equ	0xFDE
   996                           postdec2	equ	0xFDD
   997                           fsr2h	equ	0xFDA
   998                           fsr2l	equ	0xFD9
   999                           status	equ	0xFD8
  1000                           
  1001 ;; *************** function ___lwmod *****************
  1002 ;; Defined at:
  1003 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwmod.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  dividend        2   52[COMRAM] unsigned int 
  1006 ;;  divisor         2   54[COMRAM] unsigned int 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  counter         1   56[COMRAM] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  2   52[COMRAM] unsigned int 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;Total ram usage:        5 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    4
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_printf
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text3
  1033  001656                     __ptext3:
  1034                           	opt stack 0
  1035  001656                     ___lwmod:
  1036                           	opt stack 25
  1037                           
  1038                           ;incstack = 0
  1039  001656  5037               	movf	___lwmod@divisor,w,c
  1040  001658  1038               	iorwf	___lwmod@divisor+1,w,c
  1041  00165A  B4D8               	btfsc	status,2,c
  1042  00165C  D018               	goto	l666
  1043  00165E  0E01               	movlw	1
  1044  001660  6E39               	movwf	___lwmod@counter,c
  1045  001662  D004               	goto	l661
  1046  001664  90D8               	bcf	status,0,c
  1047  001666  3637               	rlcf	___lwmod@divisor,f,c
  1048  001668  3638               	rlcf	___lwmod@divisor+1,f,c
  1049  00166A  2A39               	incf	___lwmod@counter,f,c
  1050  00166C                     l661:
  1051  00166C  AE38               	btfss	___lwmod@divisor+1,7,c
  1052  00166E  D7FA               	goto	l662
  1053  001670                     u910:
  1054  001670  5037               	movf	___lwmod@divisor,w,c
  1055  001672  5C35               	subwf	___lwmod@dividend,w,c
  1056  001674  5038               	movf	___lwmod@divisor+1,w,c
  1057  001676  5836               	subwfb	___lwmod@dividend+1,w,c
  1058  001678  A0D8               	btfss	status,0,c
  1059  00167A  D004               	goto	l665
  1060  00167C  5037               	movf	___lwmod@divisor,w,c
  1061  00167E  5E35               	subwf	___lwmod@dividend,f,c
  1062  001680  5038               	movf	___lwmod@divisor+1,w,c
  1063  001682  5A36               	subwfb	___lwmod@dividend+1,f,c
  1064  001684                     l665:
  1065  001684  90D8               	bcf	status,0,c
  1066  001686  3238               	rrcf	___lwmod@divisor+1,f,c
  1067  001688  3237               	rrcf	___lwmod@divisor,f,c
  1068  00168A  2E39               	decfsz	___lwmod@counter,f,c
  1069  00168C  D7F1               	goto	u910
  1070  00168E                     l666:
  1071  00168E  C035  F035         	movff	___lwmod@dividend,?___lwmod
  1072  001692  C036  F036         	movff	___lwmod@dividend+1,?___lwmod+1
  1073  001696  0012               	return		;funcret
  1074  001698                     __end_of___lwmod:
  1075                           	opt stack 0
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           prodh	equ	0xFF4
  1081                           prodl	equ	0xFF3
  1082                           intcon	equ	0xFF2
  1083                           postinc0	equ	0xFEE
  1084                           wreg	equ	0xFE8
  1085                           postinc2	equ	0xFDE
  1086                           postdec2	equ	0xFDD
  1087                           fsr2h	equ	0xFDA
  1088                           fsr2l	equ	0xFD9
  1089                           status	equ	0xFD8
  1090                           
  1091 ;; *************** function ___lwdiv *****************
  1092 ;; Defined at:
  1093 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  dividend        2   45[COMRAM] unsigned int 
  1096 ;;  divisor         2   47[COMRAM] unsigned int 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  quotient        2   50[COMRAM] unsigned int 
  1099 ;;  counter         1   49[COMRAM] unsigned char 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2   45[COMRAM] unsigned int 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;Total ram usage:        7 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    4
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_printf
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text4
  1124  00151A                     __ptext4:
  1125                           	opt stack 0
  1126  00151A                     ___lwdiv:
  1127                           	opt stack 25
  1128                           
  1129                           ;incstack = 0
  1130  00151A  0E00               	movlw	0
  1131  00151C  6E34               	movwf	___lwdiv@quotient+1,c
  1132  00151E  0E00               	movlw	0
  1133  001520  6E33               	movwf	___lwdiv@quotient,c
  1134  001522  5030               	movf	___lwdiv@divisor,w,c
  1135  001524  1031               	iorwf	___lwdiv@divisor+1,w,c
  1136  001526  B4D8               	btfsc	status,2,c
  1137  001528  D01C               	goto	l656
  1138  00152A  0E01               	movlw	1
  1139  00152C  6E32               	movwf	___lwdiv@counter,c
  1140  00152E  D004               	goto	l651
  1141  001530  90D8               	bcf	status,0,c
  1142  001532  3630               	rlcf	___lwdiv@divisor,f,c
  1143  001534  3631               	rlcf	___lwdiv@divisor+1,f,c
  1144  001536  2A32               	incf	___lwdiv@counter,f,c
  1145  001538                     l651:
  1146  001538  AE31               	btfss	___lwdiv@divisor+1,7,c
  1147  00153A  D7FA               	goto	l652
  1148  00153C                     u880:
  1149  00153C  90D8               	bcf	status,0,c
  1150  00153E  3633               	rlcf	___lwdiv@quotient,f,c
  1151  001540  3634               	rlcf	___lwdiv@quotient+1,f,c
  1152  001542  5030               	movf	___lwdiv@divisor,w,c
  1153  001544  5C2E               	subwf	___lwdiv@dividend,w,c
  1154  001546  5031               	movf	___lwdiv@divisor+1,w,c
  1155  001548  582F               	subwfb	___lwdiv@dividend+1,w,c
  1156  00154A  A0D8               	btfss	status,0,c
  1157  00154C  D005               	goto	l655
  1158  00154E  5030               	movf	___lwdiv@divisor,w,c
  1159  001550  5E2E               	subwf	___lwdiv@dividend,f,c
  1160  001552  5031               	movf	___lwdiv@divisor+1,w,c
  1161  001554  5A2F               	subwfb	___lwdiv@dividend+1,f,c
  1162  001556  8033               	bsf	___lwdiv@quotient,0,c
  1163  001558                     l655:
  1164  001558  90D8               	bcf	status,0,c
  1165  00155A  3231               	rrcf	___lwdiv@divisor+1,f,c
  1166  00155C  3230               	rrcf	___lwdiv@divisor,f,c
  1167  00155E  2E32               	decfsz	___lwdiv@counter,f,c
  1168  001560  D7ED               	goto	u880
  1169  001562                     l656:
  1170  001562  C033  F02E         	movff	___lwdiv@quotient,?___lwdiv
  1171  001566  C034  F02F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1172  00156A  0012               	return		;funcret
  1173  00156C                     __end_of___lwdiv:
  1174                           	opt stack 0
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           prodh	equ	0xFF4
  1180                           prodl	equ	0xFF3
  1181                           intcon	equ	0xFF2
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           postinc2	equ	0xFDE
  1185                           postdec2	equ	0xFDD
  1186                           fsr2h	equ	0xFDA
  1187                           fsr2l	equ	0xFD9
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _initLCD *****************
  1191 ;; Defined at:
  1192 ;;		line 60 in file "lcd.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;Total ram usage:        1 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    6
  1213 ;; This function calls:
  1214 ;;		_lcdInst
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text5
  1221  0015BE                     __ptext5:
  1222                           	opt stack 0
  1223  0015BE                     _initLCD:
  1224                           	opt stack 24
  1225                           
  1226                           ;lcd.c: 68: _delay((unsigned long)((15)*(32000000/4000.0)));
  1227                           
  1228                           ;incstack = 0
  1229  0015BE  0E9C               	movlw	156
  1230  0015C0  6E31               	movwf	??_initLCD& (0+255),c
  1231  0015C2  0ED7               	movlw	215
  1232  0015C4                     u1127:
  1233  0015C4  2EE8               	decfsz	wreg,f,c
  1234  0015C6  D7FE               	bra	u1127
  1235  0015C8  2E31               	decfsz	??_initLCD& (0+255),f,c
  1236  0015CA  D7FC               	bra	u1127
  1237  0015CC  F000               	nop	
  1238                           
  1239                           ;lcd.c: 69: lcdInst(0b00110011);
  1240  0015CE  0E33               	movlw	51
  1241  0015D0  ECB6  F00B         	call	_lcdInst
  1242                           
  1243                           ;lcd.c: 70: lcdInst(0b00110010);
  1244  0015D4  0E32               	movlw	50
  1245  0015D6  ECB6  F00B         	call	_lcdInst
  1246                           
  1247                           ;lcd.c: 71: lcdInst(0b00101000);
  1248  0015DA  0E28               	movlw	40
  1249  0015DC  ECB6  F00B         	call	_lcdInst
  1250                           
  1251                           ;lcd.c: 72: lcdInst(0b00001111);
  1252  0015E0  0E0F               	movlw	15
  1253  0015E2  ECB6  F00B         	call	_lcdInst
  1254                           
  1255                           ;lcd.c: 73: lcdInst(0b00000110);
  1256  0015E6  0E06               	movlw	6
  1257  0015E8  ECB6  F00B         	call	_lcdInst
  1258                           
  1259                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(32000000/4000.0)));;
  1260  0015EC  0E01               	movlw	1
  1261  0015EE  ECB6  F00B         	call	_lcdInst
  1262  0015F2  0E9C               	movlw	156
  1263  0015F4  6E31               	movwf	??_initLCD& (0+255),c
  1264  0015F6  0ED7               	movlw	215
  1265  0015F8                     u1137:
  1266  0015F8  2EE8               	decfsz	wreg,f,c
  1267  0015FA  D7FE               	bra	u1137
  1268  0015FC  2E31               	decfsz	??_initLCD& (0+255),f,c
  1269  0015FE  D7FC               	bra	u1137
  1270  001600  F000               	nop	
  1271                           
  1272                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  1273  001602  0E0F               	movlw	15
  1274  001604  ECB6  F00B         	call	_lcdInst
  1275  001608  0012               	return		;funcret
  1276  00160A                     __end_of_initLCD:
  1277                           	opt stack 0
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           prodh	equ	0xFF4
  1283                           prodl	equ	0xFF3
  1284                           intcon	equ	0xFF2
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           postinc2	equ	0xFDE
  1288                           postdec2	equ	0xFDD
  1289                           fsr2h	equ	0xFDA
  1290                           fsr2l	equ	0xFD9
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function _lcdInst *****************
  1294 ;; Defined at:
  1295 ;;		line 11 in file "lcd.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  data            1    wreg     unsigned char 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  data            1   47[COMRAM] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;Total ram usage:        1 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    5
  1316 ;; This function calls:
  1317 ;;		_lcdNibble
  1318 ;; This function is called by:
  1319 ;;		_initLCD
  1320 ;;		_main
  1321 ;;		_lcd_set_cursor
  1322 ;;		_lcd_shift_cursor
  1323 ;;		_lcd_shift_display
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text6
  1328  00176C                     __ptext6:
  1329                           	opt stack 0
  1330  00176C                     _lcdInst:
  1331                           	opt stack 25
  1332                           
  1333                           ;incstack = 0
  1334                           ;lcdInst@data stored from wreg
  1335  00176C  6E30               	movwf	lcdInst@data,c
  1336                           
  1337                           ;lcd.c: 19: LATDbits.LATD2 = 0;
  1338  00176E  948C               	bcf	3980,2,c	;volatile
  1339                           
  1340                           ;lcd.c: 20: lcdNibble(data);
  1341  001770  5030               	movf	lcdInst@data,w,c
  1342  001772  EC0F  F00A         	call	_lcdNibble
  1343                           
  1344                           ;lcd.c: 21: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1345  001776  0EA0               	movlw	160
  1346  001778                     u1147:
  1347  001778  D000               	nop2	
  1348  00177A  2EE8               	decfsz	wreg,f,c
  1349  00177C  D7FD               	bra	u1147
  1350  00177E  0012               	return		;funcret
  1351  001780                     __end_of_lcdInst:
  1352                           	opt stack 0
  1353                           tblptru	equ	0xFF8
  1354                           tblptrh	equ	0xFF7
  1355                           tblptrl	equ	0xFF6
  1356                           tablat	equ	0xFF5
  1357                           prodh	equ	0xFF4
  1358                           prodl	equ	0xFF3
  1359                           intcon	equ	0xFF2
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           postinc2	equ	0xFDE
  1363                           postdec2	equ	0xFDD
  1364                           fsr2h	equ	0xFDA
  1365                           fsr2l	equ	0xFD9
  1366                           status	equ	0xFD8
  1367                           
  1368 ;; *************** function _lcdNibble *****************
  1369 ;; Defined at:
  1370 ;;		line 37 in file "lcd.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  data            1    wreg     unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  data            1   46[COMRAM] unsigned char 
  1375 ;;  temp            1   45[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;Total ram usage:        2 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    4
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_lcdInst
  1396 ;;		_putch
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text7
  1401  00141E                     __ptext7:
  1402                           	opt stack 0
  1403  00141E                     _lcdNibble:
  1404                           	opt stack 24
  1405                           
  1406                           ;incstack = 0
  1407                           ;lcdNibble@data stored from wreg
  1408  00141E  6E2F               	movwf	lcdNibble@data,c
  1409                           
  1410                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
  1411  001420  502F               	movf	lcdNibble@data,w,c
  1412  001422  0BF0               	andlw	240
  1413  001424  6E2E               	movwf	lcdNibble@temp,c
  1414                           
  1415                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
  1416  001426  508C               	movf	3980,w,c	;volatile
  1417  001428  0B0F               	andlw	15
  1418  00142A  6E8C               	movwf	3980,c	;volatile
  1419                           
  1420                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
  1421  00142C  502E               	movf	lcdNibble@temp,w,c
  1422  00142E  108C               	iorwf	3980,w,c	;volatile
  1423  001430  6E8C               	movwf	3980,c	;volatile
  1424                           
  1425                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  1426  001432  0E00               	movlw	0
  1427  001434  BEF2               	btfsc	intcon,7,c	;volatile
  1428  001436  0E01               	movlw	1
  1429  001438  6E50               	movwf	_LCDinterruptState,c
  1430  00143A  9EF2               	bcf	intcon,7,c	;volatile
  1431  00143C  868C               	bsf	3980,3,c	;volatile
  1432  00143E  0E42               	movlw	66
  1433  001440                     u1157:
  1434  001440  2EE8               	decfsz	wreg,f,c
  1435  001442  D7FE               	bra	u1157
  1436  001444  D000               	nop2	
  1437  001446  968C               	bcf	3980,3,c	;volatile
  1438  001448  0EA0               	movlw	160
  1439  00144A                     u1167:
  1440  00144A  D000               	nop2	
  1441  00144C  2EE8               	decfsz	wreg,f,c
  1442  00144E  D7FD               	bra	u1167
  1443  001450  B050               	btfsc	_LCDinterruptState,0,c
  1444  001452  D002               	bra	u835
  1445  001454  9EF2               	bcf	intcon,7,c	;volatile
  1446  001456  D001               	bra	u836
  1447  001458                     u835:
  1448  001458  8EF2               	bsf	intcon,7,c	;volatile
  1449  00145A                     u836:
  1450                           
  1451                           ;lcd.c: 52: data = (unsigned char) (data << 4);
  1452  00145A  382F               	swapf	lcdNibble@data,w,c
  1453  00145C  0BF0               	andlw	240
  1454  00145E  6E2F               	movwf	lcdNibble@data,c
  1455                           
  1456                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
  1457  001460  502F               	movf	lcdNibble@data,w,c
  1458  001462  0BF0               	andlw	240
  1459  001464  6E2E               	movwf	lcdNibble@temp,c
  1460                           
  1461                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
  1462  001466  508C               	movf	3980,w,c	;volatile
  1463  001468  0B0F               	andlw	15
  1464  00146A  6E8C               	movwf	3980,c	;volatile
  1465                           
  1466                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
  1467  00146C  502E               	movf	lcdNibble@temp,w,c
  1468  00146E  108C               	iorwf	3980,w,c	;volatile
  1469  001470  6E8C               	movwf	3980,c	;volatile
  1470                           
  1471                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  1472  001472  0E00               	movlw	0
  1473  001474  BEF2               	btfsc	intcon,7,c	;volatile
  1474  001476  0E01               	movlw	1
  1475  001478  6E50               	movwf	_LCDinterruptState,c
  1476  00147A  9EF2               	bcf	intcon,7,c	;volatile
  1477  00147C  868C               	bsf	3980,3,c	;volatile
  1478  00147E  0E42               	movlw	66
  1479  001480                     u1177:
  1480  001480  2EE8               	decfsz	wreg,f,c
  1481  001482  D7FE               	bra	u1177
  1482  001484  D000               	nop2	
  1483  001486  968C               	bcf	3980,3,c	;volatile
  1484  001488  0EA0               	movlw	160
  1485  00148A                     u1187:
  1486  00148A  D000               	nop2	
  1487  00148C  2EE8               	decfsz	wreg,f,c
  1488  00148E  D7FD               	bra	u1187
  1489  001490  B050               	btfsc	_LCDinterruptState,0,c
  1490  001492  D002               	bra	u845
  1491  001494  9EF2               	bcf	intcon,7,c	;volatile
  1492  001496  D001               	bra	u846
  1493  001498                     u845:
  1494  001498  8EF2               	bsf	intcon,7,c	;volatile
  1495  00149A                     u846:
  1496  00149A  0012               	return		;funcret
  1497  00149C                     __end_of_lcdNibble:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           prodh	equ	0xFF4
  1504                           prodl	equ	0xFF3
  1505                           intcon	equ	0xFF2
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           postinc2	equ	0xFDE
  1509                           postdec2	equ	0xFDD
  1510                           fsr2h	equ	0xFDA
  1511                           fsr2l	equ	0xFD9
  1512                           status	equ	0xFD8
  1513                           
  1514 ;; *************** function _I2C_sendData *****************
  1515 ;; Defined at:
  1516 ;;		line 188 in file "main.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  char_data       1    wreg     unsigned char 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  char_data       1   48[COMRAM] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;Total ram usage:        1 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    6
  1537 ;; This function calls:
  1538 ;;		_I2C_Master_Start
  1539 ;;		_I2C_Master_Stop
  1540 ;;		_I2C_Master_Write
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text8
  1547  001704                     __ptext8:
  1548                           	opt stack 0
  1549  001704                     _I2C_sendData:
  1550                           	opt stack 24
  1551                           
  1552                           ;incstack = 0
  1553                           ;I2C_sendData@char_data stored from wreg
  1554  001704  6E31               	movwf	I2C_sendData@char_data,c
  1555                           
  1556                           ;main.c: 189: I2C_Master_Start();
  1557  001706  ECE6  F00B         	call	_I2C_Master_Start	;wreg free
  1558                           
  1559                           ;main.c: 190: I2C_Master_Write(0b00010000);
  1560  00170A  0E00               	movlw	0
  1561  00170C  6E30               	movwf	I2C_Master_Write@byteToWrite+1,c
  1562  00170E  0E10               	movlw	16
  1563  001710  6E2F               	movwf	I2C_Master_Write@byteToWrite,c
  1564  001712  ECDD  F00B         	call	_I2C_Master_Write	;wreg free
  1565                           
  1566                           ;main.c: 191: I2C_Master_Write(char_data);
  1567  001716  C031  F02F         	movff	I2C_sendData@char_data,I2C_Master_Write@byteToWrite
  1568  00171A  6A30               	clrf	I2C_Master_Write@byteToWrite+1,c
  1569  00171C  ECDD  F00B         	call	_I2C_Master_Write	;wreg free
  1570                           
  1571                           ;main.c: 192: I2C_Master_Stop();
  1572  001720  ECE2  F00B         	call	_I2C_Master_Stop	;wreg free
  1573  001724  0012               	return		;funcret
  1574  001726                     __end_of_I2C_sendData:
  1575                           	opt stack 0
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           prodh	equ	0xFF4
  1581                           prodl	equ	0xFF3
  1582                           intcon	equ	0xFF2
  1583                           postinc0	equ	0xFEE
  1584                           wreg	equ	0xFE8
  1585                           postinc2	equ	0xFDE
  1586                           postdec2	equ	0xFDD
  1587                           fsr2h	equ	0xFDA
  1588                           fsr2l	equ	0xFD9
  1589                           status	equ	0xFD8
  1590                           
  1591 ;; *************** function _I2C_init *****************
  1592 ;; Defined at:
  1593 ;;		line 182 in file "main.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    6
  1614 ;; This function calls:
  1615 ;;		_I2C_Master_Init
  1616 ;;		_I2C_Master_Start
  1617 ;;		_I2C_Master_Stop
  1618 ;;		_I2C_Master_Write
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text9
  1625  0016DA                     __ptext9:
  1626                           	opt stack 0
  1627  0016DA                     _I2C_init:
  1628                           	opt stack 24
  1629                           
  1630                           ;main.c: 183: I2C_Master_Init(100000);
  1631                           
  1632                           ;incstack = 0
  1633  0016DA  0EA0               	movlw	160
  1634  0016DC  6E2E               	movwf	I2C_Master_Init@clockFreq,c
  1635  0016DE  0E86               	movlw	134
  1636  0016E0  6E2F               	movwf	I2C_Master_Init@clockFreq+1,c
  1637  0016E2  0E01               	movlw	1
  1638  0016E4  6E30               	movwf	I2C_Master_Init@clockFreq+2,c
  1639  0016E6  0E00               	movlw	0
  1640  0016E8  6E31               	movwf	I2C_Master_Init@clockFreq+3,c
  1641  0016EA  ECA0  F00B         	call	_I2C_Master_Init	;wreg free
  1642                           
  1643                           ;main.c: 184: I2C_Master_Start();
  1644  0016EE  ECE6  F00B         	call	_I2C_Master_Start	;wreg free
  1645                           
  1646                           ;main.c: 185: I2C_Master_Write(0b00010000);
  1647  0016F2  0E00               	movlw	0
  1648  0016F4  6E30               	movwf	I2C_Master_Write@byteToWrite+1,c
  1649  0016F6  0E10               	movlw	16
  1650  0016F8  6E2F               	movwf	I2C_Master_Write@byteToWrite,c
  1651  0016FA  ECDD  F00B         	call	_I2C_Master_Write	;wreg free
  1652                           
  1653                           ;main.c: 186: I2C_Master_Stop();
  1654  0016FE  ECE2  F00B         	call	_I2C_Master_Stop	;wreg free
  1655  001702  0012               	return		;funcret
  1656  001704                     __end_of_I2C_init:
  1657                           	opt stack 0
  1658                           tblptru	equ	0xFF8
  1659                           tblptrh	equ	0xFF7
  1660                           tblptrl	equ	0xFF6
  1661                           tablat	equ	0xFF5
  1662                           prodh	equ	0xFF4
  1663                           prodl	equ	0xFF3
  1664                           intcon	equ	0xFF2
  1665                           postinc0	equ	0xFEE
  1666                           wreg	equ	0xFE8
  1667                           postinc2	equ	0xFDE
  1668                           postdec2	equ	0xFDD
  1669                           fsr2h	equ	0xFDA
  1670                           fsr2l	equ	0xFD9
  1671                           status	equ	0xFD8
  1672                           
  1673 ;; *************** function _I2C_Master_Write *****************
  1674 ;; Defined at:
  1675 ;;		line 109 in file "I2C.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  byteToWrite     2   46[COMRAM] unsigned int 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;Total ram usage:        2 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    5
  1696 ;; This function calls:
  1697 ;;		_I2C_Master_Wait
  1698 ;; This function is called by:
  1699 ;;		_I2C_init
  1700 ;;		_I2C_sendData
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text10
  1705  0017BA                     __ptext10:
  1706                           	opt stack 0
  1707  0017BA                     _I2C_Master_Write:
  1708                           	opt stack 24
  1709                           
  1710                           ;I2C.c: 117: I2C_Master_Wait();
  1711                           
  1712                           ;incstack = 0
  1713  0017BA  ECD4  F00B         	call	_I2C_Master_Wait	;wreg free
  1714                           
  1715                           ;I2C.c: 118: SSPBUF = byteToWrite;
  1716  0017BE  C02F  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  1717  0017C2  0012               	return		;funcret
  1718  0017C4                     __end_of_I2C_Master_Write:
  1719                           	opt stack 0
  1720                           tblptru	equ	0xFF8
  1721                           tblptrh	equ	0xFF7
  1722                           tblptrl	equ	0xFF6
  1723                           tablat	equ	0xFF5
  1724                           prodh	equ	0xFF4
  1725                           prodl	equ	0xFF3
  1726                           intcon	equ	0xFF2
  1727                           postinc0	equ	0xFEE
  1728                           wreg	equ	0xFE8
  1729                           postinc2	equ	0xFDE
  1730                           postdec2	equ	0xFDD
  1731                           fsr2h	equ	0xFDA
  1732                           fsr2l	equ	0xFD9
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function _I2C_Master_Stop *****************
  1736 ;; Defined at:
  1737 ;;		line 96 in file "I2C.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    5
  1758 ;; This function calls:
  1759 ;;		_I2C_Master_Wait
  1760 ;; This function is called by:
  1761 ;;		_I2C_init
  1762 ;;		_I2C_sendData
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text11
  1767  0017C4                     __ptext11:
  1768                           	opt stack 0
  1769  0017C4                     _I2C_Master_Stop:
  1770                           	opt stack 24
  1771                           
  1772                           ;I2C.c: 105: I2C_Master_Wait();
  1773                           
  1774                           ;incstack = 0
  1775  0017C4  ECD4  F00B         	call	_I2C_Master_Wait	;wreg free
  1776                           
  1777                           ;I2C.c: 106: SSPCON2bits.PEN = 1;
  1778  0017C8  84C5               	bsf	4037,2,c	;volatile
  1779  0017CA  0012               	return		;funcret
  1780  0017CC                     __end_of_I2C_Master_Stop:
  1781                           	opt stack 0
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           prodh	equ	0xFF4
  1787                           prodl	equ	0xFF3
  1788                           intcon	equ	0xFF2
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postinc2	equ	0xFDE
  1792                           postdec2	equ	0xFDD
  1793                           fsr2h	equ	0xFDA
  1794                           fsr2l	equ	0xFD9
  1795                           status	equ	0xFD8
  1796                           
  1797 ;; *************** function _I2C_Master_Start *****************
  1798 ;; Defined at:
  1799 ;;		line 70 in file "I2C.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    5
  1820 ;; This function calls:
  1821 ;;		_I2C_Master_Wait
  1822 ;; This function is called by:
  1823 ;;		_I2C_init
  1824 ;;		_I2C_sendData
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text12
  1829  0017CC                     __ptext12:
  1830                           	opt stack 0
  1831  0017CC                     _I2C_Master_Start:
  1832                           	opt stack 24
  1833                           
  1834                           ;I2C.c: 79: I2C_Master_Wait();
  1835                           
  1836                           ;incstack = 0
  1837  0017CC  ECD4  F00B         	call	_I2C_Master_Wait	;wreg free
  1838                           
  1839                           ;I2C.c: 80: SSPCON2bits.SEN = 1;
  1840  0017D0  80C5               	bsf	4037,0,c	;volatile
  1841  0017D2  0012               	return		;funcret
  1842  0017D4                     __end_of_I2C_Master_Start:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           prodh	equ	0xFF4
  1849                           prodl	equ	0xFF3
  1850                           intcon	equ	0xFF2
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           postinc2	equ	0xFDE
  1854                           postdec2	equ	0xFDD
  1855                           fsr2h	equ	0xFDA
  1856                           fsr2l	equ	0xFD9
  1857                           status	equ	0xFD8
  1858                           
  1859 ;; *************** function _I2C_Master_Wait *****************
  1860 ;; Defined at:
  1861 ;;		line 52 in file "I2C.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;Total ram usage:        1 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    4
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_I2C_Master_Start
  1886 ;;		_I2C_Master_Stop
  1887 ;;		_I2C_Master_Write
  1888 ;;		_I2C_Master_RepeatedStart
  1889 ;;		_I2C_Master_Read
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text13
  1894  0017A8                     __ptext13:
  1895                           	opt stack 0
  1896  0017A8                     _I2C_Master_Wait:
  1897                           	opt stack 24
  1898                           
  1899                           ;I2C.c: 67: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1900                           
  1901                           ;incstack = 0
  1902  0017A8  B4C7               	btfsc	4039,2,c	;volatile
  1903  0017AA  D7FE               	goto	_I2C_Master_Wait
  1904  0017AC  CFC5 F02E          	movff	4037,??_I2C_Master_Wait	;volatile
  1905  0017B0  0E1F               	movlw	31
  1906  0017B2  162E               	andwf	??_I2C_Master_Wait,f,c
  1907  0017B4  B4D8               	btfsc	status,2,c
  1908  0017B6  0012               	return	
  1909  0017B8  D7F7               	goto	_I2C_Master_Wait
  1910  0017BA                     __end_of_I2C_Master_Wait:
  1911                           	opt stack 0
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           prodh	equ	0xFF4
  1917                           prodl	equ	0xFF3
  1918                           intcon	equ	0xFF2
  1919                           postinc0	equ	0xFEE
  1920                           wreg	equ	0xFE8
  1921                           postinc2	equ	0xFDE
  1922                           postdec2	equ	0xFDD
  1923                           fsr2h	equ	0xFDA
  1924                           fsr2l	equ	0xFD9
  1925                           status	equ	0xFD8
  1926                           
  1927 ;; *************** function _I2C_Master_Init *****************
  1928 ;; Defined at:
  1929 ;;		line 14 in file "I2C.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  clockFreq       4   45[COMRAM] const unsigned long 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;Total ram usage:        4 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    4
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_I2C_init
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text14
  1958  001740                     __ptext14:
  1959                           	opt stack 0
  1960  001740                     _I2C_Master_Init:
  1961                           	opt stack 25
  1962                           
  1963                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
  1964                           
  1965                           ;incstack = 0
  1966  001740  9AC6               	bcf	4038,5,c	;volatile
  1967                           
  1968                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
  1969  001742  8694               	bsf	3988,3,c	;volatile
  1970                           
  1971                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
  1972  001744  8894               	bsf	3988,4,c	;volatile
  1973                           
  1974                           ;I2C.c: 41: SSPSTAT = 0b10000000;
  1975  001746  0E80               	movlw	128
  1976  001748  6EC7               	movwf	4039,c	;volatile
  1977                           
  1978                           ;I2C.c: 42: SSPCON1 = 0b00101000;
  1979  00174A  0E28               	movlw	40
  1980  00174C  6EC6               	movwf	4038,c	;volatile
  1981                           
  1982                           ;I2C.c: 43: SSPCON2 = 0b00000000;
  1983  00174E  0E00               	movlw	0
  1984  001750  6EC5               	movwf	4037,c	;volatile
  1985                           
  1986                           ;I2C.c: 49: SSPADD = 9600;
  1987  001752  0E80               	movlw	128
  1988  001754  6EC8               	movwf	4040,c	;volatile
  1989  001756  0012               	return		;funcret
  1990  001758                     __end_of_I2C_Master_Init:
  1991                           	opt stack 0
  1992                           tblptru	equ	0xFF8
  1993                           tblptrh	equ	0xFF7
  1994                           tblptrl	equ	0xFF6
  1995                           tablat	equ	0xFF5
  1996                           prodh	equ	0xFF4
  1997                           prodl	equ	0xFF3
  1998                           intcon	equ	0xFF2
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           postinc2	equ	0xFDE
  2002                           postdec2	equ	0xFDD
  2003                           fsr2h	equ	0xFDA
  2004                           fsr2l	equ	0xFD9
  2005                           status	equ	0xFD8
  2006                           
  2007 ;; *************** function _interruptHandler *****************
  2008 ;; Defined at:
  2009 ;;		line 110 in file "main.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  input           2   43[COMRAM] int 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;Total ram usage:       21 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    3
  2030 ;; This function calls:
  2031 ;;		i2_initLCD
  2032 ;;		i2_lcdInst
  2033 ;;		i2_printf
  2034 ;; This function is called by:
  2035 ;;		Interrupt level 2
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	intcode
  2040  000008                     __pintcode:
  2041                           	opt stack 0
  2042  000008                     _interruptHandler:
  2043                           	opt stack 24
  2044                           
  2045                           ;incstack = 0
  2046  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2047  00000A  ED2D  F009         	call	int_func,f	;refresh shadow registers
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           prodh	equ	0xFF4
  2053                           prodl	equ	0xFF3
  2054                           intcon	equ	0xFF2
  2055                           postinc0	equ	0xFEE
  2056                           wreg	equ	0xFE8
  2057                           postinc2	equ	0xFDE
  2058                           postdec2	equ	0xFDD
  2059                           fsr2h	equ	0xFDA
  2060                           fsr2l	equ	0xFD9
  2061                           status	equ	0xFD8
  2062                           
  2063                           	psect	intcode_body
  2064  00125A                     __pintcode_body:
  2065                           	opt stack 24
  2066  00125A                     int_func:
  2067                           	opt stack 24
  2068  00125A  0006               	pop		; remove dummy address from shadow register refresh
  2069  00125C  CFFA F01A          	movff	pclath,??_interruptHandler+1
  2070  001260  CFFB F01B          	movff	pclatu,??_interruptHandler+2
  2071  001264  CFE9 F01C          	movff	fsr0l,??_interruptHandler+3
  2072  001268  CFEA F01D          	movff	fsr0h,??_interruptHandler+4
  2073  00126C  CFE1 F01E          	movff	fsr1l,??_interruptHandler+5
  2074  001270  CFE2 F01F          	movff	fsr1h,??_interruptHandler+6
  2075  001274  CFD9 F020          	movff	fsr2l,??_interruptHandler+7
  2076  001278  CFDA F021          	movff	fsr2h,??_interruptHandler+8
  2077  00127C  CFF3 F022          	movff	prodl,??_interruptHandler+9
  2078  001280  CFF4 F023          	movff	prodh,??_interruptHandler+10
  2079  001284  CFF6 F024          	movff	tblptrl,??_interruptHandler+11
  2080  001288  CFF7 F025          	movff	tblptrh,??_interruptHandler+12
  2081  00128C  CFF8 F026          	movff	tblptru,??_interruptHandler+13
  2082  001290  CFF5 F027          	movff	tablat,??_interruptHandler+14
  2083  001294  C051  F028         	movff	btemp,??_interruptHandler+15
  2084  001298  C052  F029         	movff	btemp+1,??_interruptHandler+16
  2085  00129C  C053  F02A         	movff	btemp+2,??_interruptHandler+17
  2086  0012A0  C054  F02B         	movff	btemp+3,??_interruptHandler+18
  2087                           
  2088                           ;main.c: 122: if (RBIF){
  2089  0012A4  A0F2               	btfss	intcon,0,c	;volatile
  2090  0012A6  D03B               	goto	i2l1671
  2091                           
  2092                           ;main.c: 130: TRISBbits.RB6 = 1;
  2093  0012A8  8C93               	bsf	3987,6,c	;volatile
  2094                           
  2095                           ;main.c: 131: int input = PORTBbits.RB6;
  2096  0012AA  AC81               	btfss	3969,6,c	;volatile
  2097  0012AC  D003               	goto	i2u81_40
  2098  0012AE  6A19               	clrf	??_interruptHandler& (0+255),c
  2099  0012B0  2A19               	incf	??_interruptHandler& (0+255),f,c
  2100  0012B2  D001               	goto	i2u81_48
  2101  0012B4                     i2u81_40:
  2102  0012B4  6A19               	clrf	??_interruptHandler& (0+255),c
  2103  0012B6                     i2u81_48:
  2104  0012B6  5019               	movf	??_interruptHandler,w,c
  2105  0012B8  6E2C               	movwf	interruptHandler@input,c
  2106  0012BA  6A2D               	clrf	interruptHandler@input+1,c
  2107                           
  2108                           ;main.c: 133: if (input == 0){
  2109  0012BC  502C               	movf	interruptHandler@input,w,c
  2110  0012BE  102D               	iorwf	interruptHandler@input+1,w,c
  2111  0012C0  A4D8               	btfss	status,2,c
  2112  0012C2  D018               	goto	i2l164
  2113                           
  2114                           ;main.c: 134: initLCD();
  2115  0012C4  EC05  F00B         	call	i2_initLCD	;wreg free
  2116                           
  2117                           ;main.c: 135: S_count++;
  2118  0012C8  4A49               	infsnz	_S_count,f,c
  2119  0012CA  2A4A               	incf	_S_count+1,f,c
  2120                           
  2121                           ;main.c: 136: printf("%d",S_count);
  2122  0012CC  0E19               	movlw	low (STR_1+8)
  2123  0012CE  6E0D               	movwf	i2printf@f,c
  2124  0012D0  0E10               	movlw	high (STR_1+8)
  2125  0012D2  6E0E               	movwf	i2printf@f+1,c
  2126  0012D4  C049  F00F         	movff	_S_count,?i2_printf+2
  2127  0012D8  C04A  F010         	movff	_S_count+1,?i2_printf+3
  2128  0012DC  EC9E  F008         	call	i2_printf	;wreg free
  2129                           
  2130                           ;main.c: 137: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  2131  0012E0  0E80               	movlw	128
  2132  0012E2  ECCA  F00B         	call	i2_lcdInst
  2133  0012E6  0E34               	movlw	52
  2134  0012E8  6E19               	movwf	??_interruptHandler& (0+255),c
  2135  0012EA  0EF2               	movlw	242
  2136  0012EC                     i2u119_47:
  2137  0012EC  2EE8               	decfsz	wreg,f,c
  2138  0012EE  D7FE               	bra	i2u119_47
  2139  0012F0  2E19               	decfsz	??_interruptHandler& (0+255),f,c
  2140  0012F2  D7FC               	bra	i2u119_47
  2141  0012F4                     i2l164:
  2142                           
  2143                           ;main.c: 138: }
  2144                           ;main.c: 141: printf("%d",S_count);
  2145  0012F4  0E19               	movlw	low (STR_1+8)
  2146  0012F6  6E0D               	movwf	i2printf@f,c
  2147  0012F8  0E10               	movlw	high (STR_1+8)
  2148  0012FA  6E0E               	movwf	i2printf@f+1,c
  2149  0012FC  C049  F00F         	movff	_S_count,?i2_printf+2
  2150  001300  C04A  F010         	movff	_S_count+1,?i2_printf+3
  2151  001304  EC9E  F008         	call	i2_printf	;wreg free
  2152                           
  2153                           ;main.c: 142: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  2154  001308  0E80               	movlw	128
  2155  00130A  ECCA  F00B         	call	i2_lcdInst
  2156  00130E  0E34               	movlw	52
  2157  001310  6E19               	movwf	??_interruptHandler& (0+255),c
  2158  001312  0EF2               	movlw	242
  2159  001314                     i2u120_47:
  2160  001314  2EE8               	decfsz	wreg,f,c
  2161  001316  D7FE               	bra	i2u120_47
  2162  001318  2E19               	decfsz	??_interruptHandler& (0+255),f,c
  2163  00131A  D7FC               	bra	i2u120_47
  2164                           
  2165                           ;main.c: 155: RBIF = 0;
  2166  00131C  90F2               	bcf	intcon,0,c	;volatile
  2167  00131E                     i2l1671:
  2168                           
  2169                           ;main.c: 156: return;
  2170  00131E  C02B  F054         	movff	??_interruptHandler+18,btemp+3
  2171  001322  C02A  F053         	movff	??_interruptHandler+17,btemp+2
  2172  001326  C029  F052         	movff	??_interruptHandler+16,btemp+1
  2173  00132A  C028  F051         	movff	??_interruptHandler+15,btemp
  2174  00132E  C027  FFF5         	movff	??_interruptHandler+14,tablat
  2175  001332  C026  FFF8         	movff	??_interruptHandler+13,tblptru
  2176  001336  C025  FFF7         	movff	??_interruptHandler+12,tblptrh
  2177  00133A  C024  FFF6         	movff	??_interruptHandler+11,tblptrl
  2178  00133E  C023  FFF4         	movff	??_interruptHandler+10,prodh
  2179  001342  C022  FFF3         	movff	??_interruptHandler+9,prodl
  2180  001346  C021  FFDA         	movff	??_interruptHandler+8,fsr2h
  2181  00134A  C020  FFD9         	movff	??_interruptHandler+7,fsr2l
  2182  00134E  C01F  FFE2         	movff	??_interruptHandler+6,fsr1h
  2183  001352  C01E  FFE1         	movff	??_interruptHandler+5,fsr1l
  2184  001356  C01D  FFEA         	movff	??_interruptHandler+4,fsr0h
  2185  00135A  C01C  FFE9         	movff	??_interruptHandler+3,fsr0l
  2186  00135E  C01B  FFFB         	movff	??_interruptHandler+2,pclatu
  2187  001362  C01A  FFFA         	movff	??_interruptHandler+1,pclath
  2188  001366  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2189  001368  0011               	retfie		f
  2190  00136A                     __end_of_interruptHandler:
  2191                           	opt stack 0
  2192                           pclatu	equ	0xFFB
  2193                           pclath	equ	0xFFA
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           prodh	equ	0xFF4
  2199                           prodl	equ	0xFF3
  2200                           intcon	equ	0xFF2
  2201                           postinc0	equ	0xFEE
  2202                           fsr0h	equ	0xFEA
  2203                           fsr0l	equ	0xFE9
  2204                           wreg	equ	0xFE8
  2205                           fsr1h	equ	0xFE2
  2206                           fsr1l	equ	0xFE1
  2207                           postinc2	equ	0xFDE
  2208                           postdec2	equ	0xFDD
  2209                           fsr2h	equ	0xFDA
  2210                           fsr2l	equ	0xFD9
  2211                           status	equ	0xFD8
  2212                           
  2213 ;; *************** function i2_printf *****************
  2214 ;; Defined at:
  2215 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  f               2   12[COMRAM] PTR const unsigned char 
  2218 ;;		 -> STR_3(3), STR_2(3), STR_1(11), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  printf          4    0        struct .
  2221 ;;  printf          3    0        PTR const unsigned char 
  2222 ;;  printf          2   21[COMRAM] unsigned int 
  2223 ;;  printf          2   17[COMRAM] PTR void [1]
  2224 ;;		 -> ?i2_printf(2), ?_printf(2), 
  2225 ;;  printf          2    0        unsigned int 
  2226 ;;  printf          1   23[COMRAM] char 
  2227 ;;  printf          1   20[COMRAM] char 
  2228 ;;  printf          1   19[COMRAM] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2   12[COMRAM] int 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;Total ram usage:       12 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    2
  2245 ;; This function calls:
  2246 ;;		i2___lwdiv
  2247 ;;		i2___lwmod
  2248 ;;		i2_putch
  2249 ;; This function is called by:
  2250 ;;		_interruptHandler
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text16
  2255  00113C                     __ptext16:
  2256                           	opt stack 0
  2257  00113C                     i2_printf:
  2258                           	opt stack 24
  2259                           
  2260                           ;doprnt.c: 466: va_list ap;
  2261                           ;doprnt.c: 499: signed char c;
  2262                           ;doprnt.c: 506: signed char prec;
  2263                           ;doprnt.c: 508: unsigned char flag;
  2264                           ;doprnt.c: 523: union {
  2265                           ;doprnt.c: 524: unsigned long vd;
  2266                           ;doprnt.c: 525: double integ;
  2267                           ;doprnt.c: 526: } tmpval;
  2268                           ;doprnt.c: 528: unsigned int val;
  2269                           ;doprnt.c: 529: unsigned len;
  2270                           ;doprnt.c: 530: const char * cp;
  2271                           ;doprnt.c: 533: *ap = __va_start();
  2272                           
  2273                           ;incstack = 0
  2274  00113C  0E0F               	movlw	low (?i2_printf+2)
  2275  00113E  6E12               	movwf	i2printf@ap,c
  2276  001140  0E00               	movlw	high (?i2_printf+2)
  2277  001142  6E13               	movwf	i2printf@ap+1,c
  2278                           
  2279                           ;doprnt.c: 536: while(c = *f++) {
  2280  001144  D07D               	goto	i2u76_40
  2281  001146                     
  2282                           ;doprnt.c: 538: if(c != '%')
  2283  001146  0E25               	movlw	37
  2284  001148  1818               	xorwf	i2printf@c,w,c
  2285  00114A  B4D8               	btfsc	status,2,c
  2286  00114C  D004               	goto	i2l230
  2287                           
  2288                           ;doprnt.c: 540: {
  2289                           ;doprnt.c: 541: (putch(c) );
  2290  00114E  5018               	movf	i2printf@c,w,c
  2291  001150  ECC0  F00B         	call	i2_putch
  2292                           
  2293                           ;doprnt.c: 542: continue;
  2294  001154  D075               	goto	i2u76_40
  2295  001156                     i2l230:
  2296                           
  2297                           ;doprnt.c: 543: }
  2298                           ;doprnt.c: 548: flag = 0;
  2299  001156  0E00               	movlw	0
  2300  001158  6E14               	movwf	i2printf@flag,c
  2301                           
  2302                           ;doprnt.c: 822: }
  2303                           
  2304                           ;doprnt.c: 813: continue;
  2305                           
  2306                           ;doprnt.c: 802: default:
  2307                           
  2308                           ;doprnt.c: 698: case 'i':
  2309                           ;doprnt.c: 699: break;
  2310                           
  2311                           ;doprnt.c: 697: case 'd':
  2312                           
  2313                           ;doprnt.c: 638: goto alldone;
  2314                           
  2315                           ;doprnt.c: 637: case 0:
  2316                           
  2317                           ;doprnt.c: 635: switch(c = *f++) {
  2318  00115A  C00D  FFF6         	movff	i2printf@f,tblptrl
  2319  00115E  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  2320  001162  4A0D               	infsnz	i2printf@f,f,c
  2321  001164  2A0E               	incf	i2printf@f+1,f,c
  2322  001166                     	if	0	;tblptru may be non-zero
  2323  001166                     	endif
  2324  001166                     	if	0	;tblptru may be non-zero
  2325  001166                     	endif
  2326  001166  0008               	tblrd		*
  2327  001168  CFF5 F018          	movff	tablat,i2printf@c
  2328  00116C  5018               	movf	i2printf@c,w,c
  2329                           
  2330                           ; Switch size 1, requested type "space"
  2331                           ; Number of cases is 3, Range of values is 0 to 105
  2332                           ; switch strategies available:
  2333                           ; Name         Instructions Cycles
  2334                           ; simple_byte           10     6 (average)
  2335                           ;	Chosen strategy is simple_byte
  2336  00116E  0A00               	xorlw	0	; case 0
  2337  001170  B4D8               	btfsc	status,2,c
  2338  001172  0012               	return	
  2339  001174  0A64               	xorlw	100	; case 100
  2340  001176  B4D8               	btfsc	status,2,c
  2341  001178  D003               	goto	i2l236
  2342  00117A  0A0D               	xorlw	13	; case 105
  2343  00117C  A4D8               	btfss	status,2,c
  2344  00117E  D060               	goto	i2u76_40
  2345  001180                     i2l236:
  2346                           
  2347                           ;doprnt.c: 1253: {
  2348                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2349  001180  C012  FFD9         	movff	i2printf@ap,fsr2l
  2350  001184  C013  FFDA         	movff	i2printf@ap+1,fsr2h
  2351  001188  CFDE F016          	movff	postinc2,i2printf@val
  2352  00118C  CFDD F017          	movff	postdec2,i2printf@val+1
  2353  001190  0E02               	movlw	2
  2354  001192  2612               	addwf	i2printf@ap,f,c
  2355  001194  0E00               	movlw	0
  2356  001196  2213               	addwfc	i2printf@ap+1,f,c
  2357                           
  2358                           ;doprnt.c: 1261: if((int)val < 0) {
  2359  001198  AE17               	btfss	i2printf@val+1,7,c
  2360  00119A  D006               	goto	i2l238
  2361                           
  2362                           ;doprnt.c: 1262: flag |= 0x03;
  2363  00119C  0E03               	movlw	3
  2364  00119E  1214               	iorwf	i2printf@flag,f,c
  2365                           
  2366                           ;doprnt.c: 1263: val = -val;
  2367  0011A0  6C16               	negf	i2printf@val,c
  2368  0011A2  1E17               	comf	i2printf@val+1,f,c
  2369  0011A4  B0D8               	btfsc	status,0,c
  2370  0011A6  2A17               	incf	i2printf@val+1,f,c
  2371  0011A8                     i2l238:
  2372                           
  2373                           ;doprnt.c: 1264: }
  2374                           ;doprnt.c: 1266: }
  2375                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2376  0011A8  0E01               	movlw	1
  2377  0011AA  6E18               	movwf	i2printf@c,c
  2378  0011AC                     i2l1577:
  2379  0011AC  0E05               	movlw	5
  2380  0011AE  1818               	xorwf	i2printf@c,w,c
  2381  0011B0  B4D8               	btfsc	status,2,c
  2382  0011B2  D012               	goto	i2u74_40
  2383                           
  2384                           ;doprnt.c: 1306: if(val < dpowers[c])
  2385  0011B4  5018               	movf	i2printf@c,w,c
  2386  0011B6  0D02               	mullw	2
  2387  0011B8  0E01               	movlw	low _dpowers
  2388  0011BA  24F3               	addwf	prodl,w,c
  2389  0011BC  6EF6               	movwf	tblptrl,c
  2390  0011BE  0E10               	movlw	high _dpowers
  2391  0011C0  20F4               	addwfc	prodh,w,c
  2392  0011C2  6EF7               	movwf	tblptrh,c
  2393  0011C4                     	if	0	;There are less than 3 active tblptr bytes
  2394  0011C4                     	endif
  2395  0011C4  0009               	tblrd		*+
  2396  0011C6  50F5               	movf	tablat,w,c
  2397  0011C8  5C16               	subwf	i2printf@val,w,c
  2398  0011CA  0009               	tblrd		*+
  2399  0011CC  50F5               	movf	tablat,w,c
  2400  0011CE  5817               	subwfb	i2printf@val+1,w,c
  2401  0011D0  A0D8               	btfss	status,0,c
  2402  0011D2  D002               	goto	i2u74_40
  2403                           
  2404                           ;doprnt.c: 1307: break;
  2405  0011D4  2A18               	incf	i2printf@c,f,c
  2406  0011D6  D7EA               	goto	i2l1577
  2407  0011D8                     i2u74_40:
  2408                           
  2409                           ;doprnt.c: 1422: {
  2410                           ;doprnt.c: 1438: if(flag & 0x03)
  2411  0011D8  C014  F011         	movff	i2printf@flag,??i2_printf
  2412  0011DC  0E03               	movlw	3
  2413  0011DE  1611               	andwf	??i2_printf,f,c
  2414  0011E0  B4D8               	btfsc	status,2,c
  2415  0011E2  D003               	goto	i2l242
  2416                           
  2417                           ;doprnt.c: 1439: (putch('-') );
  2418  0011E4  0E2D               	movlw	45
  2419  0011E6  ECC0  F00B         	call	i2_putch
  2420  0011EA                     i2l242:
  2421                           
  2422                           ;doprnt.c: 1469: }
  2423                           ;doprnt.c: 1472: prec = c;
  2424  0011EA  C018  F015         	movff	i2printf@c,i2printf@prec
  2425                           
  2426                           ;doprnt.c: 1474: while(prec--) {
  2427  0011EE  D024               	goto	i2l243
  2428  0011F0                     
  2429                           ;doprnt.c: 1478: {
  2430                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2431  0011F0  5015               	movf	i2printf@prec,w,c
  2432  0011F2  0D02               	mullw	2
  2433  0011F4  0E01               	movlw	low _dpowers
  2434  0011F6  24F3               	addwf	prodl,w,c
  2435  0011F8  6EF6               	movwf	tblptrl,c
  2436  0011FA  0E10               	movlw	high _dpowers
  2437  0011FC  20F4               	addwfc	prodh,w,c
  2438  0011FE  6EF7               	movwf	tblptrh,c
  2439  001200                     	if	0	;There are less than 3 active tblptr bytes
  2440  001200                     	endif
  2441  001200  0009               	tblrd		*+
  2442  001202  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  2443  001206  000A               	tblrd		*-
  2444  001208  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  2445  00120C  C016  F001         	movff	i2printf@val,i2___lwdiv@dividend
  2446  001210  C017  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  2447  001214  ECB6  F00A         	call	i2___lwdiv	;wreg free
  2448  001218  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  2449  00121C  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  2450  001220  0E00               	movlw	0
  2451  001222  6E0B               	movwf	i2___lwmod@divisor+1,c
  2452  001224  0E0A               	movlw	10
  2453  001226  6E0A               	movwf	i2___lwmod@divisor,c
  2454  001228  EC4C  F00B         	call	i2___lwmod	;wreg free
  2455  00122C  5008               	movf	?i2___lwmod,w,c
  2456  00122E  0F30               	addlw	48
  2457  001230  6E18               	movwf	i2printf@c,c
  2458                           
  2459                           ;doprnt.c: 1523: }
  2460                           ;doprnt.c: 1524: (putch(c) );
  2461  001232  5018               	movf	i2printf@c,w,c
  2462  001234  ECC0  F00B         	call	i2_putch
  2463  001238                     i2l243:
  2464  001238  0615               	decf	i2printf@prec,f,c
  2465  00123A  2815               	incf	i2printf@prec,w,c
  2466  00123C  A4D8               	btfss	status,2,c
  2467  00123E  D7D8               	goto	i2l244
  2468  001240                     i2u76_40:
  2469  001240  C00D  FFF6         	movff	i2printf@f,tblptrl
  2470  001244  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  2471  001248  4A0D               	infsnz	i2printf@f,f,c
  2472  00124A  2A0E               	incf	i2printf@f+1,f,c
  2473  00124C                     	if	0	;tblptru may be non-zero
  2474  00124C                     	endif
  2475  00124C                     	if	0	;tblptru may be non-zero
  2476  00124C                     	endif
  2477  00124C  0008               	tblrd		*
  2478  00124E  CFF5 F018          	movff	tablat,i2printf@c
  2479  001252  5018               	movf	i2printf@c,w,c
  2480  001254  B4D8               	btfsc	status,2,c
  2481  001256  0012               	return	
  2482  001258  D776               	goto	i2l229
  2483  00125A                     __end_ofi2_printf:
  2484                           	opt stack 0
  2485                           pclatu	equ	0xFFB
  2486                           pclath	equ	0xFFA
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           prodh	equ	0xFF4
  2492                           prodl	equ	0xFF3
  2493                           intcon	equ	0xFF2
  2494                           postinc0	equ	0xFEE
  2495                           fsr0h	equ	0xFEA
  2496                           fsr0l	equ	0xFE9
  2497                           wreg	equ	0xFE8
  2498                           fsr1h	equ	0xFE2
  2499                           fsr1l	equ	0xFE1
  2500                           postinc2	equ	0xFDE
  2501                           postdec2	equ	0xFDD
  2502                           fsr2h	equ	0xFDA
  2503                           fsr2l	equ	0xFD9
  2504                           status	equ	0xFD8
  2505                           
  2506 ;; *************** function i2_putch *****************
  2507 ;; Defined at:
  2508 ;;		line 24 in file "lcd.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  data            1    wreg     unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  data            1    2[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;Total ram usage:        1 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    1
  2529 ;; This function calls:
  2530 ;;		i2_lcdNibble
  2531 ;; This function is called by:
  2532 ;;		i2_printf
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text17
  2537  001780                     __ptext17:
  2538                           	opt stack 0
  2539  001780                     i2_putch:
  2540                           	opt stack 24
  2541                           
  2542                           ;incstack = 0
  2543                           ;i2putch@data stored from wreg
  2544  001780  6E03               	movwf	i2putch@data,c
  2545                           
  2546                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  2547  001782  848C               	bsf	3980,2,c	;volatile
  2548                           
  2549                           ;lcd.c: 33: lcdNibble(data);
  2550  001784  5003               	movf	i2putch@data,w,c
  2551  001786  EC4E  F00A         	call	i2_lcdNibble
  2552                           
  2553                           ;lcd.c: 34: _delay((unsigned long)((100)*(32000000/4000000.0)));
  2554  00178A  0EA0               	movlw	160
  2555  00178C                     i2u121_47:
  2556  00178C  D000               	nop2	
  2557  00178E  2EE8               	decfsz	wreg,f,c
  2558  001790  D7FD               	bra	i2u121_47
  2559  001792  0012               	return		;funcret
  2560  001794                     __end_ofi2_putch:
  2561                           	opt stack 0
  2562                           pclatu	equ	0xFFB
  2563                           pclath	equ	0xFFA
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           prodh	equ	0xFF4
  2569                           prodl	equ	0xFF3
  2570                           intcon	equ	0xFF2
  2571                           postinc0	equ	0xFEE
  2572                           fsr0h	equ	0xFEA
  2573                           fsr0l	equ	0xFE9
  2574                           wreg	equ	0xFE8
  2575                           fsr1h	equ	0xFE2
  2576                           fsr1l	equ	0xFE1
  2577                           postinc2	equ	0xFDE
  2578                           postdec2	equ	0xFDD
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function i2___lwmod *****************
  2584 ;; Defined at:
  2585 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwmod.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  dividend        2    7[COMRAM] unsigned int 
  2588 ;;  divisor         2    9[COMRAM] unsigned int 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  __lwmod         1   11[COMRAM] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  2    7[COMRAM] unsigned int 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;Total ram usage:        5 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		i2_printf
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text18
  2614  001698                     __ptext18:
  2615                           	opt stack 0
  2616  001698                     i2___lwmod:
  2617                           	opt stack 25
  2618                           
  2619                           ;incstack = 0
  2620  001698  500A               	movf	i2___lwmod@divisor,w,c
  2621  00169A  100B               	iorwf	i2___lwmod@divisor+1,w,c
  2622  00169C  B4D8               	btfsc	status,2,c
  2623  00169E  D018               	goto	i2l666
  2624  0016A0  0E01               	movlw	1
  2625  0016A2  6E0C               	movwf	i2___lwmod@counter,c
  2626  0016A4  D004               	goto	i2l661
  2627  0016A6  90D8               	bcf	status,0,c
  2628  0016A8  360A               	rlcf	i2___lwmod@divisor,f,c
  2629  0016AA  360B               	rlcf	i2___lwmod@divisor+1,f,c
  2630  0016AC  2A0C               	incf	i2___lwmod@counter,f,c
  2631  0016AE                     i2l661:
  2632  0016AE  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  2633  0016B0  D7FA               	goto	i2l662
  2634  0016B2                     i2u60_40:
  2635  0016B2  500A               	movf	i2___lwmod@divisor,w,c
  2636  0016B4  5C08               	subwf	i2___lwmod@dividend,w,c
  2637  0016B6  500B               	movf	i2___lwmod@divisor+1,w,c
  2638  0016B8  5809               	subwfb	i2___lwmod@dividend+1,w,c
  2639  0016BA  A0D8               	btfss	status,0,c
  2640  0016BC  D004               	goto	i2l665
  2641  0016BE  500A               	movf	i2___lwmod@divisor,w,c
  2642  0016C0  5E08               	subwf	i2___lwmod@dividend,f,c
  2643  0016C2  500B               	movf	i2___lwmod@divisor+1,w,c
  2644  0016C4  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  2645  0016C6                     i2l665:
  2646  0016C6  90D8               	bcf	status,0,c
  2647  0016C8  320B               	rrcf	i2___lwmod@divisor+1,f,c
  2648  0016CA  320A               	rrcf	i2___lwmod@divisor,f,c
  2649  0016CC  2E0C               	decfsz	i2___lwmod@counter,f,c
  2650  0016CE  D7F1               	goto	i2u60_40
  2651  0016D0                     i2l666:
  2652  0016D0  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  2653  0016D4  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  2654  0016D8  0012               	return		;funcret
  2655  0016DA                     __end_ofi2___lwmod:
  2656                           	opt stack 0
  2657                           pclatu	equ	0xFFB
  2658                           pclath	equ	0xFFA
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           prodh	equ	0xFF4
  2664                           prodl	equ	0xFF3
  2665                           intcon	equ	0xFF2
  2666                           postinc0	equ	0xFEE
  2667                           fsr0h	equ	0xFEA
  2668                           fsr0l	equ	0xFE9
  2669                           wreg	equ	0xFE8
  2670                           fsr1h	equ	0xFE2
  2671                           fsr1l	equ	0xFE1
  2672                           postinc2	equ	0xFDE
  2673                           postdec2	equ	0xFDD
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function i2___lwdiv *****************
  2679 ;; Defined at:
  2680 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  dividend        2    0[COMRAM] unsigned int 
  2683 ;;  divisor         2    2[COMRAM] unsigned int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  2686 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  2    0[COMRAM] unsigned int 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;Total ram usage:        7 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		i2_printf
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text19
  2710  00156C                     __ptext19:
  2711                           	opt stack 0
  2712  00156C                     i2___lwdiv:
  2713                           	opt stack 25
  2714                           
  2715                           ;incstack = 0
  2716  00156C  0E00               	movlw	0
  2717  00156E  6E06               	movwf	i2___lwdiv@quotient+1,c
  2718  001570  0E00               	movlw	0
  2719  001572  6E05               	movwf	i2___lwdiv@quotient,c
  2720  001574  5003               	movf	i2___lwdiv@divisor,w,c
  2721  001576  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  2722  001578  B4D8               	btfsc	status,2,c
  2723  00157A  D01C               	goto	i2l656
  2724  00157C  0E01               	movlw	1
  2725  00157E  6E07               	movwf	i2___lwdiv@counter,c
  2726  001580  D004               	goto	i2l651
  2727  001582  90D8               	bcf	status,0,c
  2728  001584  3603               	rlcf	i2___lwdiv@divisor,f,c
  2729  001586  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  2730  001588  2A07               	incf	i2___lwdiv@counter,f,c
  2731  00158A                     i2l651:
  2732  00158A  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  2733  00158C  D7FA               	goto	i2l652
  2734  00158E                     i2u57_40:
  2735  00158E  90D8               	bcf	status,0,c
  2736  001590  3605               	rlcf	i2___lwdiv@quotient,f,c
  2737  001592  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  2738  001594  5003               	movf	i2___lwdiv@divisor,w,c
  2739  001596  5C01               	subwf	i2___lwdiv@dividend,w,c
  2740  001598  5004               	movf	i2___lwdiv@divisor+1,w,c
  2741  00159A  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  2742  00159C  A0D8               	btfss	status,0,c
  2743  00159E  D005               	goto	i2l655
  2744  0015A0  5003               	movf	i2___lwdiv@divisor,w,c
  2745  0015A2  5E01               	subwf	i2___lwdiv@dividend,f,c
  2746  0015A4  5004               	movf	i2___lwdiv@divisor+1,w,c
  2747  0015A6  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  2748  0015A8  8005               	bsf	i2___lwdiv@quotient,0,c
  2749  0015AA                     i2l655:
  2750  0015AA  90D8               	bcf	status,0,c
  2751  0015AC  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  2752  0015AE  3203               	rrcf	i2___lwdiv@divisor,f,c
  2753  0015B0  2E07               	decfsz	i2___lwdiv@counter,f,c
  2754  0015B2  D7ED               	goto	i2u57_40
  2755  0015B4                     i2l656:
  2756  0015B4  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  2757  0015B8  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  2758  0015BC  0012               	return		;funcret
  2759  0015BE                     __end_ofi2___lwdiv:
  2760                           	opt stack 0
  2761                           pclatu	equ	0xFFB
  2762                           pclath	equ	0xFFA
  2763                           tblptru	equ	0xFF8
  2764                           tblptrh	equ	0xFF7
  2765                           tblptrl	equ	0xFF6
  2766                           tablat	equ	0xFF5
  2767                           prodh	equ	0xFF4
  2768                           prodl	equ	0xFF3
  2769                           intcon	equ	0xFF2
  2770                           postinc0	equ	0xFEE
  2771                           fsr0h	equ	0xFEA
  2772                           fsr0l	equ	0xFE9
  2773                           wreg	equ	0xFE8
  2774                           fsr1h	equ	0xFE2
  2775                           fsr1l	equ	0xFE1
  2776                           postinc2	equ	0xFDE
  2777                           postdec2	equ	0xFDD
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function i2_initLCD *****************
  2783 ;; Defined at:
  2784 ;;		line 60 in file "lcd.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;Total ram usage:        1 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    2
  2805 ;; This function calls:
  2806 ;;		i2_lcdInst
  2807 ;; This function is called by:
  2808 ;;		_interruptHandler
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text20
  2813  00160A                     __ptext20:
  2814                           	opt stack 0
  2815  00160A                     i2_initLCD:
  2816                           	opt stack 24
  2817                           
  2818                           ;lcd.c: 68: _delay((unsigned long)((15)*(32000000/4000.0)));
  2819                           
  2820                           ;incstack = 0
  2821  00160A  0E9C               	movlw	156
  2822  00160C  6E04               	movwf	??i2_initLCD& (0+255),c
  2823  00160E  0ED7               	movlw	215
  2824  001610                     i2u122_47:
  2825  001610  2EE8               	decfsz	wreg,f,c
  2826  001612  D7FE               	bra	i2u122_47
  2827  001614  2E04               	decfsz	??i2_initLCD& (0+255),f,c
  2828  001616  D7FC               	bra	i2u122_47
  2829  001618  F000               	nop	
  2830                           
  2831                           ;lcd.c: 69: lcdInst(0b00110011);
  2832  00161A  0E33               	movlw	51
  2833  00161C  ECCA  F00B         	call	i2_lcdInst
  2834                           
  2835                           ;lcd.c: 70: lcdInst(0b00110010);
  2836  001620  0E32               	movlw	50
  2837  001622  ECCA  F00B         	call	i2_lcdInst
  2838                           
  2839                           ;lcd.c: 71: lcdInst(0b00101000);
  2840  001626  0E28               	movlw	40
  2841  001628  ECCA  F00B         	call	i2_lcdInst
  2842                           
  2843                           ;lcd.c: 72: lcdInst(0b00001111);
  2844  00162C  0E0F               	movlw	15
  2845  00162E  ECCA  F00B         	call	i2_lcdInst
  2846                           
  2847                           ;lcd.c: 73: lcdInst(0b00000110);
  2848  001632  0E06               	movlw	6
  2849  001634  ECCA  F00B         	call	i2_lcdInst
  2850                           
  2851                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(32000000/4000.0)));;
  2852  001638  0E01               	movlw	1
  2853  00163A  ECCA  F00B         	call	i2_lcdInst
  2854  00163E  0E9C               	movlw	156
  2855  001640  6E04               	movwf	??i2_initLCD& (0+255),c
  2856  001642  0ED7               	movlw	215
  2857  001644                     i2u123_47:
  2858  001644  2EE8               	decfsz	wreg,f,c
  2859  001646  D7FE               	bra	i2u123_47
  2860  001648  2E04               	decfsz	??i2_initLCD& (0+255),f,c
  2861  00164A  D7FC               	bra	i2u123_47
  2862  00164C  F000               	nop	
  2863                           
  2864                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  2865  00164E  0E0F               	movlw	15
  2866  001650  ECCA  F00B         	call	i2_lcdInst
  2867  001654  0012               	return		;funcret
  2868  001656                     __end_ofi2_initLCD:
  2869                           	opt stack 0
  2870                           pclatu	equ	0xFFB
  2871                           pclath	equ	0xFFA
  2872                           tblptru	equ	0xFF8
  2873                           tblptrh	equ	0xFF7
  2874                           tblptrl	equ	0xFF6
  2875                           tablat	equ	0xFF5
  2876                           prodh	equ	0xFF4
  2877                           prodl	equ	0xFF3
  2878                           intcon	equ	0xFF2
  2879                           postinc0	equ	0xFEE
  2880                           fsr0h	equ	0xFEA
  2881                           fsr0l	equ	0xFE9
  2882                           wreg	equ	0xFE8
  2883                           fsr1h	equ	0xFE2
  2884                           fsr1l	equ	0xFE1
  2885                           postinc2	equ	0xFDE
  2886                           postdec2	equ	0xFDD
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8
  2890                           
  2891 ;; *************** function i2_lcdInst *****************
  2892 ;; Defined at:
  2893 ;;		line 11 in file "lcd.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  data            1    wreg     unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  data            1    2[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;Total ram usage:        1 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    1
  2914 ;; This function calls:
  2915 ;;		i2_lcdNibble
  2916 ;; This function is called by:
  2917 ;;		_interruptHandler
  2918 ;;		i2_initLCD
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text21
  2923  001794                     __ptext21:
  2924                           	opt stack 0
  2925  001794                     i2_lcdInst:
  2926                           	opt stack 25
  2927                           
  2928                           ;incstack = 0
  2929                           ;i2lcdInst@data stored from wreg
  2930  001794  6E03               	movwf	i2lcdInst@data,c
  2931                           
  2932                           ;lcd.c: 19: LATDbits.LATD2 = 0;
  2933  001796  948C               	bcf	3980,2,c	;volatile
  2934                           
  2935                           ;lcd.c: 20: lcdNibble(data);
  2936  001798  5003               	movf	i2lcdInst@data,w,c
  2937  00179A  EC4E  F00A         	call	i2_lcdNibble
  2938                           
  2939                           ;lcd.c: 21: _delay((unsigned long)((100)*(32000000/4000000.0)));
  2940  00179E  0EA0               	movlw	160
  2941  0017A0                     i2u124_47:
  2942  0017A0  D000               	nop2	
  2943  0017A2  2EE8               	decfsz	wreg,f,c
  2944  0017A4  D7FD               	bra	i2u124_47
  2945  0017A6  0012               	return		;funcret
  2946  0017A8                     __end_ofi2_lcdInst:
  2947                           	opt stack 0
  2948                           pclatu	equ	0xFFB
  2949                           pclath	equ	0xFFA
  2950                           tblptru	equ	0xFF8
  2951                           tblptrh	equ	0xFF7
  2952                           tblptrl	equ	0xFF6
  2953                           tablat	equ	0xFF5
  2954                           prodh	equ	0xFF4
  2955                           prodl	equ	0xFF3
  2956                           intcon	equ	0xFF2
  2957                           postinc0	equ	0xFEE
  2958                           fsr0h	equ	0xFEA
  2959                           fsr0l	equ	0xFE9
  2960                           wreg	equ	0xFE8
  2961                           fsr1h	equ	0xFE2
  2962                           fsr1l	equ	0xFE1
  2963                           postinc2	equ	0xFDE
  2964                           postdec2	equ	0xFDD
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function i2_lcdNibble *****************
  2970 ;; Defined at:
  2971 ;;		line 37 in file "lcd.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  data            1    wreg     unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  data            1    1[COMRAM] unsigned char 
  2976 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;Total ram usage:        2 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		i2_lcdInst
  2996 ;;		i2_putch
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text22
  3001  00149C                     __ptext22:
  3002                           	opt stack 0
  3003  00149C                     i2_lcdNibble:
  3004                           	opt stack 24
  3005                           
  3006                           ;incstack = 0
  3007                           ;i2lcdNibble@data stored from wreg
  3008  00149C  6E02               	movwf	i2lcdNibble@data,c
  3009                           
  3010                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
  3011  00149E  5002               	movf	i2lcdNibble@data,w,c
  3012  0014A0  0BF0               	andlw	240
  3013  0014A2  6E01               	movwf	i2lcdNibble@temp,c
  3014                           
  3015                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
  3016  0014A4  508C               	movf	3980,w,c	;volatile
  3017  0014A6  0B0F               	andlw	15
  3018  0014A8  6E8C               	movwf	3980,c	;volatile
  3019                           
  3020                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
  3021  0014AA  5001               	movf	i2lcdNibble@temp,w,c
  3022  0014AC  108C               	iorwf	3980,w,c	;volatile
  3023  0014AE  6E8C               	movwf	3980,c	;volatile
  3024                           
  3025                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  3026  0014B0  0E00               	movlw	0
  3027  0014B2  BEF2               	btfsc	intcon,7,c	;volatile
  3028  0014B4  0E01               	movlw	1
  3029  0014B6  6E50               	movwf	_LCDinterruptState,c
  3030  0014B8  9EF2               	bcf	intcon,7,c	;volatile
  3031  0014BA  868C               	bsf	3980,3,c	;volatile
  3032  0014BC  0E42               	movlw	66
  3033  0014BE                     i2u125_47:
  3034  0014BE  2EE8               	decfsz	wreg,f,c
  3035  0014C0  D7FE               	bra	i2u125_47
  3036  0014C2  D000               	nop2	
  3037  0014C4  968C               	bcf	3980,3,c	;volatile
  3038  0014C6  0EA0               	movlw	160
  3039  0014C8                     i2u126_47:
  3040  0014C8  D000               	nop2	
  3041  0014CA  2EE8               	decfsz	wreg,f,c
  3042  0014CC  D7FD               	bra	i2u126_47
  3043  0014CE  B050               	btfsc	_LCDinterruptState,0,c
  3044  0014D0  D002               	bra	i2u48_45
  3045  0014D2  9EF2               	bcf	intcon,7,c	;volatile
  3046  0014D4  D001               	bra	i2u48_46
  3047  0014D6                     i2u48_45:
  3048  0014D6  8EF2               	bsf	intcon,7,c	;volatile
  3049  0014D8                     i2u48_46:
  3050                           
  3051                           ;lcd.c: 52: data = (unsigned char) (data << 4);
  3052  0014D8  3802               	swapf	i2lcdNibble@data,w,c
  3053  0014DA  0BF0               	andlw	240
  3054  0014DC  6E02               	movwf	i2lcdNibble@data,c
  3055                           
  3056                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
  3057  0014DE  5002               	movf	i2lcdNibble@data,w,c
  3058  0014E0  0BF0               	andlw	240
  3059  0014E2  6E01               	movwf	i2lcdNibble@temp,c
  3060                           
  3061                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
  3062  0014E4  508C               	movf	3980,w,c	;volatile
  3063  0014E6  0B0F               	andlw	15
  3064  0014E8  6E8C               	movwf	3980,c	;volatile
  3065                           
  3066                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
  3067  0014EA  5001               	movf	i2lcdNibble@temp,w,c
  3068  0014EC  108C               	iorwf	3980,w,c	;volatile
  3069  0014EE  6E8C               	movwf	3980,c	;volatile
  3070                           
  3071                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  3072  0014F0  0E00               	movlw	0
  3073  0014F2  BEF2               	btfsc	intcon,7,c	;volatile
  3074  0014F4  0E01               	movlw	1
  3075  0014F6  6E50               	movwf	_LCDinterruptState,c
  3076  0014F8  9EF2               	bcf	intcon,7,c	;volatile
  3077  0014FA  868C               	bsf	3980,3,c	;volatile
  3078  0014FC  0E42               	movlw	66
  3079  0014FE                     i2u127_47:
  3080  0014FE  2EE8               	decfsz	wreg,f,c
  3081  001500  D7FE               	bra	i2u127_47
  3082  001502  D000               	nop2	
  3083  001504  968C               	bcf	3980,3,c	;volatile
  3084  001506  0EA0               	movlw	160
  3085  001508                     i2u128_47:
  3086  001508  D000               	nop2	
  3087  00150A  2EE8               	decfsz	wreg,f,c
  3088  00150C  D7FD               	bra	i2u128_47
  3089  00150E  B050               	btfsc	_LCDinterruptState,0,c
  3090  001510  D002               	bra	i2u49_45
  3091  001512  9EF2               	bcf	intcon,7,c	;volatile
  3092  001514  D001               	bra	i2u49_46
  3093  001516                     i2u49_45:
  3094  001516  8EF2               	bsf	intcon,7,c	;volatile
  3095  001518                     i2u49_46:
  3096  001518  0012               	return		;funcret
  3097  00151A                     __end_ofi2_lcdNibble:
  3098                           	opt stack 0
  3099                           pclatu	equ	0xFFB
  3100                           pclath	equ	0xFFA
  3101                           tblptru	equ	0xFF8
  3102                           tblptrh	equ	0xFF7
  3103                           tblptrl	equ	0xFF6
  3104                           tablat	equ	0xFF5
  3105                           prodh	equ	0xFF4
  3106                           prodl	equ	0xFF3
  3107                           intcon	equ	0xFF2
  3108                           postinc0	equ	0xFEE
  3109                           fsr0h	equ	0xFEA
  3110                           fsr0l	equ	0xFE9
  3111                           wreg	equ	0xFE8
  3112                           fsr1h	equ	0xFE2
  3113                           fsr1l	equ	0xFE1
  3114                           postinc2	equ	0xFDE
  3115                           postdec2	equ	0xFDD
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           pclatu	equ	0xFFB
  3120                           pclath	equ	0xFFA
  3121                           tblptru	equ	0xFF8
  3122                           tblptrh	equ	0xFF7
  3123                           tblptrl	equ	0xFF6
  3124                           tablat	equ	0xFF5
  3125                           prodh	equ	0xFF4
  3126                           prodl	equ	0xFF3
  3127                           intcon	equ	0xFF2
  3128                           postinc0	equ	0xFEE
  3129                           fsr0h	equ	0xFEA
  3130                           fsr0l	equ	0xFE9
  3131                           wreg	equ	0xFE8
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           postinc2	equ	0xFDE
  3135                           postdec2	equ	0xFDD
  3136                           fsr2h	equ	0xFDA
  3137                           fsr2l	equ	0xFD9
  3138                           status	equ	0xFD8
  3139                           
  3140                           	psect	rparam
  3141  0000                     pclatu	equ	0xFFB
  3142                           pclath	equ	0xFFA
  3143                           tblptru	equ	0xFF8
  3144                           tblptrh	equ	0xFF7
  3145                           tblptrl	equ	0xFF6
  3146                           tablat	equ	0xFF5
  3147                           prodh	equ	0xFF4
  3148                           prodl	equ	0xFF3
  3149                           intcon	equ	0xFF2
  3150                           postinc0	equ	0xFEE
  3151                           fsr0h	equ	0xFEA
  3152                           fsr0l	equ	0xFE9
  3153                           wreg	equ	0xFE8
  3154                           fsr1h	equ	0xFE2
  3155                           fsr1l	equ	0xFE1
  3156                           postinc2	equ	0xFDE
  3157                           postdec2	equ	0xFDD
  3158                           fsr2h	equ	0xFDA
  3159                           fsr2l	equ	0xFD9
  3160                           status	equ	0xFD8
  3161                           
  3162                           	psect	temp
  3163  000051                     btemp:
  3164                           	opt stack 0
  3165  000051                     	ds	1
  3166  0000                     int$flags	set	btemp
  3167  0000                     wtemp6	set	btemp+1
  3168                           pclatu	equ	0xFFB
  3169                           pclath	equ	0xFFA
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodh	equ	0xFF4
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           postinc0	equ	0xFEE
  3178                           fsr0h	equ	0xFEA
  3179                           fsr0l	equ	0xFE9
  3180                           wreg	equ	0xFE8
  3181                           fsr1h	equ	0xFE2
  3182                           fsr1l	equ	0xFE1
  3183                           postinc2	equ	0xFDE
  3184                           postdec2	equ	0xFDD
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    16
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     70      80
    BANK0           128      2       2
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_sendData->_I2C_Master_Write
    _I2C_init->_I2C_Master_Init
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_initLCD->i2_lcdInst
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2727
                                             69 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                           _I2C_init
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1731
                                             57 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     135
                                             47 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             52 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                             45 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                             48 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     135
                                             47 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0     113
                                             45 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_sendData                                         1     1      0     332
                                             48 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0     391
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     301
                                             46 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             45 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      4     0      4      90
                                             45 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interruptHandler                                    21    21      0    1291
                                             24 COMRAM    21    21      0
                          i2_initLCD
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (5) i2_printf                                            21    17      4     998
                                             12 COMRAM    12     8      4
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (6) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (6) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) i2_initLCD                                            1     1      0     135
                                              3 COMRAM     1     1      0
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (5) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
     _I2C_Master_Init
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_sendData
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _lcdNibble

 _interruptHandler (ROOT)
   i2_initLCD
     i2_lcdInst
       i2_lcdNibble
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2_putch
       i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2       2       5        1.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     46      50       1       63.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      34        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr  3 14:13:51 2018

                __CFG_CPD$ON 000000           i2___lwdiv@dividend 0001                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          l230 1038                          l242 10CC  
                        l154 13C4                          l243 111A                          l155 1408  
                        l244 10D2                          l236 1062                          l229 1028  
                        l238 108A                          l651 1538                          l652 1530  
                        l661 166C                          l662 1664                          l655 1558  
                        l656 1562                          l665 1684                          l666 168E  
               __CFG_CPB$OFF 000000                          u910 1670                          u835 1458  
                        u836 145A                          u845 1498                          u846 149A  
                        u880 153C                          u970 10BA                          u990 1122  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1831 108E                         _ADON 007E10                         STR_1 1011  
                       STR_2 1019                         STR_3 1019                         u1107 1414  
                       u1117 1764                         u1070 13D0                         u1127 15C4  
                       u1080 1402                         u1137 15F8                         u1147 1778  
                       u1157 1440                         _LATA 000F89                         u1078 13D2  
                       _LATB 000F8A                         u1167 144A                         _LATC 000F8B  
                       _LATD 000F8C                         u1177 1480                         _LATE 000F8D  
                       u1187 148A                         _RBIE 007F93                         _RBIF 007F90  
                       _main 136A     __end_of_interruptHandler 136A                         fsr0h 000FEA  
                       fsr1h 000FE2           i2___lwdiv@quotient 0005                         fsr2h 000FDA  
                       fsr0l 000FE9                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 0051             __end_of_I2C_init 1704                         prodh 000FF4  
                       prodl 000FF3                         start 000E                __CFG_IESO$OFF 000000  
            __end_ofi2_putch 1794                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
                i2_lcdNibble 149C             __end_of_LCD_LEFT 100C             ?_I2C_Master_Init 002E  
           ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001                        ?_main 0001  
            __end_of___lwdiv 156C              __end_of___lwmod 1698                        i2l230 1156  
                      i2l242 11EA                        i2l243 1238                        i2l244 11F0  
                      i2l236 1180                        i2l164 12F4                        i2l229 1146  
                      i2l238 11A8                        i2l651 158A                        i2l652 1582  
                      i2l661 16AE                        i2l662 16A6                        i2l655 15AA  
                      i2l656 15B4                        i2l665 16C6                        i2l666 16D0  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000              __end_of_lcdInst 1780               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000              __end_of_initLCD 160A               __CFG_EBTRB$OFF 000000  
            __end_of_dpowers 100B                        _putch 1758                        pclath 000FFA  
                      tablat 000FF5            _LCDinterruptState 0050                        status 000FD8  
                      wtemp6 0052               __CFG_PBADEN$ON 000000        __size_of_I2C_sendData 0022  
           __end_ofi2_printf 125A           __size_ofi2___lwdiv 0052           __size_ofi2___lwmod 0042  
            __initialization 1726           __size_ofi2_lcdInst 0014                 __end_of_main 141E  
                 i2printf@ap 0012           __size_ofi2_initLCD 004C            __end_of_LCD_RIGHT 100D  
                     ??_main 0046                __activetblptr 000002            ?_I2C_Master_Start 0001  
          ?_I2C_Master_Write 002F           ??_I2C_Master_Start 002F                       _ADCON0 000FC2  
                     _ADCON1 000FC1           ??_I2C_Master_Write 0031                       _ADRESH 000FC4  
                     _ADRESL 000FC3              i2lcdNibble@data 0002                       ?_putch 0001  
               _I2C_sendData 1704              i2lcdNibble@temp 0001                       i2l1671 131E  
                     i2l1577 11AC                    ??i2_putch 0003                       _SSPADD 000FC8  
                     _SSPBUF 000FC9               __CFG_XINST$OFF 000000               __CFG_STVREN$ON 000000  
                  ??___lwdiv 0032                    ??___lwmod 0039                       clear_0 172C  
                  ??_lcdInst 0030                       _printf 101E                    ??_initLCD 0031  
          __end_ofi2___lwdiv 15BE                 __mediumconst 0000            __end_ofi2___lwmod 16DA  
                  ?_I2C_init 0001                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8            __end_ofi2_lcdInst 17A8            __end_ofi2_initLCD 1656  
                 __accesstop 0080      __end_of__initialization 1732                ___rparam_used 000001  
         i2___lwmod@dividend 0008               __pcstackCOMRAM 0001                __end_of_putch 176C  
                i2printf@val 0016           __size_of_lcdNibble 007E                  i2putch@data 0003  
                 ??_I2C_init 0032                    ?i2_printf 000D                      ??_putch 0030  
          ?_interruptHandler 0001           ??_interruptHandler 0019                 ?i2_lcdNibble 0001  
                    ?_printf 003A                      i2u60_40 16B2                   ??i2_printf 0011  
                    i2u48_45 14D6                      i2u48_46 14D8                      i2u57_40 158E  
                    i2u81_40 12B4                      i2u49_45 1516                      i2u49_46 1518  
                    i2u74_40 11D8                      i2u81_48 12B6                      i2u76_40 1240  
       lcd@LCDinterruptState 004F                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
                    _SSPSTAT 000FC7                      _B_count 004D                      i2_putch 1780  
                    _N_count 004B            __end_of_lcdNibble 149C                      _S_count 0049  
                    __Hparam 0000                      __Lparam 0000                      _W_count 0047  
                    ___lwdiv 151A                      ___lwmod 1656                 __psmallconst 1000  
                    __pcinit 1726                      __ramtop 1000                      _lcdInst 176C  
                    __ptext0 136A                      __ptext1 101E                      __ptext2 1758  
                    __ptext3 1656                      __ptext4 151A                      __ptext5 15BE  
                    __ptext6 176C                      __ptext7 141E                      __ptext8 1704  
                    __ptext9 16DA              __size_of_printf 011E                      _initLCD 15BE  
                    _dpowers 1001                    _LCD_RIGHT 100C     __size_of_I2C_Master_Init 0018  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008               __pintcode_body 125A  
       end_of_initialization 1732        __end_of_LCD_SIZE_HORZ 100F        __end_of_LCD_SIZE_VERT 100E  
              __Lmediumconst 0000                      int_func 125A    __size_of_I2C_Master_Start 0008  
  __size_of_I2C_Master_Write 000A                      printf@c 0045                      printf@f 003A  
                    postdec2 000FDD                      postinc0 000FEE                      postinc2 000FDE  
                  _PORTBbits 000F81                    _TRISBbits 000F93                    _TRISCbits 000F94  
          __size_of_I2C_init 002A            i2___lwdiv@divisor 0003                    i2___lwdiv 156C  
                  i2___lwmod 1698            i2___lwdiv@counter 0007                    i2_lcdInst 1794  
                  i2_initLCD 160A         __size_ofi2_lcdNibble 007E                i2lcdInst@data 0003  
      interruptHandler@input 002C               __end_of_printf 113C                 i2printf@flag 0014  
               i2printf@prec 0015          start_initialization 1726                    i2printf@c 0018  
                  i2printf@f 000D                   ?i2___lwdiv 0001                   ?i2___lwmod 0008  
          __size_ofi2_printf 011E            ??_I2C_Master_Init 0032            ??_I2C_Master_Wait 002E  
                 ?i2_lcdInst 0001            ??_I2C_Master_Stop 002F             __CFG_OSC$INTIO67 000000  
                 ?i2_initLCD 0001     I2C_Master_Init@clockFreq 002E             __CFG_LPT1OSC$OFF 000000  
                   ??_printf 003E    __size_of_interruptHandler 1362                  __pbssCOMRAM 0047  
              __pcstackBANK0 0080            i2___lwmod@divisor 000A            i2___lwmod@counter 000C  
                   ?i2_putch 0001             _I2C_Master_Start 17CC             _I2C_Master_Write 17BA  
           ___lwdiv@dividend 002E            __CFG_CCP2MX$PORTC 000000                    __pintcode 0008  
                  _lcdNibble 141E                     ?___lwdiv 002E                     ?___lwmod 0035  
                   ?_lcdInst 0001                     ?_initLCD 0001                  __smallconst 1000  
                   _I2C_init 16DA             ___lwdiv@quotient 0033                ?_I2C_sendData 0001  
                ??i2___lwdiv 0005                  ??i2___lwmod 000C               __size_of_putch 0014  
                   _LCD_LEFT 100B                  ??i2_lcdInst 0003                     _LATCbits 000F8B  
                   _LATDbits 000F8C                  ??i2_initLCD 0004                     i2u120_47 1314  
                   i2u121_47 178C                     i2u122_47 1610                     i2u123_47 1644  
                   i2u124_47 17A0                     i2u125_47 14BE                     i2u126_47 14C8  
                   i2u127_47 14FE                     i2u119_47 12EC                     i2u128_47 1508  
           __CFG_WDTPS$32768 000000                   ?_lcdNibble 0001                   _ADCON0bits 000FC2  
                 _ADCON2bits 000FC0                lcdNibble@data 002F                   printf@flag 0041  
              lcdNibble@temp 002E                   printf@prec 0042                    main@input 0080  
                   i2_printf 113C               ??_I2C_sendData 0031               _LCD_HORZ_LIMIT 1010  
           __size_ofi2_putch 0014                     __Hrparam 0000        I2C_sendData@char_data 0031  
                   __Lrparam 0000           __CFG_BOREN$SBORDIS 000000             __size_of___lwdiv 0052  
           __size_of___lwmod 0042             _interruptHandler 0008             __size_of_lcdInst 0014  
            _I2C_Master_Init 1740             __size_of_initLCD 004C              _I2C_Master_Wait 17A8  
            _I2C_Master_Stop 17C4       __end_of_LCD_HORZ_LIMIT 1011              ___lwdiv@divisor 0030  
            ___lwdiv@counter 0032                     __ptext10 17BA                     __ptext11 17C4  
                   __ptext20 160A                     __ptext12 17CC                     __ptext21 1794  
                   __ptext13 17A8                     __ptext22 149C                     __ptext14 1740  
                   __ptext16 113C                     __ptext17 1780                     __ptext18 1698  
                   __ptext19 156C               _LCD_VERT_LIMIT 100F                __size_of_main 00B4  
              ??i2_lcdNibble 0001                  ??_lcdNibble 002E                     int$flags 0051  
                  printf@val 0043  I2C_Master_Write@byteToWrite 002F                    putch@data 0030  
   __end_of_I2C_Master_Start 17D4                  _OSCTUNEbits 000F9B     __end_of_I2C_Master_Write 17C4  
                 _INTCONbits 000FF2       __end_of_LCD_VERT_LIMIT 1010                     intlevel2 0000  
              _LCD_SIZE_HORZ 100E             ___lwmod@dividend 0035                _LCD_SIZE_VERT 100D  
                 _OSCCONbits 000FD3                     printf@ap 003F         __end_of_I2C_sendData 1726  
    __end_of_I2C_Master_Init 1758      __end_of_I2C_Master_Wait 17BA      __end_of_I2C_Master_Stop 17CC  
                lcdInst@data 0030          __end_ofi2_lcdNibble 151A              ___lwmod@divisor 0037  
            ___lwmod@counter 0039                  _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
