

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 30 23:55:24 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4620 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	smallconst
    74  001000                     __psmallconst:
    75                           	opt stack 0
    76  001000  00                 	db	0
    77  001001                     _dpowers:
    78                           	opt stack 0
    79  001001  0001               	dw	1
    80  001003  000A               	dw	10
    81  001005  0064               	dw	100
    82  001007  03E8               	dw	1000
    83  001009  2710               	dw	10000
    84  00100B                     __end_of_dpowers:
    85                           	opt stack 0
    86  00100B                     _LCD_LEFT:
    87                           	opt stack 0
    88  00100B  00                 	db	0
    89  00100C                     __end_of_LCD_LEFT:
    90                           	opt stack 0
    91  00100C                     _LCD_RIGHT:
    92                           	opt stack 0
    93  00100C  01                 	db	1
    94  00100D                     __end_of_LCD_RIGHT:
    95                           	opt stack 0
    96  00100D                     _LCD_SIZE_VERT:
    97                           	opt stack 0
    98  00100D  02                 	db	2
    99  00100E                     __end_of_LCD_SIZE_VERT:
   100                           	opt stack 0
   101  00100E                     _LCD_SIZE_HORZ:
   102                           	opt stack 0
   103  00100E  10                 	db	16
   104  00100F                     __end_of_LCD_SIZE_HORZ:
   105                           	opt stack 0
   106  00100F                     _LCD_VERT_LIMIT:
   107                           	opt stack 0
   108  00100F  02                 	db	2
   109  001010                     __end_of_LCD_VERT_LIMIT:
   110                           	opt stack 0
   111  001010                     _LCD_HORZ_LIMIT:
   112                           	opt stack 0
   113  001010  28                 	db	40
   114  001011                     __end_of_LCD_HORZ_LIMIT:
   115                           	opt stack 0
   116  0000                     _SSPBUF	set	4041
   117  0000                     _SSPCON2bits	set	4037
   118  0000                     _SSPADD	set	4040
   119  0000                     _SSPCON2	set	4037
   120  0000                     _SSPCON1	set	4038
   121  0000                     _SSPSTAT	set	4039
   122  0000                     _SSPCON1bits	set	4038
   123  0000                     _ADRESL	set	4035
   124  0000                     _ADRESH	set	4036
   125  0000                     _ADCON0bits	set	4034
   126  0000                     _PORTBbits	set	3969
   127  0000                     _TRISBbits	set	3987
   128  0000                     _TRISCbits	set	3988
   129  0000                     _LATCbits	set	3979
   130  0000                     _ADCON2bits	set	4032
   131  0000                     _ADCON1	set	4033
   132  0000                     _ADCON0	set	4034
   133  0000                     _TRISE	set	3990
   134  0000                     _TRISD	set	3989
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISB	set	3987
   137  0000                     _TRISA	set	3986
   138  0000                     _LATE	set	3981
   139  0000                     _LATC	set	3979
   140  0000                     _LATB	set	3978
   141  0000                     _LATA	set	3977
   142  0000                     _OSCTUNEbits	set	3995
   143  0000                     _OSCCON	set	4051
   144  0000                     _INTCONbits	set	4082
   145  0000                     _LATD	set	3980
   146  0000                     _LATDbits	set	3980
   147  0000                     _ADON	set	32272
   148  0000                     _RBIF	set	32656
   149  0000                     _RBIE	set	32659
   150  001011                     STR_1:
   151  001011  42                 	db	66	;'B'
   152  001012  5F                 	db	95	;'_'
   153  001013  63                 	db	99	;'c'
   154  001014  6F                 	db	111	;'o'
   155  001015  75                 	db	117	;'u'
   156  001016  6E                 	db	110	;'n'
   157  001017  74                 	db	116	;'t'
   158  001018  3A                 	db	58	;':'
   159  001019  25                 	db	37
   160  00101A  64                 	db	100	;'d'
   161  00101B  00                 	db	0
   162  0000                     
   163                           ; #config settings
   164  00101C  00                 	db	0	; dummy byte at the end
   165  0000                     
   166                           	psect	cinit
   167  001706                     __pcinit:
   168                           	opt stack 0
   169  001706                     start_initialization:
   170                           	opt stack 0
   171  001706                     __initialization:
   172                           	opt stack 0
   173                           
   174                           ; Clear objects allocated to COMRAM (10 bytes)
   175  001706  EE00  F047         	lfsr	0,__pbssCOMRAM
   176  00170A  0E0A               	movlw	10
   177  00170C                     clear_0:
   178  00170C  6AEE               	clrf	postinc0,c
   179  00170E  06E8               	decf	wreg,f,c
   180  001710  E1FD               	bnz	clear_0
   181  001712                     end_of_initialization:
   182                           	opt stack 0
   183  001712                     __end_of__initialization:
   184                           	opt stack 0
   185  001712  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   186  001714  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   187  001716  0E00               	movlw	low (__Lmediumconst shr (0+16))
   188  001718  6EF8               	movwf	tblptru,c
   189  00171A  0100               	movlb	0
   190  00171C  EFA1  F009         	goto	_main	;jump to C main() function
   191                           tblptru	equ	0xFF8
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           
   195                           	psect	bssCOMRAM
   196  000047                     __pbssCOMRAM:
   197                           	opt stack 0
   198  000047                     _W_count:
   199                           	opt stack 0
   200  000047                     	ds	2
   201  000049                     _S_count:
   202                           	opt stack 0
   203  000049                     	ds	2
   204  00004B                     _N_count:
   205                           	opt stack 0
   206  00004B                     	ds	2
   207  00004D                     _B_count:
   208                           	opt stack 0
   209  00004D                     	ds	2
   210  00004F                     	ds	1
   211  000050                     _LCDinterruptState:
   212                           	opt stack 0
   213  000050                     	ds	1
   214                           tblptru	equ	0xFF8
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           
   218                           	psect	cstackBANK0
   219  000080                     __pcstackBANK0:
   220                           	opt stack 0
   221  000080                     main@input:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x0
   225  000080                     	ds	2
   226                           tblptru	equ	0xFF8
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           
   230                           	psect	cstackCOMRAM
   231  000001                     __pcstackCOMRAM:
   232                           	opt stack 0
   233  000001                     ?i2___lwdiv:
   234                           	opt stack 0
   235  000001                     i2lcdNibble@temp:
   236                           	opt stack 0
   237  000001                     i2___lwdiv@dividend:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x0
   241  000001                     	ds	1
   242  000002                     i2lcdNibble@data:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x1
   246  000002                     	ds	1
   247  000003                     i2lcdInst@data:
   248                           	opt stack 0
   249  000003                     i2putch@data:
   250                           	opt stack 0
   251  000003                     i2___lwdiv@divisor:
   252                           	opt stack 0
   253                           
   254                           ; 2 bytes @ 0x2
   255  000003                     	ds	1
   256  000004                     ??i2_initLCD:
   257                           
   258                           ; 1 bytes @ 0x3
   259  000004                     	ds	1
   260  000005                     i2___lwdiv@quotient:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x4
   264  000005                     	ds	2
   265  000007                     i2___lwdiv@counter:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0x6
   269  000007                     	ds	1
   270  000008                     ?i2___lwmod:
   271                           	opt stack 0
   272  000008                     i2___lwmod@dividend:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x7
   276  000008                     	ds	2
   277  00000A                     i2___lwmod@divisor:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x9
   281  00000A                     	ds	2
   282  00000C                     i2___lwmod@counter:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0xB
   286  00000C                     	ds	1
   287  00000D                     ?i2_printf:
   288                           	opt stack 0
   289  00000D                     i2printf@f:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0xC
   293  00000D                     	ds	4
   294  000011                     ??i2_printf:
   295                           
   296                           ; 1 bytes @ 0x10
   297  000011                     	ds	1
   298  000012                     i2printf@ap:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x11
   302  000012                     	ds	2
   303  000014                     i2printf@flag:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x13
   307  000014                     	ds	1
   308  000015                     i2printf@prec:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x14
   312  000015                     	ds	1
   313  000016                     i2printf@val:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x15
   317  000016                     	ds	2
   318  000018                     i2printf@c:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x17
   322  000018                     	ds	1
   323  000019                     ??_interruptHandler:
   324                           
   325                           ; 1 bytes @ 0x18
   326  000019                     	ds	19
   327  00002C                     interruptHandler@input:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x2B
   331  00002C                     	ds	2
   332  00002E                     ??_I2C_Master_Wait:
   333  00002E                     ?___lwdiv:
   334                           	opt stack 0
   335  00002E                     lcdNibble@temp:
   336                           	opt stack 0
   337  00002E                     ___lwdiv@dividend:
   338                           	opt stack 0
   339  00002E                     I2C_Master_Init@clockFreq:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0x2D
   343  00002E                     	ds	1
   344  00002F                     lcdNibble@data:
   345                           	opt stack 0
   346  00002F                     I2C_Master_Write@byteToWrite:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x2E
   350  00002F                     	ds	1
   351  000030                     lcdInst@data:
   352                           	opt stack 0
   353  000030                     putch@data:
   354                           	opt stack 0
   355  000030                     ___lwdiv@divisor:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x2F
   359  000030                     	ds	1
   360  000031                     ??_initLCD:
   361  000031                     I2C_sendData@char_data:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x30
   365  000031                     	ds	1
   366  000032                     ___lwdiv@counter:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x31
   370  000032                     	ds	1
   371  000033                     ___lwdiv@quotient:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x32
   375  000033                     	ds	2
   376  000035                     ?___lwmod:
   377                           	opt stack 0
   378  000035                     ___lwmod@dividend:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x34
   382  000035                     	ds	2
   383  000037                     ___lwmod@divisor:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x36
   387  000037                     	ds	2
   388  000039                     ___lwmod@counter:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x38
   392  000039                     	ds	1
   393  00003A                     ?_printf:
   394                           	opt stack 0
   395  00003A                     printf@f:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x39
   399  00003A                     	ds	4
   400  00003E                     ??_printf:
   401                           
   402                           ; 1 bytes @ 0x3D
   403  00003E                     	ds	1
   404  00003F                     printf@ap:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x3E
   408  00003F                     	ds	2
   409  000041                     printf@flag:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x40
   413  000041                     	ds	1
   414  000042                     printf@prec:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x41
   418  000042                     	ds	1
   419  000043                     printf@val:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x42
   423  000043                     	ds	2
   424  000045                     printf@c:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x44
   428  000045                     	ds	1
   429  000046                     ??_main:
   430                           
   431                           ; 1 bytes @ 0x45
   432  000046                     	ds	1
   433                           tblptru	equ	0xFF8
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 28 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  input           2    0[BANK0 ] int 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;Total ram usage:        3 bytes
   461 ;; Hardware stack levels required when called:    7
   462 ;; This function calls:
   463 ;;		_I2C_init
   464 ;;		_I2C_sendData
   465 ;;		_initLCD
   466 ;;		_lcdInst
   467 ;;		_printf
   468 ;; This function is called by:
   469 ;;		Startup code after reset
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text0
   474  001342                     __ptext0:
   475                           	opt stack 0
   476  001342                     _main:
   477                           	opt stack 24
   478                           
   479                           ;main.c: 32: OSCCON = 0xF2;
   480                           
   481                           ;incstack = 0
   482  001342  0EF2               	movlw	242
   483  001344  6ED3               	movwf	4051,c	;volatile
   484                           
   485                           ;main.c: 39: OSCTUNEbits.PLLEN = 1;
   486  001346  8C9B               	bsf	3995,6,c	;volatile
   487                           
   488                           ;main.c: 43: LATA = 0x00;
   489  001348  0E00               	movlw	0
   490  00134A  6E89               	movwf	3977,c	;volatile
   491                           
   492                           ;main.c: 44: LATB = 0x00;
   493  00134C  0E00               	movlw	0
   494  00134E  6E8A               	movwf	3978,c	;volatile
   495                           
   496                           ;main.c: 45: LATC = 0x00;
   497  001350  0E00               	movlw	0
   498  001352  6E8B               	movwf	3979,c	;volatile
   499                           
   500                           ;main.c: 46: LATD = 0x00;
   501  001354  0E00               	movlw	0
   502  001356  6E8C               	movwf	3980,c	;volatile
   503                           
   504                           ;main.c: 47: LATE = 0x00;
   505  001358  0E00               	movlw	0
   506  00135A  6E8D               	movwf	3981,c	;volatile
   507                           
   508                           ;main.c: 51: TRISA = 0xFF;
   509  00135C  6892               	setf	3986,c	;volatile
   510                           
   511                           ;main.c: 52: TRISB = 0xFF;
   512  00135E  6893               	setf	3987,c	;volatile
   513                           
   514                           ;main.c: 53: TRISC = 0x00;
   515  001360  0E00               	movlw	0
   516  001362  6E94               	movwf	3988,c	;volatile
   517                           
   518                           ;main.c: 54: TRISD = 0x00;
   519  001364  0E00               	movlw	0
   520  001366  6E95               	movwf	3989,c	;volatile
   521                           
   522                           ;main.c: 55: TRISE = 0x00;
   523  001368  0E00               	movlw	0
   524  00136A  6E96               	movwf	3990,c	;volatile
   525                           
   526                           ;main.c: 58: ADCON0 = 0x00;
   527  00136C  0E00               	movlw	0
   528  00136E  6EC2               	movwf	4034,c	;volatile
   529                           
   530                           ;main.c: 59: ADCON1 = 0b00001111;
   531  001370  0E0F               	movlw	15
   532  001372  6EC1               	movwf	4033,c	;volatile
   533                           
   534                           ;main.c: 60: ADCON2bits.ADFM = 1;
   535  001374  8EC0               	bsf	4032,7,c	;volatile
   536                           
   537                           ;main.c: 65: (INTCONbits.GIE = 1);
   538  001376  8EF2               	bsf	intcon,7,c	;volatile
   539                           
   540                           ;main.c: 66: initLCD();
   541  001378  ECCF  F00A         	call	_initLCD	;wreg free
   542                           
   543                           ;main.c: 67: I2C_init();
   544  00137C  EC5D  F00B         	call	_I2C_init	;wreg free
   545                           
   546                           ;main.c: 72: LATCbits.LATC0 = 1;
   547  001380  808B               	bsf	3979,0,c	;volatile
   548                           
   549                           ;main.c: 73: TRISCbits.RC0 = 0;
   550  001382  9094               	bcf	3988,0,c	;volatile
   551                           
   552                           ;main.c: 76: RBIE = 1;
   553  001384  86F2               	bsf	intcon,3,c	;volatile
   554                           
   555                           ;main.c: 80: printf("B_count:%d",B_count);
   556  001386  0E11               	movlw	low STR_1
   557  001388  6E3A               	movwf	printf@f,c
   558  00138A  0E10               	movlw	high STR_1
   559  00138C  6E3B               	movwf	printf@f+1,c
   560  00138E  C04D  F03C         	movff	_B_count,?_printf+2
   561  001392  C04E  F03D         	movff	_B_count+1,?_printf+3
   562  001396  EC0F  F008         	call	_printf	;wreg free
   563                           
   564                           ;main.c: 81: initLCD();
   565  00139A  ECCF  F00A         	call	_initLCD	;wreg free
   566                           
   567                           ;main.c: 83: I2C_sendData('5');
   568  00139E  0E35               	movlw	53
   569  0013A0  EC72  F00B         	call	_I2C_sendData
   570  0013A4                     
   571                           ;main.c: 86: TRISBbits.RB5 = 1;
   572  0013A4  8A93               	bsf	3987,5,c	;volatile
   573                           
   574                           ;main.c: 87: int input = PORTBbits.RB5;
   575  0013A6  AA81               	btfss	3969,5,c	;volatile
   576  0013A8  D003               	goto	u1050
   577  0013AA  6A46               	clrf	??_main& (0+255),c
   578  0013AC  2A46               	incf	??_main& (0+255),f,c
   579  0013AE  D001               	goto	u1058
   580  0013B0                     u1050:
   581  0013B0  6A46               	clrf	??_main& (0+255),c
   582  0013B2                     u1058:
   583  0013B2  5046               	movf	??_main,w,c
   584  0013B4  0100               	movlb	0	; () banked
   585  0013B6  6F80               	movwf	main@input& (0+255),b
   586  0013B8  6B81               	clrf	(main@input+1)& (0+255),b
   587                           
   588                           ; BSR set to: 0
   589                           ;main.c: 88: initLCD();
   590  0013BA  ECCF  F00A         	call	_initLCD	;wreg free
   591                           
   592                           ;main.c: 89: printf("%d",B_count);
   593  0013BE  0E19               	movlw	low (STR_1+8)
   594  0013C0  6E3A               	movwf	printf@f,c
   595  0013C2  0E10               	movlw	high (STR_1+8)
   596  0013C4  6E3B               	movwf	printf@f+1,c
   597  0013C6  C04D  F03C         	movff	_B_count,?_printf+2
   598  0013CA  C04E  F03D         	movff	_B_count+1,?_printf+3
   599  0013CE  EC0F  F008         	call	_printf	;wreg free
   600  0013D2  D7E8               	goto	l154
   601  0013D4                     
   602                           ;main.c: 104: printf("B_count:%d",B_count);
   603  0013D4  0E11               	movlw	low STR_1
   604  0013D6  6E3A               	movwf	printf@f,c
   605  0013D8  0E10               	movlw	high STR_1
   606  0013DA  6E3B               	movwf	printf@f+1,c
   607  0013DC  C04D  F03C         	movff	_B_count,?_printf+2
   608  0013E0  C04E  F03D         	movff	_B_count+1,?_printf+3
   609  0013E4  EC0F  F008         	call	_printf	;wreg free
   610                           
   611                           ;main.c: 105: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
   612  0013E8  0E80               	movlw	128
   613  0013EA  ECA6  F00B         	call	_lcdInst
   614  0013EE  0E34               	movlw	52
   615  0013F0  6E46               	movwf	??_main& (0+255),c
   616  0013F2  0EF2               	movlw	242
   617  0013F4                     u1077:
   618  0013F4  2EE8               	decfsz	wreg,f,c
   619  0013F6  D7FE               	bra	u1077
   620  0013F8  2E46               	decfsz	??_main& (0+255),f,c
   621  0013FA  D7FC               	bra	u1077
   622  0013FC  D7EB               	goto	l157
   623  0013FE                     __end_of_main:
   624                           	opt stack 0
   625                           tblptru	equ	0xFF8
   626                           intcon	equ	0xFF2
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           
   630 ;; *************** function _printf *****************
   631 ;; Defined at:
   632 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  f               2   57[COMRAM] PTR const unsigned char 
   635 ;;		 -> STR_4(3), STR_3(11), STR_2(3), STR_1(11), 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  tmpval          4    0        struct .
   638 ;;  cp              3    0        PTR const unsigned char 
   639 ;;  val             2   66[COMRAM] unsigned int 
   640 ;;  ap              2   62[COMRAM] PTR void [1]
   641 ;;		 -> ?i2_printf(2), ?_printf(2), 
   642 ;;  len             2    0        unsigned int 
   643 ;;  c               1   68[COMRAM] char 
   644 ;;  prec            1   65[COMRAM] char 
   645 ;;  flag            1   64[COMRAM] unsigned char 
   646 ;; Return value:  Size  Location     Type
   647 ;;                  2   57[COMRAM] int 
   648 ;; Registers used:
   649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;Total ram usage:       12 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    6
   662 ;; This function calls:
   663 ;;		___lwdiv
   664 ;;		___lwmod
   665 ;;		_putch
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text1
   672  00101E                     __ptext1:
   673                           	opt stack 0
   674  00101E                     _printf:
   675                           	opt stack 24
   676                           
   677                           ;doprnt.c: 466: va_list ap;
   678                           ;doprnt.c: 499: signed char c;
   679                           ;doprnt.c: 506: signed char prec;
   680                           ;doprnt.c: 508: unsigned char flag;
   681                           ;doprnt.c: 523: union {
   682                           ;doprnt.c: 524: unsigned long vd;
   683                           ;doprnt.c: 525: double integ;
   684                           ;doprnt.c: 526: } tmpval;
   685                           ;doprnt.c: 528: unsigned int val;
   686                           ;doprnt.c: 529: unsigned len;
   687                           ;doprnt.c: 530: const char * cp;
   688                           ;doprnt.c: 533: *ap = __va_start();
   689                           
   690                           ;incstack = 0
   691  00101E  0E3C               	movlw	low (?_printf+2)
   692  001020  6E3F               	movwf	printf@ap,c
   693  001022  0E00               	movlw	high (?_printf+2)
   694  001024  6E40               	movwf	printf@ap+1,c
   695                           
   696                           ;doprnt.c: 536: while(c = *f++) {
   697  001026  D07D               	goto	u970
   698  001028                     
   699                           ;doprnt.c: 538: if(c != '%')
   700  001028  0E25               	movlw	37
   701  00102A  1845               	xorwf	printf@c,w,c
   702  00102C  B4D8               	btfsc	status,2,c
   703  00102E  D004               	goto	l232
   704                           
   705                           ;doprnt.c: 540: {
   706                           ;doprnt.c: 541: (putch(c) );
   707  001030  5045               	movf	printf@c,w,c
   708  001032  EC9C  F00B         	call	_putch
   709                           
   710                           ;doprnt.c: 542: continue;
   711  001036  D075               	goto	u970
   712  001038                     l232:
   713                           
   714                           ;doprnt.c: 543: }
   715                           ;doprnt.c: 548: flag = 0;
   716  001038  0E00               	movlw	0
   717  00103A  6E41               	movwf	printf@flag,c
   718                           
   719                           ;doprnt.c: 822: }
   720                           
   721                           ;doprnt.c: 813: continue;
   722                           
   723                           ;doprnt.c: 802: default:
   724                           
   725                           ;doprnt.c: 698: case 'i':
   726                           ;doprnt.c: 699: break;
   727                           
   728                           ;doprnt.c: 697: case 'd':
   729                           
   730                           ;doprnt.c: 638: goto alldone;
   731                           
   732                           ;doprnt.c: 637: case 0:
   733                           
   734                           ;doprnt.c: 635: switch(c = *f++) {
   735  00103C  C03A  FFF6         	movff	printf@f,tblptrl
   736  001040  C03B  FFF7         	movff	printf@f+1,tblptrh
   737  001044  4A3A               	infsnz	printf@f,f,c
   738  001046  2A3B               	incf	printf@f+1,f,c
   739  001048                     	if	0	;tblptru may be non-zero
   740  001048                     	endif
   741  001048                     	if	0	;tblptru may be non-zero
   742  001048                     	endif
   743  001048  0008               	tblrd		*
   744  00104A  CFF5 F045          	movff	tablat,printf@c
   745  00104E  5045               	movf	printf@c,w,c
   746                           
   747                           ; Switch size 1, requested type "space"
   748                           ; Number of cases is 3, Range of values is 0 to 105
   749                           ; switch strategies available:
   750                           ; Name         Instructions Cycles
   751                           ; simple_byte           10     6 (average)
   752                           ;	Chosen strategy is simple_byte
   753  001050  0A00               	xorlw	0	; case 0
   754  001052  B4D8               	btfsc	status,2,c
   755  001054  0012               	return	
   756  001056  0A64               	xorlw	100	; case 100
   757  001058  B4D8               	btfsc	status,2,c
   758  00105A  D003               	goto	l238
   759  00105C  0A0D               	xorlw	13	; case 105
   760  00105E  A4D8               	btfss	status,2,c
   761  001060  D060               	goto	u970
   762  001062                     l238:
   763                           
   764                           ;doprnt.c: 1253: {
   765                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   766  001062  C03F  FFD9         	movff	printf@ap,fsr2l
   767  001066  C040  FFDA         	movff	printf@ap+1,fsr2h
   768  00106A  CFDE F043          	movff	postinc2,printf@val
   769  00106E  CFDD F044          	movff	postdec2,printf@val+1
   770  001072  0E02               	movlw	2
   771  001074  263F               	addwf	printf@ap,f,c
   772  001076  0E00               	movlw	0
   773  001078  2240               	addwfc	printf@ap+1,f,c
   774                           
   775                           ;doprnt.c: 1261: if((int)val < 0) {
   776  00107A  AE44               	btfss	printf@val+1,7,c
   777  00107C  D006               	goto	l240
   778                           
   779                           ;doprnt.c: 1262: flag |= 0x03;
   780  00107E  0E03               	movlw	3
   781  001080  1241               	iorwf	printf@flag,f,c
   782                           
   783                           ;doprnt.c: 1263: val = -val;
   784  001082  6C43               	negf	printf@val,c
   785  001084  1E44               	comf	printf@val+1,f,c
   786  001086  B0D8               	btfsc	status,0,c
   787  001088  2A44               	incf	printf@val+1,f,c
   788  00108A                     l240:
   789                           
   790                           ;doprnt.c: 1264: }
   791                           ;doprnt.c: 1266: }
   792                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   793  00108A  0E01               	movlw	1
   794  00108C  6E45               	movwf	printf@c,c
   795  00108E                     l1831:
   796  00108E  0E05               	movlw	5
   797  001090  1845               	xorwf	printf@c,w,c
   798  001092  B4D8               	btfsc	status,2,c
   799  001094  D012               	goto	u950
   800                           
   801                           ;doprnt.c: 1306: if(val < dpowers[c])
   802  001096  5045               	movf	printf@c,w,c
   803  001098  0D02               	mullw	2
   804  00109A  0E01               	movlw	low _dpowers
   805  00109C  24F3               	addwf	prodl,w,c
   806  00109E  6EF6               	movwf	tblptrl,c
   807  0010A0  0E10               	movlw	high _dpowers
   808  0010A2  20F4               	addwfc	prodh,w,c
   809  0010A4  6EF7               	movwf	tblptrh,c
   810  0010A6                     	if	0	;There are less than 3 active tblptr bytes
   811  0010A6                     	endif
   812  0010A6  0009               	tblrd		*+
   813  0010A8  50F5               	movf	tablat,w,c
   814  0010AA  5C43               	subwf	printf@val,w,c
   815  0010AC  0009               	tblrd		*+
   816  0010AE  50F5               	movf	tablat,w,c
   817  0010B0  5844               	subwfb	printf@val+1,w,c
   818  0010B2  A0D8               	btfss	status,0,c
   819  0010B4  D002               	goto	u950
   820                           
   821                           ;doprnt.c: 1307: break;
   822  0010B6  2A45               	incf	printf@c,f,c
   823  0010B8  D7EA               	goto	l1831
   824  0010BA                     u950:
   825                           
   826                           ;doprnt.c: 1422: {
   827                           ;doprnt.c: 1438: if(flag & 0x03)
   828  0010BA  C041  F03E         	movff	printf@flag,??_printf
   829  0010BE  0E03               	movlw	3
   830  0010C0  163E               	andwf	??_printf,f,c
   831  0010C2  B4D8               	btfsc	status,2,c
   832  0010C4  D003               	goto	l244
   833                           
   834                           ;doprnt.c: 1439: (putch('-') );
   835  0010C6  0E2D               	movlw	45
   836  0010C8  EC9C  F00B         	call	_putch
   837  0010CC                     l244:
   838                           
   839                           ;doprnt.c: 1469: }
   840                           ;doprnt.c: 1472: prec = c;
   841  0010CC  C045  F042         	movff	printf@c,printf@prec
   842                           
   843                           ;doprnt.c: 1474: while(prec--) {
   844  0010D0  D024               	goto	l245
   845  0010D2                     
   846                           ;doprnt.c: 1478: {
   847                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   848  0010D2  5042               	movf	printf@prec,w,c
   849  0010D4  0D02               	mullw	2
   850  0010D6  0E01               	movlw	low _dpowers
   851  0010D8  24F3               	addwf	prodl,w,c
   852  0010DA  6EF6               	movwf	tblptrl,c
   853  0010DC  0E10               	movlw	high _dpowers
   854  0010DE  20F4               	addwfc	prodh,w,c
   855  0010E0  6EF7               	movwf	tblptrh,c
   856  0010E2                     	if	0	;There are less than 3 active tblptr bytes
   857  0010E2                     	endif
   858  0010E2  0009               	tblrd		*+
   859  0010E4  CFF5 F030          	movff	tablat,___lwdiv@divisor
   860  0010E8  000A               	tblrd		*-
   861  0010EA  CFF5 F031          	movff	tablat,___lwdiv@divisor+1
   862  0010EE  C043  F02E         	movff	printf@val,___lwdiv@dividend
   863  0010F2  C044  F02F         	movff	printf@val+1,___lwdiv@dividend+1
   864  0010F6  EC7D  F00A         	call	___lwdiv	;wreg free
   865  0010FA  C02E  F035         	movff	?___lwdiv,___lwmod@dividend
   866  0010FE  C02F  F036         	movff	?___lwdiv+1,___lwmod@dividend+1
   867  001102  0E00               	movlw	0
   868  001104  6E38               	movwf	___lwmod@divisor+1,c
   869  001106  0E0A               	movlw	10
   870  001108  6E37               	movwf	___lwmod@divisor,c
   871  00110A  EC1B  F00B         	call	___lwmod	;wreg free
   872  00110E  5035               	movf	?___lwmod,w,c
   873  001110  0F30               	addlw	48
   874  001112  6E45               	movwf	printf@c,c
   875                           
   876                           ;doprnt.c: 1523: }
   877                           ;doprnt.c: 1524: (putch(c) );
   878  001114  5045               	movf	printf@c,w,c
   879  001116  EC9C  F00B         	call	_putch
   880  00111A                     l245:
   881  00111A  0642               	decf	printf@prec,f,c
   882  00111C  2842               	incf	printf@prec,w,c
   883  00111E  A4D8               	btfss	status,2,c
   884  001120  D7D8               	goto	l246
   885  001122                     u970:
   886  001122  C03A  FFF6         	movff	printf@f,tblptrl
   887  001126  C03B  FFF7         	movff	printf@f+1,tblptrh
   888  00112A  4A3A               	infsnz	printf@f,f,c
   889  00112C  2A3B               	incf	printf@f+1,f,c
   890  00112E                     	if	0	;tblptru may be non-zero
   891  00112E                     	endif
   892  00112E                     	if	0	;tblptru may be non-zero
   893  00112E                     	endif
   894  00112E  0008               	tblrd		*
   895  001130  CFF5 F045          	movff	tablat,printf@c
   896  001134  5045               	movf	printf@c,w,c
   897  001136  B4D8               	btfsc	status,2,c
   898  001138  0012               	return	
   899  00113A  D776               	goto	l231
   900  00113C                     __end_of_printf:
   901                           	opt stack 0
   902                           tblptru	equ	0xFF8
   903                           tblptrh	equ	0xFF7
   904                           tblptrl	equ	0xFF6
   905                           tablat	equ	0xFF5
   906                           prodh	equ	0xFF4
   907                           prodl	equ	0xFF3
   908                           intcon	equ	0xFF2
   909                           postinc0	equ	0xFEE
   910                           wreg	equ	0xFE8
   911                           postinc2	equ	0xFDE
   912                           postdec2	equ	0xFDD
   913                           fsr2h	equ	0xFDA
   914                           fsr2l	equ	0xFD9
   915                           status	equ	0xFD8
   916                           
   917 ;; *************** function _putch *****************
   918 ;; Defined at:
   919 ;;		line 24 in file "lcd.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  data            1    wreg     unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  data            1   47[COMRAM] unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;Total ram usage:        1 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    5
   940 ;; This function calls:
   941 ;;		_lcdNibble
   942 ;; This function is called by:
   943 ;;		_printf
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text2
   948  001738                     __ptext2:
   949                           	opt stack 0
   950  001738                     _putch:
   951                           	opt stack 24
   952                           
   953                           ;incstack = 0
   954                           ;putch@data stored from wreg
   955  001738  6E30               	movwf	putch@data,c
   956                           
   957                           ;lcd.c: 32: LATDbits.LATD2 = 1;
   958  00173A  848C               	bsf	3980,2,c	;volatile
   959                           
   960                           ;lcd.c: 33: lcdNibble(data);
   961  00173C  5030               	movf	putch@data,w,c
   962  00173E  ECFF  F009         	call	_lcdNibble
   963                           
   964                           ;lcd.c: 34: _delay((unsigned long)((100)*(32000000/4000000.0)));
   965  001742  0EA0               	movlw	160
   966  001744                     u1087:
   967  001744  D000               	nop2	
   968  001746  2EE8               	decfsz	wreg,f,c
   969  001748  D7FD               	bra	u1087
   970  00174A  0012               	return		;funcret
   971  00174C                     __end_of_putch:
   972                           	opt stack 0
   973                           tblptru	equ	0xFF8
   974                           tblptrh	equ	0xFF7
   975                           tblptrl	equ	0xFF6
   976                           tablat	equ	0xFF5
   977                           prodh	equ	0xFF4
   978                           prodl	equ	0xFF3
   979                           intcon	equ	0xFF2
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           postinc2	equ	0xFDE
   983                           postdec2	equ	0xFDD
   984                           fsr2h	equ	0xFDA
   985                           fsr2l	equ	0xFD9
   986                           status	equ	0xFD8
   987                           
   988 ;; *************** function ___lwmod *****************
   989 ;; Defined at:
   990 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwmod.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  dividend        2   52[COMRAM] unsigned int 
   993 ;;  divisor         2   54[COMRAM] unsigned int 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  counter         1   56[COMRAM] unsigned char 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  2   52[COMRAM] unsigned int 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;Total ram usage:        5 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    4
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_printf
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text3
  1020  001636                     __ptext3:
  1021                           	opt stack 0
  1022  001636                     ___lwmod:
  1023                           	opt stack 25
  1024                           
  1025                           ;incstack = 0
  1026  001636  5037               	movf	___lwmod@divisor,w,c
  1027  001638  1038               	iorwf	___lwmod@divisor+1,w,c
  1028  00163A  B4D8               	btfsc	status,2,c
  1029  00163C  D018               	goto	l668
  1030  00163E  0E01               	movlw	1
  1031  001640  6E39               	movwf	___lwmod@counter,c
  1032  001642  D004               	goto	l663
  1033  001644  90D8               	bcf	status,0,c
  1034  001646  3637               	rlcf	___lwmod@divisor,f,c
  1035  001648  3638               	rlcf	___lwmod@divisor+1,f,c
  1036  00164A  2A39               	incf	___lwmod@counter,f,c
  1037  00164C                     l663:
  1038  00164C  AE38               	btfss	___lwmod@divisor+1,7,c
  1039  00164E  D7FA               	goto	l664
  1040  001650                     u890:
  1041  001650  5037               	movf	___lwmod@divisor,w,c
  1042  001652  5C35               	subwf	___lwmod@dividend,w,c
  1043  001654  5038               	movf	___lwmod@divisor+1,w,c
  1044  001656  5836               	subwfb	___lwmod@dividend+1,w,c
  1045  001658  A0D8               	btfss	status,0,c
  1046  00165A  D004               	goto	l667
  1047  00165C  5037               	movf	___lwmod@divisor,w,c
  1048  00165E  5E35               	subwf	___lwmod@dividend,f,c
  1049  001660  5038               	movf	___lwmod@divisor+1,w,c
  1050  001662  5A36               	subwfb	___lwmod@dividend+1,f,c
  1051  001664                     l667:
  1052  001664  90D8               	bcf	status,0,c
  1053  001666  3238               	rrcf	___lwmod@divisor+1,f,c
  1054  001668  3237               	rrcf	___lwmod@divisor,f,c
  1055  00166A  2E39               	decfsz	___lwmod@counter,f,c
  1056  00166C  D7F1               	goto	u890
  1057  00166E                     l668:
  1058  00166E  C035  F035         	movff	___lwmod@dividend,?___lwmod
  1059  001672  C036  F036         	movff	___lwmod@dividend+1,?___lwmod+1
  1060  001676  0012               	return		;funcret
  1061  001678                     __end_of___lwmod:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           prodh	equ	0xFF4
  1068                           prodl	equ	0xFF3
  1069                           intcon	equ	0xFF2
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           postinc2	equ	0xFDE
  1073                           postdec2	equ	0xFDD
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function ___lwdiv *****************
  1079 ;; Defined at:
  1080 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  dividend        2   45[COMRAM] unsigned int 
  1083 ;;  divisor         2   47[COMRAM] unsigned int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  quotient        2   50[COMRAM] unsigned int 
  1086 ;;  counter         1   49[COMRAM] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2   45[COMRAM] unsigned int 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;Total ram usage:        7 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    4
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_printf
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text4
  1111  0014FA                     __ptext4:
  1112                           	opt stack 0
  1113  0014FA                     ___lwdiv:
  1114                           	opt stack 25
  1115                           
  1116                           ;incstack = 0
  1117  0014FA  0E00               	movlw	0
  1118  0014FC  6E34               	movwf	___lwdiv@quotient+1,c
  1119  0014FE  0E00               	movlw	0
  1120  001500  6E33               	movwf	___lwdiv@quotient,c
  1121  001502  5030               	movf	___lwdiv@divisor,w,c
  1122  001504  1031               	iorwf	___lwdiv@divisor+1,w,c
  1123  001506  B4D8               	btfsc	status,2,c
  1124  001508  D01C               	goto	l658
  1125  00150A  0E01               	movlw	1
  1126  00150C  6E32               	movwf	___lwdiv@counter,c
  1127  00150E  D004               	goto	l653
  1128  001510  90D8               	bcf	status,0,c
  1129  001512  3630               	rlcf	___lwdiv@divisor,f,c
  1130  001514  3631               	rlcf	___lwdiv@divisor+1,f,c
  1131  001516  2A32               	incf	___lwdiv@counter,f,c
  1132  001518                     l653:
  1133  001518  AE31               	btfss	___lwdiv@divisor+1,7,c
  1134  00151A  D7FA               	goto	l654
  1135  00151C                     u860:
  1136  00151C  90D8               	bcf	status,0,c
  1137  00151E  3633               	rlcf	___lwdiv@quotient,f,c
  1138  001520  3634               	rlcf	___lwdiv@quotient+1,f,c
  1139  001522  5030               	movf	___lwdiv@divisor,w,c
  1140  001524  5C2E               	subwf	___lwdiv@dividend,w,c
  1141  001526  5031               	movf	___lwdiv@divisor+1,w,c
  1142  001528  582F               	subwfb	___lwdiv@dividend+1,w,c
  1143  00152A  A0D8               	btfss	status,0,c
  1144  00152C  D005               	goto	l657
  1145  00152E  5030               	movf	___lwdiv@divisor,w,c
  1146  001530  5E2E               	subwf	___lwdiv@dividend,f,c
  1147  001532  5031               	movf	___lwdiv@divisor+1,w,c
  1148  001534  5A2F               	subwfb	___lwdiv@dividend+1,f,c
  1149  001536  8033               	bsf	___lwdiv@quotient,0,c
  1150  001538                     l657:
  1151  001538  90D8               	bcf	status,0,c
  1152  00153A  3231               	rrcf	___lwdiv@divisor+1,f,c
  1153  00153C  3230               	rrcf	___lwdiv@divisor,f,c
  1154  00153E  2E32               	decfsz	___lwdiv@counter,f,c
  1155  001540  D7ED               	goto	u860
  1156  001542                     l658:
  1157  001542  C033  F02E         	movff	___lwdiv@quotient,?___lwdiv
  1158  001546  C034  F02F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1159  00154A  0012               	return		;funcret
  1160  00154C                     __end_of___lwdiv:
  1161                           	opt stack 0
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           prodh	equ	0xFF4
  1167                           prodl	equ	0xFF3
  1168                           intcon	equ	0xFF2
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           postinc2	equ	0xFDE
  1172                           postdec2	equ	0xFDD
  1173                           fsr2h	equ	0xFDA
  1174                           fsr2l	equ	0xFD9
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function _initLCD *****************
  1178 ;; Defined at:
  1179 ;;		line 60 in file "lcd.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;Total ram usage:        1 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    6
  1200 ;; This function calls:
  1201 ;;		_lcdInst
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text5
  1208  00159E                     __ptext5:
  1209                           	opt stack 0
  1210  00159E                     _initLCD:
  1211                           	opt stack 24
  1212                           
  1213                           ;lcd.c: 68: _delay((unsigned long)((15)*(32000000/4000.0)));
  1214                           
  1215                           ;incstack = 0
  1216  00159E  0E9C               	movlw	156
  1217  0015A0  6E31               	movwf	??_initLCD& (0+255),c
  1218  0015A2  0ED7               	movlw	215
  1219  0015A4                     u1097:
  1220  0015A4  2EE8               	decfsz	wreg,f,c
  1221  0015A6  D7FE               	bra	u1097
  1222  0015A8  2E31               	decfsz	??_initLCD& (0+255),f,c
  1223  0015AA  D7FC               	bra	u1097
  1224  0015AC  F000               	nop	
  1225                           
  1226                           ;lcd.c: 69: lcdInst(0b00110011);
  1227  0015AE  0E33               	movlw	51
  1228  0015B0  ECA6  F00B         	call	_lcdInst
  1229                           
  1230                           ;lcd.c: 70: lcdInst(0b00110010);
  1231  0015B4  0E32               	movlw	50
  1232  0015B6  ECA6  F00B         	call	_lcdInst
  1233                           
  1234                           ;lcd.c: 71: lcdInst(0b00101000);
  1235  0015BA  0E28               	movlw	40
  1236  0015BC  ECA6  F00B         	call	_lcdInst
  1237                           
  1238                           ;lcd.c: 72: lcdInst(0b00001111);
  1239  0015C0  0E0F               	movlw	15
  1240  0015C2  ECA6  F00B         	call	_lcdInst
  1241                           
  1242                           ;lcd.c: 73: lcdInst(0b00000110);
  1243  0015C6  0E06               	movlw	6
  1244  0015C8  ECA6  F00B         	call	_lcdInst
  1245                           
  1246                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(32000000/4000.0)));;
  1247  0015CC  0E01               	movlw	1
  1248  0015CE  ECA6  F00B         	call	_lcdInst
  1249  0015D2  0E9C               	movlw	156
  1250  0015D4  6E31               	movwf	??_initLCD& (0+255),c
  1251  0015D6  0ED7               	movlw	215
  1252  0015D8                     u1107:
  1253  0015D8  2EE8               	decfsz	wreg,f,c
  1254  0015DA  D7FE               	bra	u1107
  1255  0015DC  2E31               	decfsz	??_initLCD& (0+255),f,c
  1256  0015DE  D7FC               	bra	u1107
  1257  0015E0  F000               	nop	
  1258                           
  1259                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  1260  0015E2  0E0F               	movlw	15
  1261  0015E4  ECA6  F00B         	call	_lcdInst
  1262  0015E8  0012               	return		;funcret
  1263  0015EA                     __end_of_initLCD:
  1264                           	opt stack 0
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           prodh	equ	0xFF4
  1270                           prodl	equ	0xFF3
  1271                           intcon	equ	0xFF2
  1272                           postinc0	equ	0xFEE
  1273                           wreg	equ	0xFE8
  1274                           postinc2	equ	0xFDE
  1275                           postdec2	equ	0xFDD
  1276                           fsr2h	equ	0xFDA
  1277                           fsr2l	equ	0xFD9
  1278                           status	equ	0xFD8
  1279                           
  1280 ;; *************** function _lcdInst *****************
  1281 ;; Defined at:
  1282 ;;		line 11 in file "lcd.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  data            1    wreg     unsigned char 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  data            1   47[COMRAM] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;Total ram usage:        1 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    5
  1303 ;; This function calls:
  1304 ;;		_lcdNibble
  1305 ;; This function is called by:
  1306 ;;		_initLCD
  1307 ;;		_main
  1308 ;;		_lcd_set_cursor
  1309 ;;		_lcd_shift_cursor
  1310 ;;		_lcd_shift_display
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text6
  1315  00174C                     __ptext6:
  1316                           	opt stack 0
  1317  00174C                     _lcdInst:
  1318                           	opt stack 25
  1319                           
  1320                           ;incstack = 0
  1321                           ;lcdInst@data stored from wreg
  1322  00174C  6E30               	movwf	lcdInst@data,c
  1323                           
  1324                           ;lcd.c: 19: LATDbits.LATD2 = 0;
  1325  00174E  948C               	bcf	3980,2,c	;volatile
  1326                           
  1327                           ;lcd.c: 20: lcdNibble(data);
  1328  001750  5030               	movf	lcdInst@data,w,c
  1329  001752  ECFF  F009         	call	_lcdNibble
  1330                           
  1331                           ;lcd.c: 21: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1332  001756  0EA0               	movlw	160
  1333  001758                     u1117:
  1334  001758  D000               	nop2	
  1335  00175A  2EE8               	decfsz	wreg,f,c
  1336  00175C  D7FD               	bra	u1117
  1337  00175E  0012               	return		;funcret
  1338  001760                     __end_of_lcdInst:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           prodh	equ	0xFF4
  1345                           prodl	equ	0xFF3
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           postinc2	equ	0xFDE
  1350                           postdec2	equ	0xFDD
  1351                           fsr2h	equ	0xFDA
  1352                           fsr2l	equ	0xFD9
  1353                           status	equ	0xFD8
  1354                           
  1355 ;; *************** function _lcdNibble *****************
  1356 ;; Defined at:
  1357 ;;		line 37 in file "lcd.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  data            1    wreg     unsigned char 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  data            1   46[COMRAM] unsigned char 
  1362 ;;  temp            1   45[COMRAM] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:        2 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    4
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_lcdInst
  1383 ;;		_putch
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text7
  1388  0013FE                     __ptext7:
  1389                           	opt stack 0
  1390  0013FE                     _lcdNibble:
  1391                           	opt stack 24
  1392                           
  1393                           ;incstack = 0
  1394                           ;lcdNibble@data stored from wreg
  1395  0013FE  6E2F               	movwf	lcdNibble@data,c
  1396                           
  1397                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
  1398  001400  502F               	movf	lcdNibble@data,w,c
  1399  001402  0BF0               	andlw	240
  1400  001404  6E2E               	movwf	lcdNibble@temp,c
  1401                           
  1402                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
  1403  001406  508C               	movf	3980,w,c	;volatile
  1404  001408  0B0F               	andlw	15
  1405  00140A  6E8C               	movwf	3980,c	;volatile
  1406                           
  1407                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
  1408  00140C  502E               	movf	lcdNibble@temp,w,c
  1409  00140E  108C               	iorwf	3980,w,c	;volatile
  1410  001410  6E8C               	movwf	3980,c	;volatile
  1411                           
  1412                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  1413  001412  0E00               	movlw	0
  1414  001414  BEF2               	btfsc	intcon,7,c	;volatile
  1415  001416  0E01               	movlw	1
  1416  001418  6E50               	movwf	_LCDinterruptState,c
  1417  00141A  9EF2               	bcf	intcon,7,c	;volatile
  1418  00141C  868C               	bsf	3980,3,c	;volatile
  1419  00141E  0E42               	movlw	66
  1420  001420                     u1127:
  1421  001420  2EE8               	decfsz	wreg,f,c
  1422  001422  D7FE               	bra	u1127
  1423  001424  D000               	nop2	
  1424  001426  968C               	bcf	3980,3,c	;volatile
  1425  001428  0EA0               	movlw	160
  1426  00142A                     u1137:
  1427  00142A  D000               	nop2	
  1428  00142C  2EE8               	decfsz	wreg,f,c
  1429  00142E  D7FD               	bra	u1137
  1430  001430  B050               	btfsc	_LCDinterruptState,0,c
  1431  001432  D002               	bra	u815
  1432  001434  9EF2               	bcf	intcon,7,c	;volatile
  1433  001436  D001               	bra	u816
  1434  001438                     u815:
  1435  001438  8EF2               	bsf	intcon,7,c	;volatile
  1436  00143A                     u816:
  1437                           
  1438                           ;lcd.c: 52: data = (unsigned char) (data << 4);
  1439  00143A  382F               	swapf	lcdNibble@data,w,c
  1440  00143C  0BF0               	andlw	240
  1441  00143E  6E2F               	movwf	lcdNibble@data,c
  1442                           
  1443                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
  1444  001440  502F               	movf	lcdNibble@data,w,c
  1445  001442  0BF0               	andlw	240
  1446  001444  6E2E               	movwf	lcdNibble@temp,c
  1447                           
  1448                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
  1449  001446  508C               	movf	3980,w,c	;volatile
  1450  001448  0B0F               	andlw	15
  1451  00144A  6E8C               	movwf	3980,c	;volatile
  1452                           
  1453                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
  1454  00144C  502E               	movf	lcdNibble@temp,w,c
  1455  00144E  108C               	iorwf	3980,w,c	;volatile
  1456  001450  6E8C               	movwf	3980,c	;volatile
  1457                           
  1458                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  1459  001452  0E00               	movlw	0
  1460  001454  BEF2               	btfsc	intcon,7,c	;volatile
  1461  001456  0E01               	movlw	1
  1462  001458  6E50               	movwf	_LCDinterruptState,c
  1463  00145A  9EF2               	bcf	intcon,7,c	;volatile
  1464  00145C  868C               	bsf	3980,3,c	;volatile
  1465  00145E  0E42               	movlw	66
  1466  001460                     u1147:
  1467  001460  2EE8               	decfsz	wreg,f,c
  1468  001462  D7FE               	bra	u1147
  1469  001464  D000               	nop2	
  1470  001466  968C               	bcf	3980,3,c	;volatile
  1471  001468  0EA0               	movlw	160
  1472  00146A                     u1157:
  1473  00146A  D000               	nop2	
  1474  00146C  2EE8               	decfsz	wreg,f,c
  1475  00146E  D7FD               	bra	u1157
  1476  001470  B050               	btfsc	_LCDinterruptState,0,c
  1477  001472  D002               	bra	u825
  1478  001474  9EF2               	bcf	intcon,7,c	;volatile
  1479  001476  D001               	bra	u826
  1480  001478                     u825:
  1481  001478  8EF2               	bsf	intcon,7,c	;volatile
  1482  00147A                     u826:
  1483  00147A  0012               	return		;funcret
  1484  00147C                     __end_of_lcdNibble:
  1485                           	opt stack 0
  1486                           tblptru	equ	0xFF8
  1487                           tblptrh	equ	0xFF7
  1488                           tblptrl	equ	0xFF6
  1489                           tablat	equ	0xFF5
  1490                           prodh	equ	0xFF4
  1491                           prodl	equ	0xFF3
  1492                           intcon	equ	0xFF2
  1493                           postinc0	equ	0xFEE
  1494                           wreg	equ	0xFE8
  1495                           postinc2	equ	0xFDE
  1496                           postdec2	equ	0xFDD
  1497                           fsr2h	equ	0xFDA
  1498                           fsr2l	equ	0xFD9
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function _I2C_sendData *****************
  1502 ;; Defined at:
  1503 ;;		line 191 in file "main.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  char_data       1    wreg     unsigned char 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  char_data       1   48[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;Total ram usage:        1 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    6
  1524 ;; This function calls:
  1525 ;;		_I2C_Master_Start
  1526 ;;		_I2C_Master_Stop
  1527 ;;		_I2C_Master_Write
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text8
  1534  0016E4                     __ptext8:
  1535                           	opt stack 0
  1536  0016E4                     _I2C_sendData:
  1537                           	opt stack 24
  1538                           
  1539                           ;incstack = 0
  1540                           ;I2C_sendData@char_data stored from wreg
  1541  0016E4  6E31               	movwf	I2C_sendData@char_data,c
  1542                           
  1543                           ;main.c: 192: I2C_Master_Start();
  1544  0016E6  ECD6  F00B         	call	_I2C_Master_Start	;wreg free
  1545                           
  1546                           ;main.c: 193: I2C_Master_Write(0b00010000);
  1547  0016EA  0E00               	movlw	0
  1548  0016EC  6E30               	movwf	I2C_Master_Write@byteToWrite+1,c
  1549  0016EE  0E10               	movlw	16
  1550  0016F0  6E2F               	movwf	I2C_Master_Write@byteToWrite,c
  1551  0016F2  ECCD  F00B         	call	_I2C_Master_Write	;wreg free
  1552                           
  1553                           ;main.c: 194: I2C_Master_Write(char_data);
  1554  0016F6  C031  F02F         	movff	I2C_sendData@char_data,I2C_Master_Write@byteToWrite
  1555  0016FA  6A30               	clrf	I2C_Master_Write@byteToWrite+1,c
  1556  0016FC  ECCD  F00B         	call	_I2C_Master_Write	;wreg free
  1557                           
  1558                           ;main.c: 195: I2C_Master_Stop();
  1559  001700  ECD2  F00B         	call	_I2C_Master_Stop	;wreg free
  1560  001704  0012               	return		;funcret
  1561  001706                     __end_of_I2C_sendData:
  1562                           	opt stack 0
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           prodh	equ	0xFF4
  1568                           prodl	equ	0xFF3
  1569                           intcon	equ	0xFF2
  1570                           postinc0	equ	0xFEE
  1571                           wreg	equ	0xFE8
  1572                           postinc2	equ	0xFDE
  1573                           postdec2	equ	0xFDD
  1574                           fsr2h	equ	0xFDA
  1575                           fsr2l	equ	0xFD9
  1576                           status	equ	0xFD8
  1577                           
  1578 ;; *************** function _I2C_init *****************
  1579 ;; Defined at:
  1580 ;;		line 185 in file "main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    6
  1601 ;; This function calls:
  1602 ;;		_I2C_Master_Init
  1603 ;;		_I2C_Master_Start
  1604 ;;		_I2C_Master_Stop
  1605 ;;		_I2C_Master_Write
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text9
  1612  0016BA                     __ptext9:
  1613                           	opt stack 0
  1614  0016BA                     _I2C_init:
  1615                           	opt stack 24
  1616                           
  1617                           ;main.c: 186: I2C_Master_Init(100000);
  1618                           
  1619                           ;incstack = 0
  1620  0016BA  0EA0               	movlw	160
  1621  0016BC  6E2E               	movwf	I2C_Master_Init@clockFreq,c
  1622  0016BE  0E86               	movlw	134
  1623  0016C0  6E2F               	movwf	I2C_Master_Init@clockFreq+1,c
  1624  0016C2  0E01               	movlw	1
  1625  0016C4  6E30               	movwf	I2C_Master_Init@clockFreq+2,c
  1626  0016C6  0E00               	movlw	0
  1627  0016C8  6E31               	movwf	I2C_Master_Init@clockFreq+3,c
  1628  0016CA  EC90  F00B         	call	_I2C_Master_Init	;wreg free
  1629                           
  1630                           ;main.c: 187: I2C_Master_Start();
  1631  0016CE  ECD6  F00B         	call	_I2C_Master_Start	;wreg free
  1632                           
  1633                           ;main.c: 188: I2C_Master_Write(0b00010000);
  1634  0016D2  0E00               	movlw	0
  1635  0016D4  6E30               	movwf	I2C_Master_Write@byteToWrite+1,c
  1636  0016D6  0E10               	movlw	16
  1637  0016D8  6E2F               	movwf	I2C_Master_Write@byteToWrite,c
  1638  0016DA  ECCD  F00B         	call	_I2C_Master_Write	;wreg free
  1639                           
  1640                           ;main.c: 189: I2C_Master_Stop();
  1641  0016DE  ECD2  F00B         	call	_I2C_Master_Stop	;wreg free
  1642  0016E2  0012               	return		;funcret
  1643  0016E4                     __end_of_I2C_init:
  1644                           	opt stack 0
  1645                           tblptru	equ	0xFF8
  1646                           tblptrh	equ	0xFF7
  1647                           tblptrl	equ	0xFF6
  1648                           tablat	equ	0xFF5
  1649                           prodh	equ	0xFF4
  1650                           prodl	equ	0xFF3
  1651                           intcon	equ	0xFF2
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           postinc2	equ	0xFDE
  1655                           postdec2	equ	0xFDD
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _I2C_Master_Write *****************
  1661 ;; Defined at:
  1662 ;;		line 109 in file "I2C.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  byteToWrite     2   46[COMRAM] unsigned int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;Total ram usage:        2 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    5
  1683 ;; This function calls:
  1684 ;;		_I2C_Master_Wait
  1685 ;; This function is called by:
  1686 ;;		_I2C_init
  1687 ;;		_I2C_sendData
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text10
  1692  00179A                     __ptext10:
  1693                           	opt stack 0
  1694  00179A                     _I2C_Master_Write:
  1695                           	opt stack 24
  1696                           
  1697                           ;I2C.c: 117: I2C_Master_Wait();
  1698                           
  1699                           ;incstack = 0
  1700  00179A  ECC4  F00B         	call	_I2C_Master_Wait	;wreg free
  1701                           
  1702                           ;I2C.c: 118: SSPBUF = byteToWrite;
  1703  00179E  C02F  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  1704  0017A2  0012               	return		;funcret
  1705  0017A4                     __end_of_I2C_Master_Write:
  1706                           	opt stack 0
  1707                           tblptru	equ	0xFF8
  1708                           tblptrh	equ	0xFF7
  1709                           tblptrl	equ	0xFF6
  1710                           tablat	equ	0xFF5
  1711                           prodh	equ	0xFF4
  1712                           prodl	equ	0xFF3
  1713                           intcon	equ	0xFF2
  1714                           postinc0	equ	0xFEE
  1715                           wreg	equ	0xFE8
  1716                           postinc2	equ	0xFDE
  1717                           postdec2	equ	0xFDD
  1718                           fsr2h	equ	0xFDA
  1719                           fsr2l	equ	0xFD9
  1720                           status	equ	0xFD8
  1721                           
  1722 ;; *************** function _I2C_Master_Stop *****************
  1723 ;; Defined at:
  1724 ;;		line 96 in file "I2C.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;Total ram usage:        0 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    5
  1745 ;; This function calls:
  1746 ;;		_I2C_Master_Wait
  1747 ;; This function is called by:
  1748 ;;		_I2C_init
  1749 ;;		_I2C_sendData
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text11
  1754  0017A4                     __ptext11:
  1755                           	opt stack 0
  1756  0017A4                     _I2C_Master_Stop:
  1757                           	opt stack 24
  1758                           
  1759                           ;I2C.c: 105: I2C_Master_Wait();
  1760                           
  1761                           ;incstack = 0
  1762  0017A4  ECC4  F00B         	call	_I2C_Master_Wait	;wreg free
  1763                           
  1764                           ;I2C.c: 106: SSPCON2bits.PEN = 1;
  1765  0017A8  84C5               	bsf	4037,2,c	;volatile
  1766  0017AA  0012               	return		;funcret
  1767  0017AC                     __end_of_I2C_Master_Stop:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           prodh	equ	0xFF4
  1774                           prodl	equ	0xFF3
  1775                           intcon	equ	0xFF2
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           postinc2	equ	0xFDE
  1779                           postdec2	equ	0xFDD
  1780                           fsr2h	equ	0xFDA
  1781                           fsr2l	equ	0xFD9
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function _I2C_Master_Start *****************
  1785 ;; Defined at:
  1786 ;;		line 70 in file "I2C.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    5
  1807 ;; This function calls:
  1808 ;;		_I2C_Master_Wait
  1809 ;; This function is called by:
  1810 ;;		_I2C_init
  1811 ;;		_I2C_sendData
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text12
  1816  0017AC                     __ptext12:
  1817                           	opt stack 0
  1818  0017AC                     _I2C_Master_Start:
  1819                           	opt stack 24
  1820                           
  1821                           ;I2C.c: 79: I2C_Master_Wait();
  1822                           
  1823                           ;incstack = 0
  1824  0017AC  ECC4  F00B         	call	_I2C_Master_Wait	;wreg free
  1825                           
  1826                           ;I2C.c: 80: SSPCON2bits.SEN = 1;
  1827  0017B0  80C5               	bsf	4037,0,c	;volatile
  1828  0017B2  0012               	return		;funcret
  1829  0017B4                     __end_of_I2C_Master_Start:
  1830                           	opt stack 0
  1831                           tblptru	equ	0xFF8
  1832                           tblptrh	equ	0xFF7
  1833                           tblptrl	equ	0xFF6
  1834                           tablat	equ	0xFF5
  1835                           prodh	equ	0xFF4
  1836                           prodl	equ	0xFF3
  1837                           intcon	equ	0xFF2
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           postinc2	equ	0xFDE
  1841                           postdec2	equ	0xFDD
  1842                           fsr2h	equ	0xFDA
  1843                           fsr2l	equ	0xFD9
  1844                           status	equ	0xFD8
  1845                           
  1846 ;; *************** function _I2C_Master_Wait *****************
  1847 ;; Defined at:
  1848 ;;		line 52 in file "I2C.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;Total ram usage:        1 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    4
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_I2C_Master_Start
  1873 ;;		_I2C_Master_Stop
  1874 ;;		_I2C_Master_Write
  1875 ;;		_I2C_Master_RepeatedStart
  1876 ;;		_I2C_Master_Read
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text13
  1881  001788                     __ptext13:
  1882                           	opt stack 0
  1883  001788                     _I2C_Master_Wait:
  1884                           	opt stack 24
  1885                           
  1886                           ;I2C.c: 67: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1887                           
  1888                           ;incstack = 0
  1889  001788  B4C7               	btfsc	4039,2,c	;volatile
  1890  00178A  D7FE               	goto	_I2C_Master_Wait
  1891  00178C  CFC5 F02E          	movff	4037,??_I2C_Master_Wait	;volatile
  1892  001790  0E1F               	movlw	31
  1893  001792  162E               	andwf	??_I2C_Master_Wait,f,c
  1894  001794  B4D8               	btfsc	status,2,c
  1895  001796  0012               	return	
  1896  001798  D7F7               	goto	_I2C_Master_Wait
  1897  00179A                     __end_of_I2C_Master_Wait:
  1898                           	opt stack 0
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           prodh	equ	0xFF4
  1904                           prodl	equ	0xFF3
  1905                           intcon	equ	0xFF2
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           postinc2	equ	0xFDE
  1909                           postdec2	equ	0xFDD
  1910                           fsr2h	equ	0xFDA
  1911                           fsr2l	equ	0xFD9
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function _I2C_Master_Init *****************
  1915 ;; Defined at:
  1916 ;;		line 14 in file "I2C.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  clockFreq       4   45[COMRAM] const unsigned long 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:        4 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    4
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_I2C_init
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text14
  1945  001720                     __ptext14:
  1946                           	opt stack 0
  1947  001720                     _I2C_Master_Init:
  1948                           	opt stack 25
  1949                           
  1950                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
  1951                           
  1952                           ;incstack = 0
  1953  001720  9AC6               	bcf	4038,5,c	;volatile
  1954                           
  1955                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
  1956  001722  8694               	bsf	3988,3,c	;volatile
  1957                           
  1958                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
  1959  001724  8894               	bsf	3988,4,c	;volatile
  1960                           
  1961                           ;I2C.c: 41: SSPSTAT = 0b10000000;
  1962  001726  0E80               	movlw	128
  1963  001728  6EC7               	movwf	4039,c	;volatile
  1964                           
  1965                           ;I2C.c: 42: SSPCON1 = 0b00101000;
  1966  00172A  0E28               	movlw	40
  1967  00172C  6EC6               	movwf	4038,c	;volatile
  1968                           
  1969                           ;I2C.c: 43: SSPCON2 = 0b00000000;
  1970  00172E  0E00               	movlw	0
  1971  001730  6EC5               	movwf	4037,c	;volatile
  1972                           
  1973                           ;I2C.c: 49: SSPADD = 9600;
  1974  001732  0E80               	movlw	128
  1975  001734  6EC8               	movwf	4040,c	;volatile
  1976  001736  0012               	return		;funcret
  1977  001738                     __end_of_I2C_Master_Init:
  1978                           	opt stack 0
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           prodh	equ	0xFF4
  1984                           prodl	equ	0xFF3
  1985                           intcon	equ	0xFF2
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           postinc2	equ	0xFDE
  1989                           postdec2	equ	0xFDD
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _interruptHandler *****************
  1995 ;; Defined at:
  1996 ;;		line 115 in file "main.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  input           2   43[COMRAM] int 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:       21 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    3
  2017 ;; This function calls:
  2018 ;;		i2_initLCD
  2019 ;;		i2_lcdInst
  2020 ;;		i2_printf
  2021 ;; This function is called by:
  2022 ;;		Interrupt level 2
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	intcode
  2027  000008                     __pintcode:
  2028                           	opt stack 0
  2029  000008                     _interruptHandler:
  2030                           	opt stack 24
  2031                           
  2032                           ;incstack = 0
  2033  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2034  00000A  ED2D  F009         	call	int_func,f	;refresh shadow registers
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           prodh	equ	0xFF4
  2040                           prodl	equ	0xFF3
  2041                           intcon	equ	0xFF2
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           postinc2	equ	0xFDE
  2045                           postdec2	equ	0xFDD
  2046                           fsr2h	equ	0xFDA
  2047                           fsr2l	equ	0xFD9
  2048                           status	equ	0xFD8
  2049                           
  2050                           	psect	intcode_body
  2051  00125A                     __pintcode_body:
  2052                           	opt stack 24
  2053  00125A                     int_func:
  2054                           	opt stack 24
  2055  00125A  0006               	pop		; remove dummy address from shadow register refresh
  2056  00125C  CFFA F01A          	movff	pclath,??_interruptHandler+1
  2057  001260  CFFB F01B          	movff	pclatu,??_interruptHandler+2
  2058  001264  CFE9 F01C          	movff	fsr0l,??_interruptHandler+3
  2059  001268  CFEA F01D          	movff	fsr0h,??_interruptHandler+4
  2060  00126C  CFE1 F01E          	movff	fsr1l,??_interruptHandler+5
  2061  001270  CFE2 F01F          	movff	fsr1h,??_interruptHandler+6
  2062  001274  CFD9 F020          	movff	fsr2l,??_interruptHandler+7
  2063  001278  CFDA F021          	movff	fsr2h,??_interruptHandler+8
  2064  00127C  CFF3 F022          	movff	prodl,??_interruptHandler+9
  2065  001280  CFF4 F023          	movff	prodh,??_interruptHandler+10
  2066  001284  CFF6 F024          	movff	tblptrl,??_interruptHandler+11
  2067  001288  CFF7 F025          	movff	tblptrh,??_interruptHandler+12
  2068  00128C  CFF8 F026          	movff	tblptru,??_interruptHandler+13
  2069  001290  CFF5 F027          	movff	tablat,??_interruptHandler+14
  2070  001294  C051  F028         	movff	btemp,??_interruptHandler+15
  2071  001298  C052  F029         	movff	btemp+1,??_interruptHandler+16
  2072  00129C  C053  F02A         	movff	btemp+2,??_interruptHandler+17
  2073  0012A0  C054  F02B         	movff	btemp+3,??_interruptHandler+18
  2074                           
  2075                           ;main.c: 127: if (RBIF){
  2076  0012A4  A0F2               	btfss	intcon,0,c	;volatile
  2077  0012A6  D027               	goto	i2l1673
  2078                           
  2079                           ;main.c: 135: TRISBbits.RB5 = 1;
  2080  0012A8  8A93               	bsf	3987,5,c	;volatile
  2081                           
  2082                           ;main.c: 136: int input = PORTBbits.RB5;
  2083  0012AA  AA81               	btfss	3969,5,c	;volatile
  2084  0012AC  D003               	goto	i2u79_40
  2085  0012AE  6A19               	clrf	??_interruptHandler& (0+255),c
  2086  0012B0  2A19               	incf	??_interruptHandler& (0+255),f,c
  2087  0012B2  D001               	goto	i2u79_48
  2088  0012B4                     i2u79_40:
  2089  0012B4  6A19               	clrf	??_interruptHandler& (0+255),c
  2090  0012B6                     i2u79_48:
  2091  0012B6  5019               	movf	??_interruptHandler,w,c
  2092  0012B8  6E2C               	movwf	interruptHandler@input,c
  2093  0012BA  6A2D               	clrf	interruptHandler@input+1,c
  2094                           
  2095                           ;main.c: 138: if (input == 0){
  2096  0012BC  502C               	movf	interruptHandler@input,w,c
  2097  0012BE  102D               	iorwf	interruptHandler@input+1,w,c
  2098  0012C0  A4D8               	btfss	status,2,c
  2099  0012C2  D018               	goto	i2l166
  2100                           
  2101                           ;main.c: 139: initLCD();
  2102  0012C4  ECF5  F00A         	call	i2_initLCD	;wreg free
  2103                           
  2104                           ;main.c: 140: B_count++;
  2105  0012C8  4A4D               	infsnz	_B_count,f,c
  2106  0012CA  2A4E               	incf	_B_count+1,f,c
  2107                           
  2108                           ;main.c: 141: printf("%d",B_count);
  2109  0012CC  0E19               	movlw	low (STR_1+8)
  2110  0012CE  6E0D               	movwf	i2printf@f,c
  2111  0012D0  0E10               	movlw	high (STR_1+8)
  2112  0012D2  6E0E               	movwf	i2printf@f+1,c
  2113  0012D4  C04D  F00F         	movff	_B_count,?i2_printf+2
  2114  0012D8  C04E  F010         	movff	_B_count+1,?i2_printf+3
  2115  0012DC  EC9E  F008         	call	i2_printf	;wreg free
  2116                           
  2117                           ;main.c: 142: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  2118  0012E0  0E80               	movlw	128
  2119  0012E2  ECBA  F00B         	call	i2_lcdInst
  2120  0012E6  0E34               	movlw	52
  2121  0012E8  6E19               	movwf	??_interruptHandler& (0+255),c
  2122  0012EA  0EF2               	movlw	242
  2123  0012EC                     i2u116_47:
  2124  0012EC  2EE8               	decfsz	wreg,f,c
  2125  0012EE  D7FE               	bra	i2u116_47
  2126  0012F0  2E19               	decfsz	??_interruptHandler& (0+255),f,c
  2127  0012F2  D7FC               	bra	i2u116_47
  2128  0012F4                     i2l166:
  2129                           
  2130                           ;main.c: 143: }
  2131                           ;main.c: 158: RBIF = 0;
  2132  0012F4  90F2               	bcf	intcon,0,c	;volatile
  2133  0012F6                     i2l1673:
  2134                           
  2135                           ;main.c: 159: return;
  2136  0012F6  C02B  F054         	movff	??_interruptHandler+18,btemp+3
  2137  0012FA  C02A  F053         	movff	??_interruptHandler+17,btemp+2
  2138  0012FE  C029  F052         	movff	??_interruptHandler+16,btemp+1
  2139  001302  C028  F051         	movff	??_interruptHandler+15,btemp
  2140  001306  C027  FFF5         	movff	??_interruptHandler+14,tablat
  2141  00130A  C026  FFF8         	movff	??_interruptHandler+13,tblptru
  2142  00130E  C025  FFF7         	movff	??_interruptHandler+12,tblptrh
  2143  001312  C024  FFF6         	movff	??_interruptHandler+11,tblptrl
  2144  001316  C023  FFF4         	movff	??_interruptHandler+10,prodh
  2145  00131A  C022  FFF3         	movff	??_interruptHandler+9,prodl
  2146  00131E  C021  FFDA         	movff	??_interruptHandler+8,fsr2h
  2147  001322  C020  FFD9         	movff	??_interruptHandler+7,fsr2l
  2148  001326  C01F  FFE2         	movff	??_interruptHandler+6,fsr1h
  2149  00132A  C01E  FFE1         	movff	??_interruptHandler+5,fsr1l
  2150  00132E  C01D  FFEA         	movff	??_interruptHandler+4,fsr0h
  2151  001332  C01C  FFE9         	movff	??_interruptHandler+3,fsr0l
  2152  001336  C01B  FFFB         	movff	??_interruptHandler+2,pclatu
  2153  00133A  C01A  FFFA         	movff	??_interruptHandler+1,pclath
  2154  00133E  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2155  001340  0011               	retfie		f
  2156  001342                     __end_of_interruptHandler:
  2157                           	opt stack 0
  2158                           pclatu	equ	0xFFB
  2159                           pclath	equ	0xFFA
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           prodh	equ	0xFF4
  2165                           prodl	equ	0xFF3
  2166                           intcon	equ	0xFF2
  2167                           postinc0	equ	0xFEE
  2168                           fsr0h	equ	0xFEA
  2169                           fsr0l	equ	0xFE9
  2170                           wreg	equ	0xFE8
  2171                           fsr1h	equ	0xFE2
  2172                           fsr1l	equ	0xFE1
  2173                           postinc2	equ	0xFDE
  2174                           postdec2	equ	0xFDD
  2175                           fsr2h	equ	0xFDA
  2176                           fsr2l	equ	0xFD9
  2177                           status	equ	0xFD8
  2178                           
  2179 ;; *************** function i2_printf *****************
  2180 ;; Defined at:
  2181 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  f               2   12[COMRAM] PTR const unsigned char 
  2184 ;;		 -> STR_4(3), STR_3(11), STR_2(3), STR_1(11), 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  printf          4    0        struct .
  2187 ;;  printf          3    0        PTR const unsigned char 
  2188 ;;  printf          2   21[COMRAM] unsigned int 
  2189 ;;  printf          2   17[COMRAM] PTR void [1]
  2190 ;;		 -> ?i2_printf(2), ?_printf(2), 
  2191 ;;  printf          2    0        unsigned int 
  2192 ;;  printf          1   23[COMRAM] char 
  2193 ;;  printf          1   20[COMRAM] char 
  2194 ;;  printf          1   19[COMRAM] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  2   12[COMRAM] int 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:       12 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    2
  2211 ;; This function calls:
  2212 ;;		i2___lwdiv
  2213 ;;		i2___lwmod
  2214 ;;		i2_putch
  2215 ;; This function is called by:
  2216 ;;		_interruptHandler
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text16
  2221  00113C                     __ptext16:
  2222                           	opt stack 0
  2223  00113C                     i2_printf:
  2224                           	opt stack 24
  2225                           
  2226                           ;doprnt.c: 466: va_list ap;
  2227                           ;doprnt.c: 499: signed char c;
  2228                           ;doprnt.c: 506: signed char prec;
  2229                           ;doprnt.c: 508: unsigned char flag;
  2230                           ;doprnt.c: 523: union {
  2231                           ;doprnt.c: 524: unsigned long vd;
  2232                           ;doprnt.c: 525: double integ;
  2233                           ;doprnt.c: 526: } tmpval;
  2234                           ;doprnt.c: 528: unsigned int val;
  2235                           ;doprnt.c: 529: unsigned len;
  2236                           ;doprnt.c: 530: const char * cp;
  2237                           ;doprnt.c: 533: *ap = __va_start();
  2238                           
  2239                           ;incstack = 0
  2240  00113C  0E0F               	movlw	low (?i2_printf+2)
  2241  00113E  6E12               	movwf	i2printf@ap,c
  2242  001140  0E00               	movlw	high (?i2_printf+2)
  2243  001142  6E13               	movwf	i2printf@ap+1,c
  2244                           
  2245                           ;doprnt.c: 536: while(c = *f++) {
  2246  001144  D07D               	goto	i2u75_40
  2247  001146                     
  2248                           ;doprnt.c: 538: if(c != '%')
  2249  001146  0E25               	movlw	37
  2250  001148  1818               	xorwf	i2printf@c,w,c
  2251  00114A  B4D8               	btfsc	status,2,c
  2252  00114C  D004               	goto	i2l232
  2253                           
  2254                           ;doprnt.c: 540: {
  2255                           ;doprnt.c: 541: (putch(c) );
  2256  00114E  5018               	movf	i2printf@c,w,c
  2257  001150  ECB0  F00B         	call	i2_putch
  2258                           
  2259                           ;doprnt.c: 542: continue;
  2260  001154  D075               	goto	i2u75_40
  2261  001156                     i2l232:
  2262                           
  2263                           ;doprnt.c: 543: }
  2264                           ;doprnt.c: 548: flag = 0;
  2265  001156  0E00               	movlw	0
  2266  001158  6E14               	movwf	i2printf@flag,c
  2267                           
  2268                           ;doprnt.c: 822: }
  2269                           
  2270                           ;doprnt.c: 813: continue;
  2271                           
  2272                           ;doprnt.c: 802: default:
  2273                           
  2274                           ;doprnt.c: 698: case 'i':
  2275                           ;doprnt.c: 699: break;
  2276                           
  2277                           ;doprnt.c: 697: case 'd':
  2278                           
  2279                           ;doprnt.c: 638: goto alldone;
  2280                           
  2281                           ;doprnt.c: 637: case 0:
  2282                           
  2283                           ;doprnt.c: 635: switch(c = *f++) {
  2284  00115A  C00D  FFF6         	movff	i2printf@f,tblptrl
  2285  00115E  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  2286  001162  4A0D               	infsnz	i2printf@f,f,c
  2287  001164  2A0E               	incf	i2printf@f+1,f,c
  2288  001166                     	if	0	;tblptru may be non-zero
  2289  001166                     	endif
  2290  001166                     	if	0	;tblptru may be non-zero
  2291  001166                     	endif
  2292  001166  0008               	tblrd		*
  2293  001168  CFF5 F018          	movff	tablat,i2printf@c
  2294  00116C  5018               	movf	i2printf@c,w,c
  2295                           
  2296                           ; Switch size 1, requested type "space"
  2297                           ; Number of cases is 3, Range of values is 0 to 105
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte           10     6 (average)
  2301                           ;	Chosen strategy is simple_byte
  2302  00116E  0A00               	xorlw	0	; case 0
  2303  001170  B4D8               	btfsc	status,2,c
  2304  001172  0012               	return	
  2305  001174  0A64               	xorlw	100	; case 100
  2306  001176  B4D8               	btfsc	status,2,c
  2307  001178  D003               	goto	i2l238
  2308  00117A  0A0D               	xorlw	13	; case 105
  2309  00117C  A4D8               	btfss	status,2,c
  2310  00117E  D060               	goto	i2u75_40
  2311  001180                     i2l238:
  2312                           
  2313                           ;doprnt.c: 1253: {
  2314                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2315  001180  C012  FFD9         	movff	i2printf@ap,fsr2l
  2316  001184  C013  FFDA         	movff	i2printf@ap+1,fsr2h
  2317  001188  CFDE F016          	movff	postinc2,i2printf@val
  2318  00118C  CFDD F017          	movff	postdec2,i2printf@val+1
  2319  001190  0E02               	movlw	2
  2320  001192  2612               	addwf	i2printf@ap,f,c
  2321  001194  0E00               	movlw	0
  2322  001196  2213               	addwfc	i2printf@ap+1,f,c
  2323                           
  2324                           ;doprnt.c: 1261: if((int)val < 0) {
  2325  001198  AE17               	btfss	i2printf@val+1,7,c
  2326  00119A  D006               	goto	i2l240
  2327                           
  2328                           ;doprnt.c: 1262: flag |= 0x03;
  2329  00119C  0E03               	movlw	3
  2330  00119E  1214               	iorwf	i2printf@flag,f,c
  2331                           
  2332                           ;doprnt.c: 1263: val = -val;
  2333  0011A0  6C16               	negf	i2printf@val,c
  2334  0011A2  1E17               	comf	i2printf@val+1,f,c
  2335  0011A4  B0D8               	btfsc	status,0,c
  2336  0011A6  2A17               	incf	i2printf@val+1,f,c
  2337  0011A8                     i2l240:
  2338                           
  2339                           ;doprnt.c: 1264: }
  2340                           ;doprnt.c: 1266: }
  2341                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2342  0011A8  0E01               	movlw	1
  2343  0011AA  6E18               	movwf	i2printf@c,c
  2344  0011AC                     i2l1579:
  2345  0011AC  0E05               	movlw	5
  2346  0011AE  1818               	xorwf	i2printf@c,w,c
  2347  0011B0  B4D8               	btfsc	status,2,c
  2348  0011B2  D012               	goto	i2u73_40
  2349                           
  2350                           ;doprnt.c: 1306: if(val < dpowers[c])
  2351  0011B4  5018               	movf	i2printf@c,w,c
  2352  0011B6  0D02               	mullw	2
  2353  0011B8  0E01               	movlw	low _dpowers
  2354  0011BA  24F3               	addwf	prodl,w,c
  2355  0011BC  6EF6               	movwf	tblptrl,c
  2356  0011BE  0E10               	movlw	high _dpowers
  2357  0011C0  20F4               	addwfc	prodh,w,c
  2358  0011C2  6EF7               	movwf	tblptrh,c
  2359  0011C4                     	if	0	;There are less than 3 active tblptr bytes
  2360  0011C4                     	endif
  2361  0011C4  0009               	tblrd		*+
  2362  0011C6  50F5               	movf	tablat,w,c
  2363  0011C8  5C16               	subwf	i2printf@val,w,c
  2364  0011CA  0009               	tblrd		*+
  2365  0011CC  50F5               	movf	tablat,w,c
  2366  0011CE  5817               	subwfb	i2printf@val+1,w,c
  2367  0011D0  A0D8               	btfss	status,0,c
  2368  0011D2  D002               	goto	i2u73_40
  2369                           
  2370                           ;doprnt.c: 1307: break;
  2371  0011D4  2A18               	incf	i2printf@c,f,c
  2372  0011D6  D7EA               	goto	i2l1579
  2373  0011D8                     i2u73_40:
  2374                           
  2375                           ;doprnt.c: 1422: {
  2376                           ;doprnt.c: 1438: if(flag & 0x03)
  2377  0011D8  C014  F011         	movff	i2printf@flag,??i2_printf
  2378  0011DC  0E03               	movlw	3
  2379  0011DE  1611               	andwf	??i2_printf,f,c
  2380  0011E0  B4D8               	btfsc	status,2,c
  2381  0011E2  D003               	goto	i2l244
  2382                           
  2383                           ;doprnt.c: 1439: (putch('-') );
  2384  0011E4  0E2D               	movlw	45
  2385  0011E6  ECB0  F00B         	call	i2_putch
  2386  0011EA                     i2l244:
  2387                           
  2388                           ;doprnt.c: 1469: }
  2389                           ;doprnt.c: 1472: prec = c;
  2390  0011EA  C018  F015         	movff	i2printf@c,i2printf@prec
  2391                           
  2392                           ;doprnt.c: 1474: while(prec--) {
  2393  0011EE  D024               	goto	i2l245
  2394  0011F0                     
  2395                           ;doprnt.c: 1478: {
  2396                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2397  0011F0  5015               	movf	i2printf@prec,w,c
  2398  0011F2  0D02               	mullw	2
  2399  0011F4  0E01               	movlw	low _dpowers
  2400  0011F6  24F3               	addwf	prodl,w,c
  2401  0011F8  6EF6               	movwf	tblptrl,c
  2402  0011FA  0E10               	movlw	high _dpowers
  2403  0011FC  20F4               	addwfc	prodh,w,c
  2404  0011FE  6EF7               	movwf	tblptrh,c
  2405  001200                     	if	0	;There are less than 3 active tblptr bytes
  2406  001200                     	endif
  2407  001200  0009               	tblrd		*+
  2408  001202  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  2409  001206  000A               	tblrd		*-
  2410  001208  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  2411  00120C  C016  F001         	movff	i2printf@val,i2___lwdiv@dividend
  2412  001210  C017  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  2413  001214  ECA6  F00A         	call	i2___lwdiv	;wreg free
  2414  001218  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  2415  00121C  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  2416  001220  0E00               	movlw	0
  2417  001222  6E0B               	movwf	i2___lwmod@divisor+1,c
  2418  001224  0E0A               	movlw	10
  2419  001226  6E0A               	movwf	i2___lwmod@divisor,c
  2420  001228  EC3C  F00B         	call	i2___lwmod	;wreg free
  2421  00122C  5008               	movf	?i2___lwmod,w,c
  2422  00122E  0F30               	addlw	48
  2423  001230  6E18               	movwf	i2printf@c,c
  2424                           
  2425                           ;doprnt.c: 1523: }
  2426                           ;doprnt.c: 1524: (putch(c) );
  2427  001232  5018               	movf	i2printf@c,w,c
  2428  001234  ECB0  F00B         	call	i2_putch
  2429  001238                     i2l245:
  2430  001238  0615               	decf	i2printf@prec,f,c
  2431  00123A  2815               	incf	i2printf@prec,w,c
  2432  00123C  A4D8               	btfss	status,2,c
  2433  00123E  D7D8               	goto	i2l246
  2434  001240                     i2u75_40:
  2435  001240  C00D  FFF6         	movff	i2printf@f,tblptrl
  2436  001244  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  2437  001248  4A0D               	infsnz	i2printf@f,f,c
  2438  00124A  2A0E               	incf	i2printf@f+1,f,c
  2439  00124C                     	if	0	;tblptru may be non-zero
  2440  00124C                     	endif
  2441  00124C                     	if	0	;tblptru may be non-zero
  2442  00124C                     	endif
  2443  00124C  0008               	tblrd		*
  2444  00124E  CFF5 F018          	movff	tablat,i2printf@c
  2445  001252  5018               	movf	i2printf@c,w,c
  2446  001254  B4D8               	btfsc	status,2,c
  2447  001256  0012               	return	
  2448  001258  D776               	goto	i2l231
  2449  00125A                     __end_ofi2_printf:
  2450                           	opt stack 0
  2451                           pclatu	equ	0xFFB
  2452                           pclath	equ	0xFFA
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           prodh	equ	0xFF4
  2458                           prodl	equ	0xFF3
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           fsr0h	equ	0xFEA
  2462                           fsr0l	equ	0xFE9
  2463                           wreg	equ	0xFE8
  2464                           fsr1h	equ	0xFE2
  2465                           fsr1l	equ	0xFE1
  2466                           postinc2	equ	0xFDE
  2467                           postdec2	equ	0xFDD
  2468                           fsr2h	equ	0xFDA
  2469                           fsr2l	equ	0xFD9
  2470                           status	equ	0xFD8
  2471                           
  2472 ;; *************** function i2_putch *****************
  2473 ;; Defined at:
  2474 ;;		line 24 in file "lcd.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  data            1    wreg     unsigned char 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  data            1    2[COMRAM] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;Total ram usage:        1 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    1
  2495 ;; This function calls:
  2496 ;;		i2_lcdNibble
  2497 ;; This function is called by:
  2498 ;;		i2_printf
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text17
  2503  001760                     __ptext17:
  2504                           	opt stack 0
  2505  001760                     i2_putch:
  2506                           	opt stack 24
  2507                           
  2508                           ;incstack = 0
  2509                           ;i2putch@data stored from wreg
  2510  001760  6E03               	movwf	i2putch@data,c
  2511                           
  2512                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  2513  001762  848C               	bsf	3980,2,c	;volatile
  2514                           
  2515                           ;lcd.c: 33: lcdNibble(data);
  2516  001764  5003               	movf	i2putch@data,w,c
  2517  001766  EC3E  F00A         	call	i2_lcdNibble
  2518                           
  2519                           ;lcd.c: 34: _delay((unsigned long)((100)*(32000000/4000000.0)));
  2520  00176A  0EA0               	movlw	160
  2521  00176C                     i2u117_47:
  2522  00176C  D000               	nop2	
  2523  00176E  2EE8               	decfsz	wreg,f,c
  2524  001770  D7FD               	bra	i2u117_47
  2525  001772  0012               	return		;funcret
  2526  001774                     __end_ofi2_putch:
  2527                           	opt stack 0
  2528                           pclatu	equ	0xFFB
  2529                           pclath	equ	0xFFA
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           prodh	equ	0xFF4
  2535                           prodl	equ	0xFF3
  2536                           intcon	equ	0xFF2
  2537                           postinc0	equ	0xFEE
  2538                           fsr0h	equ	0xFEA
  2539                           fsr0l	equ	0xFE9
  2540                           wreg	equ	0xFE8
  2541                           fsr1h	equ	0xFE2
  2542                           fsr1l	equ	0xFE1
  2543                           postinc2	equ	0xFDE
  2544                           postdec2	equ	0xFDD
  2545                           fsr2h	equ	0xFDA
  2546                           fsr2l	equ	0xFD9
  2547                           status	equ	0xFD8
  2548                           
  2549 ;; *************** function i2___lwmod *****************
  2550 ;; Defined at:
  2551 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwmod.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  dividend        2    7[COMRAM] unsigned int 
  2554 ;;  divisor         2    9[COMRAM] unsigned int 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  __lwmod         1   11[COMRAM] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  2    7[COMRAM] unsigned int 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2566 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;Total ram usage:        5 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		i2_printf
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text18
  2580  001678                     __ptext18:
  2581                           	opt stack 0
  2582  001678                     i2___lwmod:
  2583                           	opt stack 25
  2584                           
  2585                           ;incstack = 0
  2586  001678  500A               	movf	i2___lwmod@divisor,w,c
  2587  00167A  100B               	iorwf	i2___lwmod@divisor+1,w,c
  2588  00167C  B4D8               	btfsc	status,2,c
  2589  00167E  D018               	goto	i2l668
  2590  001680  0E01               	movlw	1
  2591  001682  6E0C               	movwf	i2___lwmod@counter,c
  2592  001684  D004               	goto	i2l663
  2593  001686  90D8               	bcf	status,0,c
  2594  001688  360A               	rlcf	i2___lwmod@divisor,f,c
  2595  00168A  360B               	rlcf	i2___lwmod@divisor+1,f,c
  2596  00168C  2A0C               	incf	i2___lwmod@counter,f,c
  2597  00168E                     i2l663:
  2598  00168E  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  2599  001690  D7FA               	goto	i2l664
  2600  001692                     i2u59_40:
  2601  001692  500A               	movf	i2___lwmod@divisor,w,c
  2602  001694  5C08               	subwf	i2___lwmod@dividend,w,c
  2603  001696  500B               	movf	i2___lwmod@divisor+1,w,c
  2604  001698  5809               	subwfb	i2___lwmod@dividend+1,w,c
  2605  00169A  A0D8               	btfss	status,0,c
  2606  00169C  D004               	goto	i2l667
  2607  00169E  500A               	movf	i2___lwmod@divisor,w,c
  2608  0016A0  5E08               	subwf	i2___lwmod@dividend,f,c
  2609  0016A2  500B               	movf	i2___lwmod@divisor+1,w,c
  2610  0016A4  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  2611  0016A6                     i2l667:
  2612  0016A6  90D8               	bcf	status,0,c
  2613  0016A8  320B               	rrcf	i2___lwmod@divisor+1,f,c
  2614  0016AA  320A               	rrcf	i2___lwmod@divisor,f,c
  2615  0016AC  2E0C               	decfsz	i2___lwmod@counter,f,c
  2616  0016AE  D7F1               	goto	i2u59_40
  2617  0016B0                     i2l668:
  2618  0016B0  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  2619  0016B4  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  2620  0016B8  0012               	return		;funcret
  2621  0016BA                     __end_ofi2___lwmod:
  2622                           	opt stack 0
  2623                           pclatu	equ	0xFFB
  2624                           pclath	equ	0xFFA
  2625                           tblptru	equ	0xFF8
  2626                           tblptrh	equ	0xFF7
  2627                           tblptrl	equ	0xFF6
  2628                           tablat	equ	0xFF5
  2629                           prodh	equ	0xFF4
  2630                           prodl	equ	0xFF3
  2631                           intcon	equ	0xFF2
  2632                           postinc0	equ	0xFEE
  2633                           fsr0h	equ	0xFEA
  2634                           fsr0l	equ	0xFE9
  2635                           wreg	equ	0xFE8
  2636                           fsr1h	equ	0xFE2
  2637                           fsr1l	equ	0xFE1
  2638                           postinc2	equ	0xFDE
  2639                           postdec2	equ	0xFDD
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function i2___lwdiv *****************
  2645 ;; Defined at:
  2646 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  dividend        2    0[COMRAM] unsigned int 
  2649 ;;  divisor         2    2[COMRAM] unsigned int 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  2652 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  2    0[COMRAM] unsigned int 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        7 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		i2_printf
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text19
  2676  00154C                     __ptext19:
  2677                           	opt stack 0
  2678  00154C                     i2___lwdiv:
  2679                           	opt stack 25
  2680                           
  2681                           ;incstack = 0
  2682  00154C  0E00               	movlw	0
  2683  00154E  6E06               	movwf	i2___lwdiv@quotient+1,c
  2684  001550  0E00               	movlw	0
  2685  001552  6E05               	movwf	i2___lwdiv@quotient,c
  2686  001554  5003               	movf	i2___lwdiv@divisor,w,c
  2687  001556  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  2688  001558  B4D8               	btfsc	status,2,c
  2689  00155A  D01C               	goto	i2l658
  2690  00155C  0E01               	movlw	1
  2691  00155E  6E07               	movwf	i2___lwdiv@counter,c
  2692  001560  D004               	goto	i2l653
  2693  001562  90D8               	bcf	status,0,c
  2694  001564  3603               	rlcf	i2___lwdiv@divisor,f,c
  2695  001566  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  2696  001568  2A07               	incf	i2___lwdiv@counter,f,c
  2697  00156A                     i2l653:
  2698  00156A  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  2699  00156C  D7FA               	goto	i2l654
  2700  00156E                     i2u56_40:
  2701  00156E  90D8               	bcf	status,0,c
  2702  001570  3605               	rlcf	i2___lwdiv@quotient,f,c
  2703  001572  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  2704  001574  5003               	movf	i2___lwdiv@divisor,w,c
  2705  001576  5C01               	subwf	i2___lwdiv@dividend,w,c
  2706  001578  5004               	movf	i2___lwdiv@divisor+1,w,c
  2707  00157A  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  2708  00157C  A0D8               	btfss	status,0,c
  2709  00157E  D005               	goto	i2l657
  2710  001580  5003               	movf	i2___lwdiv@divisor,w,c
  2711  001582  5E01               	subwf	i2___lwdiv@dividend,f,c
  2712  001584  5004               	movf	i2___lwdiv@divisor+1,w,c
  2713  001586  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  2714  001588  8005               	bsf	i2___lwdiv@quotient,0,c
  2715  00158A                     i2l657:
  2716  00158A  90D8               	bcf	status,0,c
  2717  00158C  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  2718  00158E  3203               	rrcf	i2___lwdiv@divisor,f,c
  2719  001590  2E07               	decfsz	i2___lwdiv@counter,f,c
  2720  001592  D7ED               	goto	i2u56_40
  2721  001594                     i2l658:
  2722  001594  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  2723  001598  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  2724  00159C  0012               	return		;funcret
  2725  00159E                     __end_ofi2___lwdiv:
  2726                           	opt stack 0
  2727                           pclatu	equ	0xFFB
  2728                           pclath	equ	0xFFA
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           prodh	equ	0xFF4
  2734                           prodl	equ	0xFF3
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           fsr0h	equ	0xFEA
  2738                           fsr0l	equ	0xFE9
  2739                           wreg	equ	0xFE8
  2740                           fsr1h	equ	0xFE2
  2741                           fsr1l	equ	0xFE1
  2742                           postinc2	equ	0xFDE
  2743                           postdec2	equ	0xFDD
  2744                           fsr2h	equ	0xFDA
  2745                           fsr2l	equ	0xFD9
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function i2_initLCD *****************
  2749 ;; Defined at:
  2750 ;;		line 60 in file "lcd.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        1 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    2
  2771 ;; This function calls:
  2772 ;;		i2_lcdInst
  2773 ;; This function is called by:
  2774 ;;		_interruptHandler
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text20
  2779  0015EA                     __ptext20:
  2780                           	opt stack 0
  2781  0015EA                     i2_initLCD:
  2782                           	opt stack 24
  2783                           
  2784                           ;lcd.c: 68: _delay((unsigned long)((15)*(32000000/4000.0)));
  2785                           
  2786                           ;incstack = 0
  2787  0015EA  0E9C               	movlw	156
  2788  0015EC  6E04               	movwf	??i2_initLCD& (0+255),c
  2789  0015EE  0ED7               	movlw	215
  2790  0015F0                     i2u118_47:
  2791  0015F0  2EE8               	decfsz	wreg,f,c
  2792  0015F2  D7FE               	bra	i2u118_47
  2793  0015F4  2E04               	decfsz	??i2_initLCD& (0+255),f,c
  2794  0015F6  D7FC               	bra	i2u118_47
  2795  0015F8  F000               	nop	
  2796                           
  2797                           ;lcd.c: 69: lcdInst(0b00110011);
  2798  0015FA  0E33               	movlw	51
  2799  0015FC  ECBA  F00B         	call	i2_lcdInst
  2800                           
  2801                           ;lcd.c: 70: lcdInst(0b00110010);
  2802  001600  0E32               	movlw	50
  2803  001602  ECBA  F00B         	call	i2_lcdInst
  2804                           
  2805                           ;lcd.c: 71: lcdInst(0b00101000);
  2806  001606  0E28               	movlw	40
  2807  001608  ECBA  F00B         	call	i2_lcdInst
  2808                           
  2809                           ;lcd.c: 72: lcdInst(0b00001111);
  2810  00160C  0E0F               	movlw	15
  2811  00160E  ECBA  F00B         	call	i2_lcdInst
  2812                           
  2813                           ;lcd.c: 73: lcdInst(0b00000110);
  2814  001612  0E06               	movlw	6
  2815  001614  ECBA  F00B         	call	i2_lcdInst
  2816                           
  2817                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(32000000/4000.0)));;
  2818  001618  0E01               	movlw	1
  2819  00161A  ECBA  F00B         	call	i2_lcdInst
  2820  00161E  0E9C               	movlw	156
  2821  001620  6E04               	movwf	??i2_initLCD& (0+255),c
  2822  001622  0ED7               	movlw	215
  2823  001624                     i2u119_47:
  2824  001624  2EE8               	decfsz	wreg,f,c
  2825  001626  D7FE               	bra	i2u119_47
  2826  001628  2E04               	decfsz	??i2_initLCD& (0+255),f,c
  2827  00162A  D7FC               	bra	i2u119_47
  2828  00162C  F000               	nop	
  2829                           
  2830                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  2831  00162E  0E0F               	movlw	15
  2832  001630  ECBA  F00B         	call	i2_lcdInst
  2833  001634  0012               	return		;funcret
  2834  001636                     __end_ofi2_initLCD:
  2835                           	opt stack 0
  2836                           pclatu	equ	0xFFB
  2837                           pclath	equ	0xFFA
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           prodh	equ	0xFF4
  2843                           prodl	equ	0xFF3
  2844                           intcon	equ	0xFF2
  2845                           postinc0	equ	0xFEE
  2846                           fsr0h	equ	0xFEA
  2847                           fsr0l	equ	0xFE9
  2848                           wreg	equ	0xFE8
  2849                           fsr1h	equ	0xFE2
  2850                           fsr1l	equ	0xFE1
  2851                           postinc2	equ	0xFDE
  2852                           postdec2	equ	0xFDD
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function i2_lcdInst *****************
  2858 ;; Defined at:
  2859 ;;		line 11 in file "lcd.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  data            1    wreg     unsigned char 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  data            1    2[COMRAM] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;Total ram usage:        1 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    1
  2880 ;; This function calls:
  2881 ;;		i2_lcdNibble
  2882 ;; This function is called by:
  2883 ;;		_interruptHandler
  2884 ;;		i2_initLCD
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text21
  2889  001774                     __ptext21:
  2890                           	opt stack 0
  2891  001774                     i2_lcdInst:
  2892                           	opt stack 25
  2893                           
  2894                           ;incstack = 0
  2895                           ;i2lcdInst@data stored from wreg
  2896  001774  6E03               	movwf	i2lcdInst@data,c
  2897                           
  2898                           ;lcd.c: 19: LATDbits.LATD2 = 0;
  2899  001776  948C               	bcf	3980,2,c	;volatile
  2900                           
  2901                           ;lcd.c: 20: lcdNibble(data);
  2902  001778  5003               	movf	i2lcdInst@data,w,c
  2903  00177A  EC3E  F00A         	call	i2_lcdNibble
  2904                           
  2905                           ;lcd.c: 21: _delay((unsigned long)((100)*(32000000/4000000.0)));
  2906  00177E  0EA0               	movlw	160
  2907  001780                     i2u120_47:
  2908  001780  D000               	nop2	
  2909  001782  2EE8               	decfsz	wreg,f,c
  2910  001784  D7FD               	bra	i2u120_47
  2911  001786  0012               	return		;funcret
  2912  001788                     __end_ofi2_lcdInst:
  2913                           	opt stack 0
  2914                           pclatu	equ	0xFFB
  2915                           pclath	equ	0xFFA
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           prodh	equ	0xFF4
  2921                           prodl	equ	0xFF3
  2922                           intcon	equ	0xFF2
  2923                           postinc0	equ	0xFEE
  2924                           fsr0h	equ	0xFEA
  2925                           fsr0l	equ	0xFE9
  2926                           wreg	equ	0xFE8
  2927                           fsr1h	equ	0xFE2
  2928                           fsr1l	equ	0xFE1
  2929                           postinc2	equ	0xFDE
  2930                           postdec2	equ	0xFDD
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8
  2934                           
  2935 ;; *************** function i2_lcdNibble *****************
  2936 ;; Defined at:
  2937 ;;		line 37 in file "lcd.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  data            1    wreg     unsigned char 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  data            1    1[COMRAM] unsigned char 
  2942 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;Total ram usage:        2 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		i2_lcdInst
  2962 ;;		i2_putch
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text22
  2967  00147C                     __ptext22:
  2968                           	opt stack 0
  2969  00147C                     i2_lcdNibble:
  2970                           	opt stack 24
  2971                           
  2972                           ;incstack = 0
  2973                           ;i2lcdNibble@data stored from wreg
  2974  00147C  6E02               	movwf	i2lcdNibble@data,c
  2975                           
  2976                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
  2977  00147E  5002               	movf	i2lcdNibble@data,w,c
  2978  001480  0BF0               	andlw	240
  2979  001482  6E01               	movwf	i2lcdNibble@temp,c
  2980                           
  2981                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
  2982  001484  508C               	movf	3980,w,c	;volatile
  2983  001486  0B0F               	andlw	15
  2984  001488  6E8C               	movwf	3980,c	;volatile
  2985                           
  2986                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
  2987  00148A  5001               	movf	i2lcdNibble@temp,w,c
  2988  00148C  108C               	iorwf	3980,w,c	;volatile
  2989  00148E  6E8C               	movwf	3980,c	;volatile
  2990                           
  2991                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  2992  001490  0E00               	movlw	0
  2993  001492  BEF2               	btfsc	intcon,7,c	;volatile
  2994  001494  0E01               	movlw	1
  2995  001496  6E50               	movwf	_LCDinterruptState,c
  2996  001498  9EF2               	bcf	intcon,7,c	;volatile
  2997  00149A  868C               	bsf	3980,3,c	;volatile
  2998  00149C  0E42               	movlw	66
  2999  00149E                     i2u121_47:
  3000  00149E  2EE8               	decfsz	wreg,f,c
  3001  0014A0  D7FE               	bra	i2u121_47
  3002  0014A2  D000               	nop2	
  3003  0014A4  968C               	bcf	3980,3,c	;volatile
  3004  0014A6  0EA0               	movlw	160
  3005  0014A8                     i2u122_47:
  3006  0014A8  D000               	nop2	
  3007  0014AA  2EE8               	decfsz	wreg,f,c
  3008  0014AC  D7FD               	bra	i2u122_47
  3009  0014AE  B050               	btfsc	_LCDinterruptState,0,c
  3010  0014B0  D002               	bra	i2u47_45
  3011  0014B2  9EF2               	bcf	intcon,7,c	;volatile
  3012  0014B4  D001               	bra	i2u47_46
  3013  0014B6                     i2u47_45:
  3014  0014B6  8EF2               	bsf	intcon,7,c	;volatile
  3015  0014B8                     i2u47_46:
  3016                           
  3017                           ;lcd.c: 52: data = (unsigned char) (data << 4);
  3018  0014B8  3802               	swapf	i2lcdNibble@data,w,c
  3019  0014BA  0BF0               	andlw	240
  3020  0014BC  6E02               	movwf	i2lcdNibble@data,c
  3021                           
  3022                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
  3023  0014BE  5002               	movf	i2lcdNibble@data,w,c
  3024  0014C0  0BF0               	andlw	240
  3025  0014C2  6E01               	movwf	i2lcdNibble@temp,c
  3026                           
  3027                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
  3028  0014C4  508C               	movf	3980,w,c	;volatile
  3029  0014C6  0B0F               	andlw	15
  3030  0014C8  6E8C               	movwf	3980,c	;volatile
  3031                           
  3032                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
  3033  0014CA  5001               	movf	i2lcdNibble@temp,w,c
  3034  0014CC  108C               	iorwf	3980,w,c	;volatile
  3035  0014CE  6E8C               	movwf	3980,c	;volatile
  3036                           
  3037                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  3038  0014D0  0E00               	movlw	0
  3039  0014D2  BEF2               	btfsc	intcon,7,c	;volatile
  3040  0014D4  0E01               	movlw	1
  3041  0014D6  6E50               	movwf	_LCDinterruptState,c
  3042  0014D8  9EF2               	bcf	intcon,7,c	;volatile
  3043  0014DA  868C               	bsf	3980,3,c	;volatile
  3044  0014DC  0E42               	movlw	66
  3045  0014DE                     i2u123_47:
  3046  0014DE  2EE8               	decfsz	wreg,f,c
  3047  0014E0  D7FE               	bra	i2u123_47
  3048  0014E2  D000               	nop2	
  3049  0014E4  968C               	bcf	3980,3,c	;volatile
  3050  0014E6  0EA0               	movlw	160
  3051  0014E8                     i2u124_47:
  3052  0014E8  D000               	nop2	
  3053  0014EA  2EE8               	decfsz	wreg,f,c
  3054  0014EC  D7FD               	bra	i2u124_47
  3055  0014EE  B050               	btfsc	_LCDinterruptState,0,c
  3056  0014F0  D002               	bra	i2u48_45
  3057  0014F2  9EF2               	bcf	intcon,7,c	;volatile
  3058  0014F4  D001               	bra	i2u48_46
  3059  0014F6                     i2u48_45:
  3060  0014F6  8EF2               	bsf	intcon,7,c	;volatile
  3061  0014F8                     i2u48_46:
  3062  0014F8  0012               	return		;funcret
  3063  0014FA                     __end_ofi2_lcdNibble:
  3064                           	opt stack 0
  3065                           pclatu	equ	0xFFB
  3066                           pclath	equ	0xFFA
  3067                           tblptru	equ	0xFF8
  3068                           tblptrh	equ	0xFF7
  3069                           tblptrl	equ	0xFF6
  3070                           tablat	equ	0xFF5
  3071                           prodh	equ	0xFF4
  3072                           prodl	equ	0xFF3
  3073                           intcon	equ	0xFF2
  3074                           postinc0	equ	0xFEE
  3075                           fsr0h	equ	0xFEA
  3076                           fsr0l	equ	0xFE9
  3077                           wreg	equ	0xFE8
  3078                           fsr1h	equ	0xFE2
  3079                           fsr1l	equ	0xFE1
  3080                           postinc2	equ	0xFDE
  3081                           postdec2	equ	0xFDD
  3082                           fsr2h	equ	0xFDA
  3083                           fsr2l	equ	0xFD9
  3084                           status	equ	0xFD8
  3085                           pclatu	equ	0xFFB
  3086                           pclath	equ	0xFFA
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           prodh	equ	0xFF4
  3092                           prodl	equ	0xFF3
  3093                           intcon	equ	0xFF2
  3094                           postinc0	equ	0xFEE
  3095                           fsr0h	equ	0xFEA
  3096                           fsr0l	equ	0xFE9
  3097                           wreg	equ	0xFE8
  3098                           fsr1h	equ	0xFE2
  3099                           fsr1l	equ	0xFE1
  3100                           postinc2	equ	0xFDE
  3101                           postdec2	equ	0xFDD
  3102                           fsr2h	equ	0xFDA
  3103                           fsr2l	equ	0xFD9
  3104                           status	equ	0xFD8
  3105                           
  3106                           	psect	rparam
  3107  0000                     pclatu	equ	0xFFB
  3108                           pclath	equ	0xFFA
  3109                           tblptru	equ	0xFF8
  3110                           tblptrh	equ	0xFF7
  3111                           tblptrl	equ	0xFF6
  3112                           tablat	equ	0xFF5
  3113                           prodh	equ	0xFF4
  3114                           prodl	equ	0xFF3
  3115                           intcon	equ	0xFF2
  3116                           postinc0	equ	0xFEE
  3117                           fsr0h	equ	0xFEA
  3118                           fsr0l	equ	0xFE9
  3119                           wreg	equ	0xFE8
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           postinc2	equ	0xFDE
  3123                           postdec2	equ	0xFDD
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8
  3127                           
  3128                           	psect	temp
  3129  000051                     btemp:
  3130                           	opt stack 0
  3131  000051                     	ds	1
  3132  0000                     int$flags	set	btemp
  3133  0000                     wtemp6	set	btemp+1
  3134                           pclatu	equ	0xFFB
  3135                           pclath	equ	0xFFA
  3136                           tblptru	equ	0xFF8
  3137                           tblptrh	equ	0xFF7
  3138                           tblptrl	equ	0xFF6
  3139                           tablat	equ	0xFF5
  3140                           prodh	equ	0xFF4
  3141                           prodl	equ	0xFF3
  3142                           intcon	equ	0xFF2
  3143                           postinc0	equ	0xFEE
  3144                           fsr0h	equ	0xFEA
  3145                           fsr0l	equ	0xFE9
  3146                           wreg	equ	0xFE8
  3147                           fsr1h	equ	0xFE2
  3148                           fsr1l	equ	0xFE1
  3149                           postinc2	equ	0xFDE
  3150                           postdec2	equ	0xFDD
  3151                           fsr2h	equ	0xFDA
  3152                           fsr2l	equ	0xFD9
  3153                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    16
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     70      80
    BANK0           128      2       2
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[3]), STR_3(CODE[11]), STR_2(CODE[3]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_sendData->_I2C_Master_Write
    _I2C_init->_I2C_Master_Init
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_initLCD->i2_lcdInst
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2852
                                             69 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                           _I2C_init
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1856
                                             57 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     135
                                             47 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             52 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                             45 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                             48 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     135
                                             47 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0     113
                                             45 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_sendData                                         1     1      0     332
                                             48 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0     391
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     301
                                             46 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             45 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      4     0      4      90
                                             45 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interruptHandler                                    21    21      0    1265
                                             24 COMRAM    21    21      0
                          i2_initLCD
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (5) i2_printf                                            21    17      4     972
                                             12 COMRAM    12     8      4
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (6) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (6) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) i2_initLCD                                            1     1      0     135
                                              3 COMRAM     1     1      0
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (5) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
     _I2C_Master_Init
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_sendData
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _lcdNibble

 _interruptHandler (ROOT)
   i2_initLCD
     i2_lcdInst
       i2_lcdNibble
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2_putch
       i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2       2       5        1.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     46      50       1       63.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      34        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 30 23:55:24 2018

                __CFG_CPD$ON 000000           i2___lwdiv@dividend 0001                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          l231 1028                          l240 108A  
                        l232 1038                          l154 13A4                          l244 10CC  
                        l245 111A                          l157 13D4                          l246 10D2  
                        l238 1062                          l653 1518                          l654 1510  
                        l663 164C                          l664 1644                          l657 1538  
                        l658 1542                          l667 1664                          l668 166E  
               __CFG_CPB$OFF 000000                          u815 1438                          u816 143A  
                        u825 1478                          u826 147A                          u860 151C  
                        u950 10BA                          u890 1650                          u970 1122  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1831 108E                         _ADON 007E10                         STR_1 1011  
                       STR_2 1019                         STR_3 1011                         STR_4 1019  
                       u1050 13B0                         u1107 15D8                         u1117 1758  
                       u1127 1420                         u1137 142A                         u1058 13B2  
                       u1147 1460                         u1157 146A                         u1077 13F4  
                       _LATA 000F89                         _LATB 000F8A                         u1087 1744  
                       _LATC 000F8B                         _LATD 000F8C                         u1097 15A4  
                       _LATE 000F8D                         _RBIE 007F93                         _RBIF 007F90  
                       _main 1342     __end_of_interruptHandler 1342                         fsr0h 000FEA  
                       fsr1h 000FE2           i2___lwdiv@quotient 0005                         fsr2h 000FDA  
                       fsr0l 000FE9                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 0051             __end_of_I2C_init 16E4                         prodh 000FF4  
                       prodl 000FF3                         start 000E                __CFG_IESO$OFF 000000  
            __end_ofi2_putch 1774                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
                i2_lcdNibble 147C             __end_of_LCD_LEFT 100C             ?_I2C_Master_Init 002E  
           ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001                        ?_main 0001  
            __end_of___lwdiv 154C              __end_of___lwmod 1678                        i2l231 1146  
                      i2l240 11A8                        i2l232 1156                        i2l244 11EA  
                      i2l245 1238                        i2l246 11F0                        i2l238 1180  
                      i2l166 12F4                        i2l653 156A                        i2l654 1562  
                      i2l663 168E                        i2l664 1686                        i2l657 158A  
                      i2l658 1594                        i2l667 16A6                        i2l668 16B0  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000              __end_of_lcdInst 1760               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000              __end_of_initLCD 15EA               __CFG_EBTRB$OFF 000000  
            __end_of_dpowers 100B                        _putch 1738                        pclath 000FFA  
                      tablat 000FF5            _LCDinterruptState 0050                        status 000FD8  
                      wtemp6 0052               __CFG_PBADEN$ON 000000        __size_of_I2C_sendData 0022  
           __end_ofi2_printf 125A           __size_ofi2___lwdiv 0052           __size_ofi2___lwmod 0042  
            __initialization 1706           __size_ofi2_lcdInst 0014                 __end_of_main 13FE  
                 i2printf@ap 0012           __size_ofi2_initLCD 004C            __end_of_LCD_RIGHT 100D  
                     ??_main 0046                __activetblptr 000002            ?_I2C_Master_Start 0001  
          ?_I2C_Master_Write 002F           ??_I2C_Master_Start 002F                       _ADCON0 000FC2  
                     _ADCON1 000FC1           ??_I2C_Master_Write 0031                       _ADRESH 000FC4  
                     _ADRESL 000FC3              i2lcdNibble@data 0002                       ?_putch 0001  
               _I2C_sendData 16E4              i2lcdNibble@temp 0001                       i2l1673 12F6  
                     i2l1579 11AC                       _OSCCON 000FD3                    ??i2_putch 0003  
                     _SSPADD 000FC8                       _SSPBUF 000FC9               __CFG_XINST$OFF 000000  
             __CFG_STVREN$ON 000000                    ??___lwdiv 0032                    ??___lwmod 0039  
                     clear_0 170C                    ??_lcdInst 0030                       _printf 101E  
                  ??_initLCD 0031            __end_ofi2___lwdiv 159E                 __mediumconst 0000  
          __end_ofi2___lwmod 16BA                    ?_I2C_init 0001                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8            __end_ofi2_lcdInst 1788  
          __end_ofi2_initLCD 1636                   __accesstop 0080      __end_of__initialization 1712  
              ___rparam_used 000001           i2___lwmod@dividend 0008               __pcstackCOMRAM 0001  
              __end_of_putch 174C                  i2printf@val 0016           __size_of_lcdNibble 007E  
                i2putch@data 0003                   ??_I2C_init 0032                    ?i2_printf 000D  
                    ??_putch 0030            ?_interruptHandler 0001           ??_interruptHandler 0019  
               ?i2_lcdNibble 0001                      ?_printf 003A                   ??i2_printf 0011  
                    i2u47_45 14B6                      i2u47_46 14B8                      i2u56_40 156E  
                    i2u48_45 14F6                      i2u48_46 14F8                      i2u73_40 11D8  
                    i2u59_40 1692                      i2u75_40 1240                      i2u79_40 12B4  
                    i2u79_48 12B6         lcd@LCDinterruptState 004F                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7                      _B_count 004D  
                    i2_putch 1760                      _N_count 004B            __end_of_lcdNibble 147C  
                    _S_count 0049                      __Hparam 0000                      __Lparam 0000  
                    _W_count 0047                      ___lwdiv 14FA                      ___lwmod 1636  
               __psmallconst 1000                      __pcinit 1706                      __ramtop 1000  
                    _lcdInst 174C                      __ptext0 1342                      __ptext1 101E  
                    __ptext2 1738                      __ptext3 1636                      __ptext4 14FA  
                    __ptext5 159E                      __ptext6 174C                      __ptext7 13FE  
                    __ptext8 16E4                      __ptext9 16BA              __size_of_printf 011E  
                    _initLCD 159E                      _dpowers 1001                    _LCD_RIGHT 100C  
   __size_of_I2C_Master_Init 0018     __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008  
             __pintcode_body 125A         end_of_initialization 1712        __end_of_LCD_SIZE_HORZ 100F  
      __end_of_LCD_SIZE_VERT 100E                __Lmediumconst 0000                      int_func 125A  
  __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A                      printf@c 0045  
                    printf@f 003A                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE                    _PORTBbits 000F81                    _TRISBbits 000F93  
                  _TRISCbits 000F94            __size_of_I2C_init 002A            i2___lwdiv@divisor 0003  
                  i2___lwdiv 154C                    i2___lwmod 1678            i2___lwdiv@counter 0007  
                  i2_lcdInst 1774                    i2_initLCD 15EA         __size_ofi2_lcdNibble 007E  
              i2lcdInst@data 0003        interruptHandler@input 002C               __end_of_printf 113C  
               i2printf@flag 0014                 i2printf@prec 0015          start_initialization 1706  
                  i2printf@c 0018                    i2printf@f 000D                   ?i2___lwdiv 0001  
                 ?i2___lwmod 0008            __size_ofi2_printf 011E            ??_I2C_Master_Init 0032  
          ??_I2C_Master_Wait 002E                   ?i2_lcdInst 0001            ??_I2C_Master_Stop 002F  
           __CFG_OSC$INTIO67 000000                   ?i2_initLCD 0001     I2C_Master_Init@clockFreq 002E  
           __CFG_LPT1OSC$OFF 000000                     ??_printf 003E    __size_of_interruptHandler 133A  
                __pbssCOMRAM 0047                __pcstackBANK0 0080            i2___lwmod@divisor 000A  
          i2___lwmod@counter 000C                     ?i2_putch 0001             _I2C_Master_Start 17AC  
           _I2C_Master_Write 179A             ___lwdiv@dividend 002E            __CFG_CCP2MX$PORTC 000000  
                  __pintcode 0008                    _lcdNibble 13FE                     ?___lwdiv 002E  
                   ?___lwmod 0035                     ?_lcdInst 0001                     ?_initLCD 0001  
                __smallconst 1000                     _I2C_init 16BA             ___lwdiv@quotient 0033  
              ?_I2C_sendData 0001                  ??i2___lwdiv 0005                  ??i2___lwmod 000C  
             __size_of_putch 0014                     _LCD_LEFT 100B                  ??i2_lcdInst 0003  
                   _LATCbits 000F8B                     _LATDbits 000F8C                  ??i2_initLCD 0004  
                   i2u120_47 1780                     i2u121_47 149E                     i2u122_47 14A8  
                   i2u123_47 14DE                     i2u124_47 14E8                     i2u116_47 12EC  
                   i2u117_47 176C                     i2u118_47 15F0                     i2u119_47 1624  
           __CFG_WDTPS$32768 000000                   ?_lcdNibble 0001                   _ADCON0bits 000FC2  
                 _ADCON2bits 000FC0                lcdNibble@data 002F                   printf@flag 0041  
              lcdNibble@temp 002E                   printf@prec 0042                    main@input 0080  
                   i2_printf 113C               ??_I2C_sendData 0031               _LCD_HORZ_LIMIT 1010  
           __size_ofi2_putch 0014                     __Hrparam 0000        I2C_sendData@char_data 0031  
                   __Lrparam 0000           __CFG_BOREN$SBORDIS 000000             __size_of___lwdiv 0052  
           __size_of___lwmod 0042             _interruptHandler 0008             __size_of_lcdInst 0014  
            _I2C_Master_Init 1720             __size_of_initLCD 004C              _I2C_Master_Wait 1788  
            _I2C_Master_Stop 17A4       __end_of_LCD_HORZ_LIMIT 1011              ___lwdiv@divisor 0030  
            ___lwdiv@counter 0032                     __ptext10 179A                     __ptext11 17A4  
                   __ptext20 15EA                     __ptext12 17AC                     __ptext21 1774  
                   __ptext13 1788                     __ptext22 147C                     __ptext14 1720  
                   __ptext16 113C                     __ptext17 1760                     __ptext18 1678  
                   __ptext19 154C               _LCD_VERT_LIMIT 100F                __size_of_main 00BC  
              ??i2_lcdNibble 0001                  ??_lcdNibble 002E                     int$flags 0051  
                  printf@val 0043  I2C_Master_Write@byteToWrite 002F                    putch@data 0030  
   __end_of_I2C_Master_Start 17B4                  _OSCTUNEbits 000F9B     __end_of_I2C_Master_Write 17A4  
                 _INTCONbits 000FF2       __end_of_LCD_VERT_LIMIT 1010                     intlevel2 0000  
              _LCD_SIZE_HORZ 100E             ___lwmod@dividend 0035                _LCD_SIZE_VERT 100D  
                   printf@ap 003F         __end_of_I2C_sendData 1706      __end_of_I2C_Master_Init 1738  
    __end_of_I2C_Master_Wait 179A      __end_of_I2C_Master_Stop 17AC                  lcdInst@data 0030  
        __end_ofi2_lcdNibble 14FA              ___lwmod@divisor 0037              ___lwmod@counter 0039  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
