

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr  3 01:01:58 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 1.45
    49                           ; Generated 16/11/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4620 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001D3E                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _max
    88  001D3E  0004               	dw	4
    89                           
    90                           ;initializer for _spacingTime
    91  001D40  2710               	dw	10000
    92                           
    93                           ;initializer for _W_input
    94  001D42  0001               	dw	1
    95                           
    96                           ;initializer for _S_input
    97  001D44  0001               	dw	1
    98                           
    99                           ;initializer for _N_input
   100  001D46  0001               	dw	1
   101                           
   102                           ;initializer for _B_input
   103  001D48  0001               	dw	1
   104                           
   105                           	psect	smallconst
   106  001000                     __psmallconst:
   107                           	opt stack 0
   108  001000  00                 	db	0
   109  001001                     _dpowers:
   110                           	opt stack 0
   111  001001  0001               	dw	1
   112  001003  000A               	dw	10
   113  001005  0064               	dw	100
   114  001007  03E8               	dw	1000
   115  001009  2710               	dw	10000
   116  00100B                     __end_of_dpowers:
   117                           	opt stack 0
   118  00100B                     _LCD_LEFT:
   119                           	opt stack 0
   120  00100B  00                 	db	0
   121  00100C                     __end_of_LCD_LEFT:
   122                           	opt stack 0
   123  00100C                     _LCD_RIGHT:
   124                           	opt stack 0
   125  00100C  01                 	db	1
   126  00100D                     __end_of_LCD_RIGHT:
   127                           	opt stack 0
   128  00100D                     _LCD_SIZE_VERT:
   129                           	opt stack 0
   130  00100D  02                 	db	2
   131  00100E                     __end_of_LCD_SIZE_VERT:
   132                           	opt stack 0
   133  00100E                     _LCD_SIZE_HORZ:
   134                           	opt stack 0
   135  00100E  10                 	db	16
   136  00100F                     __end_of_LCD_SIZE_HORZ:
   137                           	opt stack 0
   138  00100F                     _LCD_VERT_LIMIT:
   139                           	opt stack 0
   140  00100F  02                 	db	2
   141  001010                     __end_of_LCD_VERT_LIMIT:
   142                           	opt stack 0
   143  001010                     _LCD_HORZ_LIMIT:
   144                           	opt stack 0
   145  001010  28                 	db	40
   146  001011                     __end_of_LCD_HORZ_LIMIT:
   147                           	opt stack 0
   148  0000                     _SSPBUF	set	4041
   149  0000                     _SSPCON2bits	set	4037
   150  0000                     _SSPADD	set	4040
   151  0000                     _SSPCON2	set	4037
   152  0000                     _SSPCON1	set	4038
   153  0000                     _SSPSTAT	set	4039
   154  0000                     _SSPCON1bits	set	4038
   155  0000                     _ADRESL	set	4035
   156  0000                     _ADRESH	set	4036
   157  0000                     _ADCON0bits	set	4034
   158  0000                     _PORTBbits	set	3969
   159  0000                     _TRISBbits	set	3987
   160  0000                     _TRISCbits	set	3988
   161  0000                     _LATCbits	set	3979
   162  0000                     _ADCON2bits	set	4032
   163  0000                     _ADCON1	set	4033
   164  0000                     _ADCON0	set	4034
   165  0000                     _TRISE	set	3990
   166  0000                     _TRISD	set	3989
   167  0000                     _TRISC	set	3988
   168  0000                     _TRISB	set	3987
   169  0000                     _TRISA	set	3986
   170  0000                     _LATE	set	3981
   171  0000                     _LATC	set	3979
   172  0000                     _LATB	set	3978
   173  0000                     _LATA	set	3977
   174  0000                     _OSCTUNEbits	set	3995
   175  0000                     _OSCCONbits	set	4051
   176  0000                     _INTCONbits	set	4082
   177  0000                     _LATD	set	3980
   178  0000                     _LATDbits	set	3980
   179  0000                     _ADON	set	32272
   180  0000                     _RBIF	set	32656
   181  0000                     _RBIE	set	32659
   182  001011                     STR_1:
   183  001011  42                 	db	66	;'B'
   184  001012  3A                 	db	58	;':'
   185  001013  25                 	db	37
   186  001014  64                 	db	100	;'d'
   187  001015  2C                 	db	44
   188  001016  4E                 	db	78	;'N'
   189  001017  3A                 	db	58	;':'
   190  001018  25                 	db	37
   191  001019  64                 	db	100	;'d'
   192  00101A  2C                 	db	44
   193  00101B  53                 	db	83	;'S'
   194  00101C  3A                 	db	58	;':'
   195  00101D  25                 	db	37
   196  00101E  64                 	db	100	;'d'
   197  00101F  2C                 	db	44
   198  001020  57                 	db	87	;'W'
   199  001021  3A                 	db	58	;':'
   200  001022  25                 	db	37
   201  001023  64                 	db	100	;'d'
   202  001024  00                 	db	0
   203  001025                     STR_5:
   204  001025  73                 	db	115	;'s'
   205  001026  70                 	db	112	;'p'
   206  001027  61                 	db	97	;'a'
   207  001028  63                 	db	99	;'c'
   208  001029  65                 	db	101	;'e'
   209  00102A  72                 	db	114	;'r'
   210  00102B  5F                 	db	95	;'_'
   211  00102C  69                 	db	105	;'i'
   212  00102D  6E                 	db	110	;'n'
   213  00102E  74                 	db	116	;'t'
   214  00102F  65                 	db	101	;'e'
   215  001030  72                 	db	114	;'r'
   216  001031  72                 	db	114	;'r'
   217  001032  75                 	db	117	;'u'
   218  001033  70                 	db	112	;'p'
   219  001034  74                 	db	116	;'t'
   220  001035  65                 	db	101	;'e'
   221  001036  64                 	db	100	;'d'
   222  001037  00                 	db	0
   223  001038                     STR_6:
   224  001038  77                 	db	119	;'w'
   225  001039  61                 	db	97	;'a'
   226  00103A  73                 	db	115	;'s'
   227  00103B  68                 	db	104	;'h'
   228  00103C  65                 	db	101	;'e'
   229  00103D  72                 	db	114	;'r'
   230  00103E  5F                 	db	95	;'_'
   231  00103F  69                 	db	105	;'i'
   232  001040  6E                 	db	110	;'n'
   233  001041  74                 	db	116	;'t'
   234  001042  65                 	db	101	;'e'
   235  001043  72                 	db	114	;'r'
   236  001044  72                 	db	114	;'r'
   237  001045  75                 	db	117	;'u'
   238  001046  70                 	db	112	;'p'
   239  001047  74                 	db	116	;'t'
   240  001048  00                 	db	0
   241  001049                     STR_3:
   242  001049  62                 	db	98	;'b'
   243  00104A  6F                 	db	111	;'o'
   244  00104B  6C                 	db	108	;'l'
   245  00104C  74                 	db	116	;'t'
   246  00104D  5F                 	db	95	;'_'
   247  00104E  69                 	db	105	;'i'
   248  00104F  6E                 	db	110	;'n'
   249  001050  74                 	db	116	;'t'
   250  001051  65                 	db	101	;'e'
   251  001052  72                 	db	114	;'r'
   252  001053  72                 	db	114	;'r'
   253  001054  75                 	db	117	;'u'
   254  001055  70                 	db	112	;'p'
   255  001056  74                 	db	116	;'t'
   256  001057  00                 	db	0
   257  001058                     STR_4:
   258  001058  6E                 	db	110	;'n'
   259  001059  75                 	db	117	;'u'
   260  00105A  74                 	db	116	;'t'
   261  00105B  5F                 	db	95	;'_'
   262  00105C  69                 	db	105	;'i'
   263  00105D  6E                 	db	110	;'n'
   264  00105E  74                 	db	116	;'t'
   265  00105F  65                 	db	101	;'e'
   266  001060  72                 	db	114	;'r'
   267  001061  72                 	db	114	;'r'
   268  001062  75                 	db	117	;'u'
   269  001063  70                 	db	112	;'p'
   270  001064  74                 	db	116	;'t'
   271  001065  00                 	db	0
   272  0000                     
   273                           ; #config settings
   274  001066  00                 	db	0	; dummy byte at the end
   275  0000                     
   276                           	psect	cinit
   277  001C3E                     __pcinit:
   278                           	opt stack 0
   279  001C3E                     start_initialization:
   280                           	opt stack 0
   281  001C3E                     __initialization:
   282                           	opt stack 0
   283                           
   284                           ; Initialize objects allocated to COMRAM (12 bytes)
   285                           ; load TBLPTR registers with __pidataCOMRAM
   286  001C3E  0E3E               	movlw	low __pidataCOMRAM
   287  001C40  6EF6               	movwf	tblptrl,c
   288  001C42  0E1D               	movlw	high __pidataCOMRAM
   289  001C44  6EF7               	movwf	tblptrh,c
   290  001C46  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   291  001C48  6EF8               	movwf	tblptru,c
   292  001C4A  EE00  F04A         	lfsr	0,__pdataCOMRAM
   293  001C4E  EE10 F00C          	lfsr	1,12
   294  001C52                     copy_data0:
   295  001C52  0009               	tblrd		*+
   296  001C54  CFF5 FFEE          	movff	tablat,postinc0
   297  001C58  50E5               	movf	postdec1,w,c
   298  001C5A  50E1               	movf	fsr1l,w,c
   299  001C5C  E1FA               	bnz	copy_data0
   300                           
   301                           ; Clear objects allocated to COMRAM (18 bytes)
   302  001C5E  EE00  F038         	lfsr	0,__pbssCOMRAM
   303  001C62  0E12               	movlw	18
   304  001C64                     clear_0:
   305  001C64  6AEE               	clrf	postinc0,c
   306  001C66  06E8               	decf	wreg,f,c
   307  001C68  E1FD               	bnz	clear_0
   308  001C6A                     end_of_initialization:
   309                           	opt stack 0
   310  001C6A                     __end_of__initialization:
   311                           	opt stack 0
   312  001C6A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   313  001C6C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   314  001C6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   315  001C70  6EF8               	movwf	tblptru,c
   316  001C72  0100               	movlb	0
   317  001C74  EF28  F009         	goto	_main	;jump to C main() function
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	bssCOMRAM
   328  000038                     __pbssCOMRAM:
   329                           	opt stack 0
   330  000038                     _W_spacingTime:
   331                           	opt stack 0
   332  000038                     	ds	2
   333  00003A                     _S_spacingTime:
   334                           	opt stack 0
   335  00003A                     	ds	2
   336  00003C                     _N_spacingTime:
   337                           	opt stack 0
   338  00003C                     	ds	2
   339  00003E                     _B_spacingTime:
   340                           	opt stack 0
   341  00003E                     	ds	2
   342  000040                     _W_count:
   343                           	opt stack 0
   344  000040                     	ds	2
   345  000042                     _S_count:
   346                           	opt stack 0
   347  000042                     	ds	2
   348  000044                     _N_count:
   349                           	opt stack 0
   350  000044                     	ds	2
   351  000046                     _B_count:
   352                           	opt stack 0
   353  000046                     	ds	2
   354  000048                     	ds	1
   355  000049                     _LCDinterruptState:
   356                           	opt stack 0
   357  000049                     	ds	1
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	dataCOMRAM
   368  00004A                     __pdataCOMRAM:
   369                           	opt stack 0
   370  00004A                     _max:
   371                           	opt stack 0
   372  00004A                     	ds	2
   373  00004C                     _spacingTime:
   374                           	opt stack 0
   375  00004C                     	ds	2
   376  00004E                     _W_input:
   377                           	opt stack 0
   378  00004E                     	ds	2
   379  000050                     _S_input:
   380                           	opt stack 0
   381  000050                     	ds	2
   382  000052                     _N_input:
   383                           	opt stack 0
   384  000052                     	ds	2
   385  000054                     _B_input:
   386                           	opt stack 0
   387  000054                     	ds	2
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           
   397                           	psect	cstackBANK0
   398  000080                     __pcstackBANK0:
   399                           	opt stack 0
   400  000080                     ?_printf:
   401                           	opt stack 0
   402  000080                     printf@f:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x0
   406  000080                     	ds	10
   407  00008A                     printf@ap:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0xA
   411  00008A                     	ds	2
   412  00008C                     printf@flag:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0xC
   416  00008C                     	ds	1
   417  00008D                     printf@prec:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0xD
   421  00008D                     	ds	1
   422  00008E                     printf@val:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0xE
   426  00008E                     	ds	2
   427  000090                     printf@c:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x10
   431  000090                     	ds	1
   432  000091                     Bolt_dispense@B_max:
   433                           	opt stack 0
   434  000091                     Nut_dispense@N_max:
   435                           	opt stack 0
   436  000091                     Spacer_dispense@S_max:
   437                           	opt stack 0
   438  000091                     Washer_dispense@W_max:
   439                           	opt stack 0
   440  000091                     Bolt_remain@time:
   441                           	opt stack 0
   442  000091                     Nut_remain@time:
   443                           	opt stack 0
   444  000091                     Spacer_remain@time:
   445                           	opt stack 0
   446  000091                     Washer_remain@time:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x11
   450  000091                     	ds	2
   451  000093                     ??_main:
   452                           
   453                           ; 1 bytes @ 0x13
   454  000093                     	ds	2
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           tblptrl	equ	0xFF6
   458                           tablat	equ	0xFF5
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           postdec1	equ	0xFE5
   462                           fsr1l	equ	0xFE1
   463                           
   464                           	psect	cstackCOMRAM
   465  000001                     __pcstackCOMRAM:
   466                           	opt stack 0
   467  000001                     ?i2___lwdiv:
   468                           	opt stack 0
   469  000001                     i2lcdNibble@temp:
   470                           	opt stack 0
   471  000001                     i2___lwdiv@dividend:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x0
   475  000001                     	ds	1
   476  000002                     i2lcdNibble@data:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x1
   480  000002                     	ds	1
   481  000003                     i2lcdInst@data:
   482                           	opt stack 0
   483  000003                     i2putch@data:
   484                           	opt stack 0
   485  000003                     i2___lwdiv@divisor:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x2
   489  000003                     	ds	1
   490  000004                     ??i2_initLCD:
   491                           
   492                           ; 1 bytes @ 0x3
   493  000004                     	ds	1
   494  000005                     i2___lwdiv@quotient:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x4
   498  000005                     	ds	2
   499  000007                     i2___lwdiv@counter:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x6
   503  000007                     	ds	1
   504  000008                     ?i2___lwmod:
   505                           	opt stack 0
   506  000008                     i2___lwmod@dividend:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x7
   510  000008                     	ds	2
   511  00000A                     i2___lwmod@divisor:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x9
   515  00000A                     	ds	2
   516  00000C                     i2___lwmod@counter:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0xB
   520  00000C                     	ds	1
   521  00000D                     ?i2_printf:
   522                           	opt stack 0
   523  00000D                     i2printf@f:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xC
   527  00000D                     	ds	2
   528  00000F                     ??i2_printf:
   529                           
   530                           ; 1 bytes @ 0xE
   531  00000F                     	ds	1
   532  000010                     i2printf@ap:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0xF
   536  000010                     	ds	2
   537  000012                     i2printf@flag:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x11
   541  000012                     	ds	1
   542  000013                     i2printf@prec:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x12
   546  000013                     	ds	1
   547  000014                     i2printf@val:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x13
   551  000014                     	ds	2
   552  000016                     i2printf@c:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x15
   556  000016                     	ds	1
   557  000017                     ??_interruptHandler:
   558                           
   559                           ; 1 bytes @ 0x16
   560  000017                     	ds	19
   561  00002A                     ??_I2C_Master_Wait:
   562  00002A                     ?___lwdiv:
   563                           	opt stack 0
   564  00002A                     lcdNibble@temp:
   565                           	opt stack 0
   566  00002A                     ___lwdiv@dividend:
   567                           	opt stack 0
   568  00002A                     I2C_Master_Init@clockFreq:
   569                           	opt stack 0
   570                           
   571                           ; 4 bytes @ 0x29
   572  00002A                     	ds	1
   573  00002B                     lcdNibble@data:
   574                           	opt stack 0
   575  00002B                     I2C_Master_Write@byteToWrite:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x2A
   579  00002B                     	ds	1
   580  00002C                     lcdInst@data:
   581                           	opt stack 0
   582  00002C                     putch@data:
   583                           	opt stack 0
   584  00002C                     ___lwdiv@divisor:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x2B
   588  00002C                     	ds	1
   589  00002D                     ??_initLCD:
   590  00002D                     I2C_sendData@char_data:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x2C
   594  00002D                     	ds	1
   595  00002E                     ___lwdiv@counter:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x2D
   599  00002E                     	ds	1
   600  00002F                     ___lwdiv@quotient:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x2E
   604  00002F                     	ds	2
   605  000031                     ?___lwmod:
   606                           	opt stack 0
   607  000031                     ___lwmod@dividend:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x30
   611  000031                     	ds	2
   612  000033                     ___lwmod@divisor:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x32
   616  000033                     	ds	2
   617  000035                     ___lwmod@counter:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x34
   621  000035                     	ds	1
   622  000036                     ??_printf:
   623                           
   624                           ; 1 bytes @ 0x35
   625  000036                     	ds	1
   626  000037                     ??_Bolt_dispense:
   627  000037                     ??_Nut_dispense:
   628  000037                     ??_Spacer_dispense:
   629  000037                     ??_Washer_dispense:
   630  000037                     ??_Bolt_remain:
   631  000037                     ??_Nut_remain:
   632  000037                     ??_Spacer_remain:
   633  000037                     ??_Washer_remain:
   634                           
   635                           ; 1 bytes @ 0x36
   636  000037                     	ds	1
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           postdec1	equ	0xFE5
   644                           fsr1l	equ	0xFE1
   645                           
   646 ;;
   647 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   648 ;;
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 48 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   668 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;Total ram usage:        2 bytes
   670 ;; Hardware stack levels required when called:    8
   671 ;; This function calls:
   672 ;;		_Bolt_dispense
   673 ;;		_Bolt_remain
   674 ;;		_I2C_init
   675 ;;		_Nut_dispense
   676 ;;		_Nut_remain
   677 ;;		_Spacer_dispense
   678 ;;		_Spacer_remain
   679 ;;		_Washer_dispense
   680 ;;		_Washer_remain
   681 ;;		_initLCD
   682 ;;		_lcdInst
   683 ;;		_printf
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text0
   690  001250                     __ptext0:
   691                           	opt stack 0
   692  001250                     _main:
   693                           	opt stack 23
   694                           
   695                           ;main.c: 55: OSCCONbits.IRCF2 = 1;
   696                           
   697                           ;incstack = 0
   698  001250  8CD3               	bsf	4051,6,c	;volatile
   699                           
   700                           ;main.c: 56: OSCCONbits.IRCF1 = 1;
   701  001252  8AD3               	bsf	4051,5,c	;volatile
   702                           
   703                           ;main.c: 57: OSCCONbits.IRCF0 = 1;
   704  001254  88D3               	bsf	4051,4,c	;volatile
   705                           
   706                           ;main.c: 58: OSCCONbits.SCS1 = 1;
   707  001256  82D3               	bsf	4051,1,c	;volatile
   708                           
   709                           ;main.c: 59: OSCTUNEbits.PLLEN = 1;
   710  001258  8C9B               	bsf	3995,6,c	;volatile
   711                           
   712                           ;main.c: 63: LATA = 0x00;
   713  00125A  0E00               	movlw	0
   714  00125C  6E89               	movwf	3977,c	;volatile
   715                           
   716                           ;main.c: 64: LATB = 0x00;
   717  00125E  0E00               	movlw	0
   718  001260  6E8A               	movwf	3978,c	;volatile
   719                           
   720                           ;main.c: 65: LATC = 0x00;
   721  001262  0E00               	movlw	0
   722  001264  6E8B               	movwf	3979,c	;volatile
   723                           
   724                           ;main.c: 66: LATD = 0x00;
   725  001266  0E00               	movlw	0
   726  001268  6E8C               	movwf	3980,c	;volatile
   727                           
   728                           ;main.c: 67: LATE = 0x00;
   729  00126A  0E00               	movlw	0
   730  00126C  6E8D               	movwf	3981,c	;volatile
   731                           
   732                           ;main.c: 71: TRISA = 0xFF;
   733  00126E  6892               	setf	3986,c	;volatile
   734                           
   735                           ;main.c: 72: TRISB = 0xFF;
   736  001270  6893               	setf	3987,c	;volatile
   737                           
   738                           ;main.c: 73: TRISC = 0x00;
   739  001272  0E00               	movlw	0
   740  001274  6E94               	movwf	3988,c	;volatile
   741                           
   742                           ;main.c: 74: TRISD = 0x00;
   743  001276  0E00               	movlw	0
   744  001278  6E95               	movwf	3989,c	;volatile
   745                           
   746                           ;main.c: 75: TRISE = 0x00;
   747  00127A  0E00               	movlw	0
   748  00127C  6E96               	movwf	3990,c	;volatile
   749                           
   750                           ;main.c: 78: ADCON0 = 0x00;
   751  00127E  0E00               	movlw	0
   752  001280  6EC2               	movwf	4034,c	;volatile
   753                           
   754                           ;main.c: 79: ADCON1 = 0b00001111;
   755  001282  0E0F               	movlw	15
   756  001284  6EC1               	movwf	4033,c	;volatile
   757                           
   758                           ;main.c: 80: ADCON2bits.ADFM = 1;
   759  001286  8EC0               	bsf	4032,7,c	;volatile
   760                           
   761                           ;main.c: 85: (INTCONbits.GIE = 1);
   762  001288  8EF2               	bsf	intcon,7,c	;volatile
   763                           
   764                           ;main.c: 86: initLCD();
   765  00128A  EC91  F00D         	call	_initLCD	;wreg free
   766                           
   767                           ;main.c: 87: I2C_init();
   768  00128E  EC3C  F00E         	call	_I2C_init	;wreg free
   769                           
   770                           ;main.c: 89: LATCbits.LATC0 = 1;
   771  001292  808B               	bsf	3979,0,c	;volatile
   772                           
   773                           ;main.c: 90: TRISCbits.RC0 = 0;
   774  001294  9094               	bcf	3988,0,c	;volatile
   775                           
   776                           ;main.c: 92: RBIE = 1;
   777  001296  86F2               	bsf	intcon,3,c	;volatile
   778                           
   779                           ;main.c: 95: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
   780  001298  0E11               	movlw	low STR_1
   781  00129A  0100               	movlb	0	; () banked
   782  00129C  6F80               	movwf	printf@f& (0+255),b
   783  00129E  0E10               	movlw	high STR_1
   784  0012A0  6F81               	movwf	(printf@f+1)& (0+255),b
   785  0012A2  C046  F082         	movff	_B_count,?_printf+2
   786  0012A6  C047  F083         	movff	_B_count+1,?_printf+3
   787  0012AA  C044  F084         	movff	_N_count,?_printf+4
   788  0012AE  C045  F085         	movff	_N_count+1,?_printf+5
   789  0012B2  C042  F086         	movff	_S_count,?_printf+6
   790  0012B6  C043  F087         	movff	_S_count+1,?_printf+7
   791  0012BA  C040  F088         	movff	_W_count,?_printf+8
   792  0012BE  C041  F089         	movff	_W_count+1,?_printf+9
   793  0012C2  ECD1  F009         	call	_printf	;wreg free
   794                           
   795                           ;main.c: 96: initLCD();
   796  0012C6  EC91  F00D         	call	_initLCD	;wreg free
   797                           
   798                           ;main.c: 98: TRISBbits.RB5 = 1;
   799  0012CA  8A93               	bsf	3987,5,c	;volatile
   800                           
   801                           ;main.c: 99: TRISBbits.RB7 = 1;
   802  0012CC  8E93               	bsf	3987,7,c	;volatile
   803                           
   804                           ;main.c: 100: TRISBbits.RB6 = 1;
   805  0012CE  8C93               	bsf	3987,6,c	;volatile
   806                           
   807                           ;main.c: 101: TRISBbits.RB4 = 1;
   808  0012D0  8893               	bsf	3987,4,c	;volatile
   809                           
   810                           ;main.c: 106: Bolt_dispense(max);
   811  0012D2  C04A  F091         	movff	_max,Bolt_dispense@B_max
   812  0012D6  C04B  F092         	movff	_max+1,Bolt_dispense@B_max+1
   813  0012DA  EC09  F00D         	call	_Bolt_dispense	;wreg free
   814                           
   815                           ;main.c: 107: N_count = 0;
   816  0012DE  0E00               	movlw	0
   817  0012E0  6E45               	movwf	_N_count+1,c
   818  0012E2  0E00               	movlw	0
   819  0012E4  6E44               	movwf	_N_count,c
   820                           
   821                           ;main.c: 108: Nut_dispense(max);
   822  0012E6  C04A  F091         	movff	_max,Nut_dispense@N_max
   823  0012EA  C04B  F092         	movff	_max+1,Nut_dispense@N_max+1
   824  0012EE  EC95  F00C         	call	_Nut_dispense	;wreg free
   825                           
   826                           ;main.c: 109: Spacer_dispense(max);
   827  0012F2  C04A  F091         	movff	_max,Spacer_dispense@S_max
   828  0012F6  C04B  F092         	movff	_max+1,Spacer_dispense@S_max+1
   829  0012FA  EC21  F00C         	call	_Spacer_dispense	;wreg free
   830                           
   831                           ;main.c: 110: Washer_dispense(max);
   832  0012FE  C04A  F091         	movff	_max,Washer_dispense@W_max
   833  001302  C04B  F092         	movff	_max+1,Washer_dispense@W_max+1
   834  001306  ECAD  F00B         	call	_Washer_dispense	;wreg free
   835                           
   836                           ;main.c: 112: _delay((unsigned long)((300)*(32000000/4000.0)));
   837  00130A  0E0D               	movlw	13
   838  00130C  0100               	movlb	0	; () banked
   839  00130E  6F94               	movwf	(??_main+1)& (0+255),b
   840  001310  0E2D               	movlw	45
   841  001312  6F93               	movwf	??_main& (0+255),b
   842  001314  0ED7               	movlw	215
   843  001316                     u1377:
   844  001316  2EE8               	decfsz	wreg,f,c
   845  001318  D7FE               	bra	u1377
   846  00131A  2F93               	decfsz	??_main& (0+255),f,b
   847  00131C  D7FC               	bra	u1377
   848  00131E  2F94               	decfsz	(??_main+1)& (0+255),f,b
   849  001320  D7FA               	bra	u1377
   850  001322  D000               	nop2	
   851                           
   852                           ;main.c: 114: Bolt_remain(spacingTime);
   853  001324  C04C  F091         	movff	_spacingTime,Bolt_remain@time
   854  001328  C04D  F092         	movff	_spacingTime+1,Bolt_remain@time+1
   855  00132C  ECCF  F00C         	call	_Bolt_remain	;wreg free
   856                           
   857                           ;main.c: 115: Nut_remain(spacingTime);
   858  001330  C04C  F091         	movff	_spacingTime,Nut_remain@time
   859  001334  C04D  F092         	movff	_spacingTime+1,Nut_remain@time+1
   860  001338  EC5B  F00C         	call	_Nut_remain	;wreg free
   861                           
   862                           ;main.c: 116: Spacer_remain(spacingTime);
   863  00133C  C04C  F091         	movff	_spacingTime,Spacer_remain@time
   864  001340  C04D  F092         	movff	_spacingTime+1,Spacer_remain@time+1
   865  001344  ECE7  F00B         	call	_Spacer_remain	;wreg free
   866                           
   867                           ;main.c: 117: Washer_remain(spacingTime);
   868  001348  C04C  F091         	movff	_spacingTime,Washer_remain@time
   869  00134C  C04D  F092         	movff	_spacingTime+1,Washer_remain@time+1
   870  001350  EC73  F00B         	call	_Washer_remain	;wreg free
   871                           
   872                           ;main.c: 120: initLCD();
   873  001354  EC91  F00D         	call	_initLCD	;wreg free
   874                           
   875                           ;main.c: 121: RBIE = 0;
   876  001358  96F2               	bcf	intcon,3,c	;volatile
   877  00135A                     
   878                           ;main.c: 125: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
   879  00135A  0E11               	movlw	low STR_1
   880  00135C  0100               	movlb	0	; () banked
   881  00135E  6F80               	movwf	printf@f& (0+255),b
   882  001360  0E10               	movlw	high STR_1
   883  001362  6F81               	movwf	(printf@f+1)& (0+255),b
   884  001364  C046  F082         	movff	_B_count,?_printf+2
   885  001368  C047  F083         	movff	_B_count+1,?_printf+3
   886  00136C  C044  F084         	movff	_N_count,?_printf+4
   887  001370  C045  F085         	movff	_N_count+1,?_printf+5
   888  001374  C042  F086         	movff	_S_count,?_printf+6
   889  001378  C043  F087         	movff	_S_count+1,?_printf+7
   890  00137C  C040  F088         	movff	_W_count,?_printf+8
   891  001380  C041  F089         	movff	_W_count+1,?_printf+9
   892  001384  ECD1  F009         	call	_printf	;wreg free
   893                           
   894                           ;main.c: 126: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
   895  001388  0E80               	movlw	128
   896  00138A  EC78  F00E         	call	_lcdInst
   897  00138E  0E34               	movlw	52
   898  001390  0100               	movlb	0	; () banked
   899  001392  6F93               	movwf	??_main& (0+255),b
   900  001394  0EF1               	movlw	241
   901  001396                     u1387:
   902  001396  2EE8               	decfsz	wreg,f,c
   903  001398  D7FE               	bra	u1387
   904  00139A  2F93               	decfsz	??_main& (0+255),f,b
   905  00139C  D7FC               	bra	u1387
   906  00139E  D000               	nop2	
   907  0013A0  D7DC               	goto	l188
   908  0013A2                     __end_of_main:
   909                           	opt stack 0
   910                           tblptru	equ	0xFF8
   911                           tblptrh	equ	0xFF7
   912                           tblptrl	equ	0xFF6
   913                           tablat	equ	0xFF5
   914                           intcon	equ	0xFF2
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           postdec1	equ	0xFE5
   918                           fsr1l	equ	0xFE1
   919                           
   920 ;; *************** function _Washer_remain *****************
   921 ;; Defined at:
   922 ;;		line 347 in file "main.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  time            2   17[BANK0 ] int 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   936 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;Total ram usage:        3 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    7
   943 ;; This function calls:
   944 ;;		_I2C_sendData
   945 ;;		_initLCD
   946 ;;		_lcdInst
   947 ;;		_printf
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text1
   954  0016E6                     __ptext1:
   955                           	opt stack 0
   956  0016E6                     _Washer_remain:
   957                           	opt stack 23
   958                           
   959                           ;main.c: 348: I2C_sendData(11);
   960                           
   961                           ;incstack = 0
   962  0016E6  0E0B               	movlw	11
   963  0016E8  EC51  F00E         	call	_I2C_sendData
   964  0016EC                     l265:
   965                           
   966                           ;main.c: 350: initLCD();
   967  0016EC  EC91  F00D         	call	_initLCD	;wreg free
   968                           
   969                           ;main.c: 351: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
   970  0016F0  0E80               	movlw	128
   971  0016F2  EC78  F00E         	call	_lcdInst
   972  0016F6  0E34               	movlw	52
   973  0016F8  6E37               	movwf	??_Washer_remain& (0+255),c
   974  0016FA  0EF2               	movlw	242
   975  0016FC                     u1397:
   976  0016FC  2EE8               	decfsz	wreg,f,c
   977  0016FE  D7FE               	bra	u1397
   978  001700  2E37               	decfsz	??_Washer_remain& (0+255),f,c
   979  001702  D7FC               	bra	u1397
   980                           
   981                           ;main.c: 352: if (W_spacingTime >= time){
   982  001704  0100               	movlb	0	; () banked
   983  001706  5191               	movf	Washer_remain@time& (0+255),w,b
   984  001708  5C38               	subwf	_W_spacingTime,w,c
   985  00170A  5039               	movf	_W_spacingTime+1,w,c
   986  00170C  0A80               	xorlw	128
   987  00170E  6E37               	movwf	??_Washer_remain& (0+255),c
   988  001710  5192               	movf	(Washer_remain@time+1)& (0+255),w,b
   989  001712  0A80               	xorlw	128
   990  001714  5837               	subwfb	??_Washer_remain& (0+255),w,c
   991  001716  A0D8               	btfss	status,0,c
   992  001718  D004               	goto	l266
   993                           
   994                           ; BSR set to: 0
   995                           ;main.c: 353: I2C_sendData(12);
   996  00171A  0E0C               	movlw	12
   997  00171C  EC51  F00E         	call	_I2C_sendData
   998                           
   999                           ;main.c: 354: break;
  1000  001720  0012               	return	
  1001  001722                     l266:
  1002                           
  1003                           ;main.c: 355: }
  1004                           ;main.c: 356: W_spacingTime +=100;
  1005  001722  0E64               	movlw	100
  1006  001724  2638               	addwf	_W_spacingTime,f,c
  1007  001726  0E00               	movlw	0
  1008  001728  2239               	addwfc	_W_spacingTime+1,f,c
  1009                           
  1010                           ;main.c: 357: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
  1011  00172A  0E11               	movlw	low STR_1
  1012  00172C  0100               	movlb	0	; () banked
  1013  00172E  6F80               	movwf	printf@f& (0+255),b
  1014  001730  0E10               	movlw	high STR_1
  1015  001732  6F81               	movwf	(printf@f+1)& (0+255),b
  1016  001734  C046  F082         	movff	_B_count,?_printf+2
  1017  001738  C047  F083         	movff	_B_count+1,?_printf+3
  1018  00173C  C044  F084         	movff	_N_count,?_printf+4
  1019  001740  C045  F085         	movff	_N_count+1,?_printf+5
  1020  001744  C042  F086         	movff	_S_count,?_printf+6
  1021  001748  C043  F087         	movff	_S_count+1,?_printf+7
  1022  00174C  C040  F088         	movff	_W_count,?_printf+8
  1023  001750  C041  F089         	movff	_W_count+1,?_printf+9
  1024  001754  ECD1  F009         	call	_printf	;wreg free
  1025  001758  D7C9               	goto	l265
  1026  00175A                     __end_of_Washer_remain:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           intcon	equ	0xFF2
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           postdec1	equ	0xFE5
  1036                           fsr1l	equ	0xFE1
  1037                           status	equ	0xFD8
  1038                           
  1039 ;; *************** function _Washer_dispense *****************
  1040 ;; Defined at:
  1041 ;;		line 285 in file "main.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  W_max           2   17[BANK0 ] int 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;Total ram usage:        3 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    7
  1062 ;; This function calls:
  1063 ;;		_I2C_sendData
  1064 ;;		_initLCD
  1065 ;;		_lcdInst
  1066 ;;		_printf
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text2
  1073  00175A                     __ptext2:
  1074                           	opt stack 0
  1075  00175A                     _Washer_dispense:
  1076                           	opt stack 23
  1077                           
  1078                           ;main.c: 286: I2C_sendData(11);
  1079                           
  1080                           ;incstack = 0
  1081  00175A  0E0B               	movlw	11
  1082  00175C  EC51  F00E         	call	_I2C_sendData
  1083                           
  1084                           ;main.c: 287: W_count = 0;
  1085  001760  0E00               	movlw	0
  1086  001762  6E41               	movwf	_W_count+1,c
  1087  001764  0E00               	movlw	0
  1088  001766  6E40               	movwf	_W_count,c
  1089  001768                     
  1090                           ;main.c: 289: initLCD();
  1091  001768  EC91  F00D         	call	_initLCD	;wreg free
  1092                           
  1093                           ;main.c: 290: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  1094  00176C  0E80               	movlw	128
  1095  00176E  EC78  F00E         	call	_lcdInst
  1096  001772  0E34               	movlw	52
  1097  001774  6E37               	movwf	??_Washer_dispense& (0+255),c
  1098  001776  0EF2               	movlw	242
  1099  001778                     u1407:
  1100  001778  2EE8               	decfsz	wreg,f,c
  1101  00177A  D7FE               	bra	u1407
  1102  00177C  2E37               	decfsz	??_Washer_dispense& (0+255),f,c
  1103  00177E  D7FC               	bra	u1407
  1104                           
  1105                           ;main.c: 291: if (W_count >= W_max){
  1106  001780  0100               	movlb	0	; () banked
  1107  001782  5191               	movf	Washer_dispense@W_max& (0+255),w,b
  1108  001784  5C40               	subwf	_W_count,w,c
  1109  001786  5041               	movf	_W_count+1,w,c
  1110  001788  0A80               	xorlw	128
  1111  00178A  6E37               	movwf	??_Washer_dispense& (0+255),c
  1112  00178C  5192               	movf	(Washer_dispense@W_max+1)& (0+255),w,b
  1113  00178E  0A80               	xorlw	128
  1114  001790  5837               	subwfb	??_Washer_dispense& (0+255),w,c
  1115  001792  A0D8               	btfss	status,0,c
  1116  001794  D004               	goto	l238
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;main.c: 292: I2C_sendData(12);
  1120  001796  0E0C               	movlw	12
  1121  001798  EC51  F00E         	call	_I2C_sendData
  1122                           
  1123                           ;main.c: 293: break;
  1124  00179C  0012               	return	
  1125  00179E                     l238:
  1126                           
  1127                           ;main.c: 294: }
  1128                           ;main.c: 295: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
  1129  00179E  0E11               	movlw	low STR_1
  1130  0017A0  0100               	movlb	0	; () banked
  1131  0017A2  6F80               	movwf	printf@f& (0+255),b
  1132  0017A4  0E10               	movlw	high STR_1
  1133  0017A6  6F81               	movwf	(printf@f+1)& (0+255),b
  1134  0017A8  C046  F082         	movff	_B_count,?_printf+2
  1135  0017AC  C047  F083         	movff	_B_count+1,?_printf+3
  1136  0017B0  C044  F084         	movff	_N_count,?_printf+4
  1137  0017B4  C045  F085         	movff	_N_count+1,?_printf+5
  1138  0017B8  C042  F086         	movff	_S_count,?_printf+6
  1139  0017BC  C043  F087         	movff	_S_count+1,?_printf+7
  1140  0017C0  C040  F088         	movff	_W_count,?_printf+8
  1141  0017C4  C041  F089         	movff	_W_count+1,?_printf+9
  1142  0017C8  ECD1  F009         	call	_printf	;wreg free
  1143  0017CC  D7CD               	goto	l237
  1144  0017CE                     __end_of_Washer_dispense:
  1145                           	opt stack 0
  1146                           tblptru	equ	0xFF8
  1147                           tblptrh	equ	0xFF7
  1148                           tblptrl	equ	0xFF6
  1149                           tablat	equ	0xFF5
  1150                           intcon	equ	0xFF2
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           postdec1	equ	0xFE5
  1154                           fsr1l	equ	0xFE1
  1155                           status	equ	0xFD8
  1156                           
  1157 ;; *************** function _Spacer_remain *****************
  1158 ;; Defined at:
  1159 ;;		line 332 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  time            2   17[BANK0 ] int 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;Total ram usage:        3 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    7
  1180 ;; This function calls:
  1181 ;;		_I2C_sendData
  1182 ;;		_initLCD
  1183 ;;		_lcdInst
  1184 ;;		_printf
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text3
  1191  0017CE                     __ptext3:
  1192                           	opt stack 0
  1193  0017CE                     _Spacer_remain:
  1194                           	opt stack 23
  1195                           
  1196                           ;main.c: 333: I2C_sendData('9');
  1197                           
  1198                           ;incstack = 0
  1199  0017CE  0E39               	movlw	57
  1200  0017D0  EC51  F00E         	call	_I2C_sendData
  1201  0017D4                     l258:
  1202                           
  1203                           ;main.c: 335: initLCD();
  1204  0017D4  EC91  F00D         	call	_initLCD	;wreg free
  1205                           
  1206                           ;main.c: 336: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  1207  0017D8  0E80               	movlw	128
  1208  0017DA  EC78  F00E         	call	_lcdInst
  1209  0017DE  0E34               	movlw	52
  1210  0017E0  6E37               	movwf	??_Spacer_remain& (0+255),c
  1211  0017E2  0EF2               	movlw	242
  1212  0017E4                     u1417:
  1213  0017E4  2EE8               	decfsz	wreg,f,c
  1214  0017E6  D7FE               	bra	u1417
  1215  0017E8  2E37               	decfsz	??_Spacer_remain& (0+255),f,c
  1216  0017EA  D7FC               	bra	u1417
  1217                           
  1218                           ;main.c: 337: if (S_spacingTime >= time){
  1219  0017EC  0100               	movlb	0	; () banked
  1220  0017EE  5191               	movf	Spacer_remain@time& (0+255),w,b
  1221  0017F0  5C3A               	subwf	_S_spacingTime,w,c
  1222  0017F2  503B               	movf	_S_spacingTime+1,w,c
  1223  0017F4  0A80               	xorlw	128
  1224  0017F6  6E37               	movwf	??_Spacer_remain& (0+255),c
  1225  0017F8  5192               	movf	(Spacer_remain@time+1)& (0+255),w,b
  1226  0017FA  0A80               	xorlw	128
  1227  0017FC  5837               	subwfb	??_Spacer_remain& (0+255),w,c
  1228  0017FE  A0D8               	btfss	status,0,c
  1229  001800  D004               	goto	l259
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;main.c: 338: I2C_sendData(10);
  1233  001802  0E0A               	movlw	10
  1234  001804  EC51  F00E         	call	_I2C_sendData
  1235                           
  1236                           ;main.c: 339: break;
  1237  001808  0012               	return	
  1238  00180A                     l259:
  1239                           
  1240                           ;main.c: 340: }
  1241                           ;main.c: 341: S_spacingTime +=100;
  1242  00180A  0E64               	movlw	100
  1243  00180C  263A               	addwf	_S_spacingTime,f,c
  1244  00180E  0E00               	movlw	0
  1245  001810  223B               	addwfc	_S_spacingTime+1,f,c
  1246                           
  1247                           ;main.c: 342: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
  1248  001812  0E11               	movlw	low STR_1
  1249  001814  0100               	movlb	0	; () banked
  1250  001816  6F80               	movwf	printf@f& (0+255),b
  1251  001818  0E10               	movlw	high STR_1
  1252  00181A  6F81               	movwf	(printf@f+1)& (0+255),b
  1253  00181C  C046  F082         	movff	_B_count,?_printf+2
  1254  001820  C047  F083         	movff	_B_count+1,?_printf+3
  1255  001824  C044  F084         	movff	_N_count,?_printf+4
  1256  001828  C045  F085         	movff	_N_count+1,?_printf+5
  1257  00182C  C042  F086         	movff	_S_count,?_printf+6
  1258  001830  C043  F087         	movff	_S_count+1,?_printf+7
  1259  001834  C040  F088         	movff	_W_count,?_printf+8
  1260  001838  C041  F089         	movff	_W_count+1,?_printf+9
  1261  00183C  ECD1  F009         	call	_printf	;wreg free
  1262  001840  D7C9               	goto	l258
  1263  001842                     __end_of_Spacer_remain:
  1264                           	opt stack 0
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           intcon	equ	0xFF2
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           status	equ	0xFD8
  1275                           
  1276 ;; *************** function _Spacer_dispense *****************
  1277 ;; Defined at:
  1278 ;;		line 270 in file "main.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  S_max           2   17[BANK0 ] int 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;Total ram usage:        3 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    7
  1299 ;; This function calls:
  1300 ;;		_I2C_sendData
  1301 ;;		_initLCD
  1302 ;;		_lcdInst
  1303 ;;		_printf
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text4
  1310  001842                     __ptext4:
  1311                           	opt stack 0
  1312  001842                     _Spacer_dispense:
  1313                           	opt stack 23
  1314                           
  1315                           ;main.c: 271: I2C_sendData('9');
  1316                           
  1317                           ;incstack = 0
  1318  001842  0E39               	movlw	57
  1319  001844  EC51  F00E         	call	_I2C_sendData
  1320                           
  1321                           ;main.c: 272: S_count = 0;
  1322  001848  0E00               	movlw	0
  1323  00184A  6E43               	movwf	_S_count+1,c
  1324  00184C  0E00               	movlw	0
  1325  00184E  6E42               	movwf	_S_count,c
  1326  001850                     
  1327                           ;main.c: 274: initLCD();
  1328  001850  EC91  F00D         	call	_initLCD	;wreg free
  1329                           
  1330                           ;main.c: 275: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  1331  001854  0E80               	movlw	128
  1332  001856  EC78  F00E         	call	_lcdInst
  1333  00185A  0E34               	movlw	52
  1334  00185C  6E37               	movwf	??_Spacer_dispense& (0+255),c
  1335  00185E  0EF2               	movlw	242
  1336  001860                     u1427:
  1337  001860  2EE8               	decfsz	wreg,f,c
  1338  001862  D7FE               	bra	u1427
  1339  001864  2E37               	decfsz	??_Spacer_dispense& (0+255),f,c
  1340  001866  D7FC               	bra	u1427
  1341                           
  1342                           ;main.c: 276: if (S_count >= S_max){
  1343  001868  0100               	movlb	0	; () banked
  1344  00186A  5191               	movf	Spacer_dispense@S_max& (0+255),w,b
  1345  00186C  5C42               	subwf	_S_count,w,c
  1346  00186E  5043               	movf	_S_count+1,w,c
  1347  001870  0A80               	xorlw	128
  1348  001872  6E37               	movwf	??_Spacer_dispense& (0+255),c
  1349  001874  5192               	movf	(Spacer_dispense@S_max+1)& (0+255),w,b
  1350  001876  0A80               	xorlw	128
  1351  001878  5837               	subwfb	??_Spacer_dispense& (0+255),w,c
  1352  00187A  A0D8               	btfss	status,0,c
  1353  00187C  D004               	goto	l231
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;main.c: 277: I2C_sendData(10);
  1357  00187E  0E0A               	movlw	10
  1358  001880  EC51  F00E         	call	_I2C_sendData
  1359                           
  1360                           ;main.c: 278: break;
  1361  001884  0012               	return	
  1362  001886                     l231:
  1363                           
  1364                           ;main.c: 279: }
  1365                           ;main.c: 280: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
  1366  001886  0E11               	movlw	low STR_1
  1367  001888  0100               	movlb	0	; () banked
  1368  00188A  6F80               	movwf	printf@f& (0+255),b
  1369  00188C  0E10               	movlw	high STR_1
  1370  00188E  6F81               	movwf	(printf@f+1)& (0+255),b
  1371  001890  C046  F082         	movff	_B_count,?_printf+2
  1372  001894  C047  F083         	movff	_B_count+1,?_printf+3
  1373  001898  C044  F084         	movff	_N_count,?_printf+4
  1374  00189C  C045  F085         	movff	_N_count+1,?_printf+5
  1375  0018A0  C042  F086         	movff	_S_count,?_printf+6
  1376  0018A4  C043  F087         	movff	_S_count+1,?_printf+7
  1377  0018A8  C040  F088         	movff	_W_count,?_printf+8
  1378  0018AC  C041  F089         	movff	_W_count+1,?_printf+9
  1379  0018B0  ECD1  F009         	call	_printf	;wreg free
  1380  0018B4  D7CD               	goto	l230
  1381  0018B6                     __end_of_Spacer_dispense:
  1382                           	opt stack 0
  1383                           tblptru	equ	0xFF8
  1384                           tblptrh	equ	0xFF7
  1385                           tblptrl	equ	0xFF6
  1386                           tablat	equ	0xFF5
  1387                           intcon	equ	0xFF2
  1388                           postinc0	equ	0xFEE
  1389                           wreg	equ	0xFE8
  1390                           postdec1	equ	0xFE5
  1391                           fsr1l	equ	0xFE1
  1392                           status	equ	0xFD8
  1393                           
  1394 ;; *************** function _Nut_remain *****************
  1395 ;; Defined at:
  1396 ;;		line 317 in file "main.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  time            2   17[BANK0 ] int 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;Total ram usage:        3 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    7
  1417 ;; This function calls:
  1418 ;;		_I2C_sendData
  1419 ;;		_initLCD
  1420 ;;		_lcdInst
  1421 ;;		_printf
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text5
  1428  0018B6                     __ptext5:
  1429                           	opt stack 0
  1430  0018B6                     _Nut_remain:
  1431                           	opt stack 23
  1432                           
  1433                           ;main.c: 318: I2C_sendData('7');
  1434                           
  1435                           ;incstack = 0
  1436  0018B6  0E37               	movlw	55
  1437  0018B8  EC51  F00E         	call	_I2C_sendData
  1438  0018BC                     l251:
  1439                           
  1440                           ;main.c: 320: initLCD();
  1441  0018BC  EC91  F00D         	call	_initLCD	;wreg free
  1442                           
  1443                           ;main.c: 321: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  1444  0018C0  0E80               	movlw	128
  1445  0018C2  EC78  F00E         	call	_lcdInst
  1446  0018C6  0E34               	movlw	52
  1447  0018C8  6E37               	movwf	??_Nut_remain& (0+255),c
  1448  0018CA  0EF2               	movlw	242
  1449  0018CC                     u1437:
  1450  0018CC  2EE8               	decfsz	wreg,f,c
  1451  0018CE  D7FE               	bra	u1437
  1452  0018D0  2E37               	decfsz	??_Nut_remain& (0+255),f,c
  1453  0018D2  D7FC               	bra	u1437
  1454                           
  1455                           ;main.c: 322: if (N_spacingTime >= time){
  1456  0018D4  0100               	movlb	0	; () banked
  1457  0018D6  5191               	movf	Nut_remain@time& (0+255),w,b
  1458  0018D8  5C3C               	subwf	_N_spacingTime,w,c
  1459  0018DA  503D               	movf	_N_spacingTime+1,w,c
  1460  0018DC  0A80               	xorlw	128
  1461  0018DE  6E37               	movwf	??_Nut_remain& (0+255),c
  1462  0018E0  5192               	movf	(Nut_remain@time+1)& (0+255),w,b
  1463  0018E2  0A80               	xorlw	128
  1464  0018E4  5837               	subwfb	??_Nut_remain& (0+255),w,c
  1465  0018E6  A0D8               	btfss	status,0,c
  1466  0018E8  D004               	goto	l252
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 323: I2C_sendData('8');
  1470  0018EA  0E38               	movlw	56
  1471  0018EC  EC51  F00E         	call	_I2C_sendData
  1472                           
  1473                           ;main.c: 324: break;
  1474  0018F0  0012               	return	
  1475  0018F2                     l252:
  1476                           
  1477                           ;main.c: 325: }
  1478                           ;main.c: 326: N_spacingTime +=100;
  1479  0018F2  0E64               	movlw	100
  1480  0018F4  263C               	addwf	_N_spacingTime,f,c
  1481  0018F6  0E00               	movlw	0
  1482  0018F8  223D               	addwfc	_N_spacingTime+1,f,c
  1483                           
  1484                           ;main.c: 327: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
  1485  0018FA  0E11               	movlw	low STR_1
  1486  0018FC  0100               	movlb	0	; () banked
  1487  0018FE  6F80               	movwf	printf@f& (0+255),b
  1488  001900  0E10               	movlw	high STR_1
  1489  001902  6F81               	movwf	(printf@f+1)& (0+255),b
  1490  001904  C046  F082         	movff	_B_count,?_printf+2
  1491  001908  C047  F083         	movff	_B_count+1,?_printf+3
  1492  00190C  C044  F084         	movff	_N_count,?_printf+4
  1493  001910  C045  F085         	movff	_N_count+1,?_printf+5
  1494  001914  C042  F086         	movff	_S_count,?_printf+6
  1495  001918  C043  F087         	movff	_S_count+1,?_printf+7
  1496  00191C  C040  F088         	movff	_W_count,?_printf+8
  1497  001920  C041  F089         	movff	_W_count+1,?_printf+9
  1498  001924  ECD1  F009         	call	_printf	;wreg free
  1499  001928  D7C9               	goto	l251
  1500  00192A                     __end_of_Nut_remain:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           intcon	equ	0xFF2
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           postdec1	equ	0xFE5
  1510                           fsr1l	equ	0xFE1
  1511                           status	equ	0xFD8
  1512                           
  1513 ;; *************** function _Nut_dispense *****************
  1514 ;; Defined at:
  1515 ;;		line 255 in file "main.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  N_max           2   17[BANK0 ] int 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;Total ram usage:        3 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    7
  1536 ;; This function calls:
  1537 ;;		_I2C_sendData
  1538 ;;		_initLCD
  1539 ;;		_lcdInst
  1540 ;;		_printf
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text6
  1547  00192A                     __ptext6:
  1548                           	opt stack 0
  1549  00192A                     _Nut_dispense:
  1550                           	opt stack 23
  1551                           
  1552                           ;main.c: 256: I2C_sendData('7');
  1553                           
  1554                           ;incstack = 0
  1555  00192A  0E37               	movlw	55
  1556  00192C  EC51  F00E         	call	_I2C_sendData
  1557                           
  1558                           ;main.c: 257: N_count = 0;
  1559  001930  0E00               	movlw	0
  1560  001932  6E45               	movwf	_N_count+1,c
  1561  001934  0E00               	movlw	0
  1562  001936  6E44               	movwf	_N_count,c
  1563  001938                     
  1564                           ;main.c: 259: initLCD();
  1565  001938  EC91  F00D         	call	_initLCD	;wreg free
  1566                           
  1567                           ;main.c: 260: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  1568  00193C  0E80               	movlw	128
  1569  00193E  EC78  F00E         	call	_lcdInst
  1570  001942  0E34               	movlw	52
  1571  001944  6E37               	movwf	??_Nut_dispense& (0+255),c
  1572  001946  0EF2               	movlw	242
  1573  001948                     u1447:
  1574  001948  2EE8               	decfsz	wreg,f,c
  1575  00194A  D7FE               	bra	u1447
  1576  00194C  2E37               	decfsz	??_Nut_dispense& (0+255),f,c
  1577  00194E  D7FC               	bra	u1447
  1578                           
  1579                           ;main.c: 261: if (N_count >= N_max){
  1580  001950  0100               	movlb	0	; () banked
  1581  001952  5191               	movf	Nut_dispense@N_max& (0+255),w,b
  1582  001954  5C44               	subwf	_N_count,w,c
  1583  001956  5045               	movf	_N_count+1,w,c
  1584  001958  0A80               	xorlw	128
  1585  00195A  6E37               	movwf	??_Nut_dispense& (0+255),c
  1586  00195C  5192               	movf	(Nut_dispense@N_max+1)& (0+255),w,b
  1587  00195E  0A80               	xorlw	128
  1588  001960  5837               	subwfb	??_Nut_dispense& (0+255),w,c
  1589  001962  A0D8               	btfss	status,0,c
  1590  001964  D004               	goto	l224
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;main.c: 262: I2C_sendData('8');
  1594  001966  0E38               	movlw	56
  1595  001968  EC51  F00E         	call	_I2C_sendData
  1596                           
  1597                           ;main.c: 263: break;
  1598  00196C  0012               	return	
  1599  00196E                     l224:
  1600                           
  1601                           ;main.c: 264: }
  1602                           ;main.c: 265: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
  1603  00196E  0E11               	movlw	low STR_1
  1604  001970  0100               	movlb	0	; () banked
  1605  001972  6F80               	movwf	printf@f& (0+255),b
  1606  001974  0E10               	movlw	high STR_1
  1607  001976  6F81               	movwf	(printf@f+1)& (0+255),b
  1608  001978  C046  F082         	movff	_B_count,?_printf+2
  1609  00197C  C047  F083         	movff	_B_count+1,?_printf+3
  1610  001980  C044  F084         	movff	_N_count,?_printf+4
  1611  001984  C045  F085         	movff	_N_count+1,?_printf+5
  1612  001988  C042  F086         	movff	_S_count,?_printf+6
  1613  00198C  C043  F087         	movff	_S_count+1,?_printf+7
  1614  001990  C040  F088         	movff	_W_count,?_printf+8
  1615  001994  C041  F089         	movff	_W_count+1,?_printf+9
  1616  001998  ECD1  F009         	call	_printf	;wreg free
  1617  00199C  D7CD               	goto	l223
  1618  00199E                     __end_of_Nut_dispense:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           intcon	equ	0xFF2
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           postdec1	equ	0xFE5
  1628                           fsr1l	equ	0xFE1
  1629                           status	equ	0xFD8
  1630                           
  1631 ;; *************** function _I2C_init *****************
  1632 ;; Defined at:
  1633 ;;		line 228 in file "main.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    6
  1654 ;; This function calls:
  1655 ;;		_I2C_Master_Init
  1656 ;;		_I2C_Master_Start
  1657 ;;		_I2C_Master_Stop
  1658 ;;		_I2C_Master_Write
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text7
  1665  001C78                     __ptext7:
  1666                           	opt stack 0
  1667  001C78                     _I2C_init:
  1668                           	opt stack 24
  1669                           
  1670                           ;main.c: 229: I2C_Master_Init(100000);
  1671                           
  1672                           ;incstack = 0
  1673  001C78  0EA0               	movlw	160
  1674  001C7A  6E2A               	movwf	I2C_Master_Init@clockFreq,c
  1675  001C7C  0E86               	movlw	134
  1676  001C7E  6E2B               	movwf	I2C_Master_Init@clockFreq+1,c
  1677  001C80  0E01               	movlw	1
  1678  001C82  6E2C               	movwf	I2C_Master_Init@clockFreq+2,c
  1679  001C84  0E00               	movlw	0
  1680  001C86  6E2D               	movwf	I2C_Master_Init@clockFreq+3,c
  1681  001C88  EC62  F00E         	call	_I2C_Master_Init	;wreg free
  1682                           
  1683                           ;main.c: 230: I2C_Master_Start();
  1684  001C8C  ECAE  F00E         	call	_I2C_Master_Start	;wreg free
  1685                           
  1686                           ;main.c: 231: I2C_Master_Write(0b00010000);
  1687  001C90  0E00               	movlw	0
  1688  001C92  6E2C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1689  001C94  0E10               	movlw	16
  1690  001C96  6E2B               	movwf	I2C_Master_Write@byteToWrite,c
  1691  001C98  ECA5  F00E         	call	_I2C_Master_Write	;wreg free
  1692                           
  1693                           ;main.c: 232: I2C_Master_Stop();
  1694  001C9C  ECAA  F00E         	call	_I2C_Master_Stop	;wreg free
  1695  001CA0  0012               	return		;funcret
  1696  001CA2                     __end_of_I2C_init:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           tblptrh	equ	0xFF7
  1700                           tblptrl	equ	0xFF6
  1701                           tablat	equ	0xFF5
  1702                           intcon	equ	0xFF2
  1703                           postinc0	equ	0xFEE
  1704                           wreg	equ	0xFE8
  1705                           postdec1	equ	0xFE5
  1706                           fsr1l	equ	0xFE1
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _I2C_Master_Init *****************
  1710 ;; Defined at:
  1711 ;;		line 14 in file "I2C.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  clockFreq       4   41[COMRAM] const unsigned long 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        4 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    4
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_I2C_init
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text8
  1740  001CC4                     __ptext8:
  1741                           	opt stack 0
  1742  001CC4                     _I2C_Master_Init:
  1743                           	opt stack 25
  1744                           
  1745                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
  1746                           
  1747                           ;incstack = 0
  1748  001CC4  9AC6               	bcf	4038,5,c	;volatile
  1749                           
  1750                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
  1751  001CC6  8694               	bsf	3988,3,c	;volatile
  1752                           
  1753                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
  1754  001CC8  8894               	bsf	3988,4,c	;volatile
  1755                           
  1756                           ;I2C.c: 41: SSPSTAT = 0b10000000;
  1757  001CCA  0E80               	movlw	128
  1758  001CCC  6EC7               	movwf	4039,c	;volatile
  1759                           
  1760                           ;I2C.c: 42: SSPCON1 = 0b00101000;
  1761  001CCE  0E28               	movlw	40
  1762  001CD0  6EC6               	movwf	4038,c	;volatile
  1763                           
  1764                           ;I2C.c: 43: SSPCON2 = 0b00000000;
  1765  001CD2  0E00               	movlw	0
  1766  001CD4  6EC5               	movwf	4037,c	;volatile
  1767                           
  1768                           ;I2C.c: 49: SSPADD = 9600;
  1769  001CD6  0E80               	movlw	128
  1770  001CD8  6EC8               	movwf	4040,c	;volatile
  1771  001CDA  0012               	return		;funcret
  1772  001CDC                     __end_of_I2C_Master_Init:
  1773                           	opt stack 0
  1774                           tblptru	equ	0xFF8
  1775                           tblptrh	equ	0xFF7
  1776                           tblptrl	equ	0xFF6
  1777                           tablat	equ	0xFF5
  1778                           intcon	equ	0xFF2
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           postdec1	equ	0xFE5
  1782                           fsr1l	equ	0xFE1
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function _Bolt_remain *****************
  1786 ;; Defined at:
  1787 ;;		line 302 in file "main.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  time            2   17[BANK0 ] int 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;Total ram usage:        3 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    7
  1808 ;; This function calls:
  1809 ;;		_I2C_sendData
  1810 ;;		_initLCD
  1811 ;;		_lcdInst
  1812 ;;		_printf
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text9
  1819  00199E                     __ptext9:
  1820                           	opt stack 0
  1821  00199E                     _Bolt_remain:
  1822                           	opt stack 23
  1823                           
  1824                           ;main.c: 303: I2C_sendData('5');
  1825                           
  1826                           ;incstack = 0
  1827  00199E  0E35               	movlw	53
  1828  0019A0  EC51  F00E         	call	_I2C_sendData
  1829  0019A4                     l244:
  1830                           
  1831                           ;main.c: 305: initLCD();
  1832  0019A4  EC91  F00D         	call	_initLCD	;wreg free
  1833                           
  1834                           ;main.c: 306: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  1835  0019A8  0E80               	movlw	128
  1836  0019AA  EC78  F00E         	call	_lcdInst
  1837  0019AE  0E34               	movlw	52
  1838  0019B0  6E37               	movwf	??_Bolt_remain& (0+255),c
  1839  0019B2  0EF2               	movlw	242
  1840  0019B4                     u1457:
  1841  0019B4  2EE8               	decfsz	wreg,f,c
  1842  0019B6  D7FE               	bra	u1457
  1843  0019B8  2E37               	decfsz	??_Bolt_remain& (0+255),f,c
  1844  0019BA  D7FC               	bra	u1457
  1845                           
  1846                           ;main.c: 307: if (B_spacingTime >= time){
  1847  0019BC  0100               	movlb	0	; () banked
  1848  0019BE  5191               	movf	Bolt_remain@time& (0+255),w,b
  1849  0019C0  5C3E               	subwf	_B_spacingTime,w,c
  1850  0019C2  503F               	movf	_B_spacingTime+1,w,c
  1851  0019C4  0A80               	xorlw	128
  1852  0019C6  6E37               	movwf	??_Bolt_remain& (0+255),c
  1853  0019C8  5192               	movf	(Bolt_remain@time+1)& (0+255),w,b
  1854  0019CA  0A80               	xorlw	128
  1855  0019CC  5837               	subwfb	??_Bolt_remain& (0+255),w,c
  1856  0019CE  A0D8               	btfss	status,0,c
  1857  0019D0  D004               	goto	l245
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;main.c: 308: I2C_sendData('6');
  1861  0019D2  0E36               	movlw	54
  1862  0019D4  EC51  F00E         	call	_I2C_sendData
  1863                           
  1864                           ;main.c: 309: break;
  1865  0019D8  0012               	return	
  1866  0019DA                     l245:
  1867                           
  1868                           ;main.c: 310: }
  1869                           ;main.c: 311: B_spacingTime +=100;
  1870  0019DA  0E64               	movlw	100
  1871  0019DC  263E               	addwf	_B_spacingTime,f,c
  1872  0019DE  0E00               	movlw	0
  1873  0019E0  223F               	addwfc	_B_spacingTime+1,f,c
  1874                           
  1875                           ;main.c: 312: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
  1876  0019E2  0E11               	movlw	low STR_1
  1877  0019E4  0100               	movlb	0	; () banked
  1878  0019E6  6F80               	movwf	printf@f& (0+255),b
  1879  0019E8  0E10               	movlw	high STR_1
  1880  0019EA  6F81               	movwf	(printf@f+1)& (0+255),b
  1881  0019EC  C046  F082         	movff	_B_count,?_printf+2
  1882  0019F0  C047  F083         	movff	_B_count+1,?_printf+3
  1883  0019F4  C044  F084         	movff	_N_count,?_printf+4
  1884  0019F8  C045  F085         	movff	_N_count+1,?_printf+5
  1885  0019FC  C042  F086         	movff	_S_count,?_printf+6
  1886  001A00  C043  F087         	movff	_S_count+1,?_printf+7
  1887  001A04  C040  F088         	movff	_W_count,?_printf+8
  1888  001A08  C041  F089         	movff	_W_count+1,?_printf+9
  1889  001A0C  ECD1  F009         	call	_printf	;wreg free
  1890  001A10  D7C9               	goto	l244
  1891  001A12                     __end_of_Bolt_remain:
  1892                           	opt stack 0
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           intcon	equ	0xFF2
  1898                           postinc0	equ	0xFEE
  1899                           wreg	equ	0xFE8
  1900                           postdec1	equ	0xFE5
  1901                           fsr1l	equ	0xFE1
  1902                           status	equ	0xFD8
  1903                           
  1904 ;; *************** function _Bolt_dispense *****************
  1905 ;; Defined at:
  1906 ;;		line 241 in file "main.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  B_max           2   17[BANK0 ] int 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;Total ram usage:        3 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    7
  1927 ;; This function calls:
  1928 ;;		_I2C_sendData
  1929 ;;		_initLCD
  1930 ;;		_lcdInst
  1931 ;;		_printf
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text10
  1938  001A12                     __ptext10:
  1939                           	opt stack 0
  1940  001A12                     _Bolt_dispense:
  1941                           	opt stack 23
  1942                           
  1943                           ;main.c: 243: I2C_sendData('5');
  1944                           
  1945                           ;incstack = 0
  1946  001A12  0E35               	movlw	53
  1947  001A14  EC51  F00E         	call	_I2C_sendData
  1948  001A18                     l216:
  1949                           
  1950                           ;main.c: 245: initLCD();
  1951  001A18  EC91  F00D         	call	_initLCD	;wreg free
  1952                           
  1953                           ;main.c: 246: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  1954  001A1C  0E80               	movlw	128
  1955  001A1E  EC78  F00E         	call	_lcdInst
  1956  001A22  0E34               	movlw	52
  1957  001A24  6E37               	movwf	??_Bolt_dispense& (0+255),c
  1958  001A26  0EF2               	movlw	242
  1959  001A28                     u1467:
  1960  001A28  2EE8               	decfsz	wreg,f,c
  1961  001A2A  D7FE               	bra	u1467
  1962  001A2C  2E37               	decfsz	??_Bolt_dispense& (0+255),f,c
  1963  001A2E  D7FC               	bra	u1467
  1964                           
  1965                           ;main.c: 247: if (B_count >= B_max){
  1966  001A30  0100               	movlb	0	; () banked
  1967  001A32  5191               	movf	Bolt_dispense@B_max& (0+255),w,b
  1968  001A34  5C46               	subwf	_B_count,w,c
  1969  001A36  5047               	movf	_B_count+1,w,c
  1970  001A38  0A80               	xorlw	128
  1971  001A3A  6E37               	movwf	??_Bolt_dispense& (0+255),c
  1972  001A3C  5192               	movf	(Bolt_dispense@B_max+1)& (0+255),w,b
  1973  001A3E  0A80               	xorlw	128
  1974  001A40  5837               	subwfb	??_Bolt_dispense& (0+255),w,c
  1975  001A42  A0D8               	btfss	status,0,c
  1976  001A44  D004               	goto	l217
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;main.c: 248: I2C_sendData('6');
  1980  001A46  0E36               	movlw	54
  1981  001A48  EC51  F00E         	call	_I2C_sendData
  1982                           
  1983                           ;main.c: 249: break;
  1984  001A4C  0012               	return	
  1985  001A4E                     l217:
  1986                           
  1987                           ;main.c: 250: }
  1988                           ;main.c: 251: printf("B:%d,N:%d,S:%d,W:%d",B_count,N_count,S_count,W_count);
  1989  001A4E  0E11               	movlw	low STR_1
  1990  001A50  0100               	movlb	0	; () banked
  1991  001A52  6F80               	movwf	printf@f& (0+255),b
  1992  001A54  0E10               	movlw	high STR_1
  1993  001A56  6F81               	movwf	(printf@f+1)& (0+255),b
  1994  001A58  C046  F082         	movff	_B_count,?_printf+2
  1995  001A5C  C047  F083         	movff	_B_count+1,?_printf+3
  1996  001A60  C044  F084         	movff	_N_count,?_printf+4
  1997  001A64  C045  F085         	movff	_N_count+1,?_printf+5
  1998  001A68  C042  F086         	movff	_S_count,?_printf+6
  1999  001A6C  C043  F087         	movff	_S_count+1,?_printf+7
  2000  001A70  C040  F088         	movff	_W_count,?_printf+8
  2001  001A74  C041  F089         	movff	_W_count+1,?_printf+9
  2002  001A78  ECD1  F009         	call	_printf	;wreg free
  2003  001A7C  D7CD               	goto	l216
  2004  001A7E                     __end_of_Bolt_dispense:
  2005                           	opt stack 0
  2006                           tblptru	equ	0xFF8
  2007                           tblptrh	equ	0xFF7
  2008                           tblptrl	equ	0xFF6
  2009                           tablat	equ	0xFF5
  2010                           intcon	equ	0xFF2
  2011                           postinc0	equ	0xFEE
  2012                           wreg	equ	0xFE8
  2013                           postdec1	equ	0xFE5
  2014                           fsr1l	equ	0xFE1
  2015                           status	equ	0xFD8
  2016                           
  2017 ;; *************** function _printf *****************
  2018 ;; Defined at:
  2019 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2022 ;;		 -> STR_15(20), STR_14(20), STR_13(20), STR_12(20), 
  2023 ;;		 -> STR_11(20), STR_10(20), STR_9(20), STR_8(20), 
  2024 ;;		 -> STR_7(12), STR_6(17), STR_5(19), STR_4(14), 
  2025 ;;		 -> STR_3(15), STR_2(20), STR_1(20), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  tmpval          4    0        struct .
  2028 ;;  cp              3    0        PTR const unsigned char 
  2029 ;;  val             2   14[BANK0 ] unsigned int 
  2030 ;;  ap              2   10[BANK0 ] PTR void [1]
  2031 ;;		 -> ?i2_printf(2), ?_printf(2), 
  2032 ;;  len             2    0        unsigned int 
  2033 ;;  c               1   16[BANK0 ] char 
  2034 ;;  prec            1   13[BANK0 ] char 
  2035 ;;  flag            1   12[BANK0 ] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2    0[BANK0 ] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2045 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Totals:         1      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;Total ram usage:       18 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    6
  2052 ;; This function calls:
  2053 ;;		___lwdiv
  2054 ;;		___lwmod
  2055 ;;		_putch
  2056 ;; This function is called by:
  2057 ;;		_main
  2058 ;;		_Bolt_dispense
  2059 ;;		_Nut_dispense
  2060 ;;		_Spacer_dispense
  2061 ;;		_Washer_dispense
  2062 ;;		_Bolt_remain
  2063 ;;		_Nut_remain
  2064 ;;		_Spacer_remain
  2065 ;;		_Washer_remain
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text11
  2070  0013A2                     __ptext11:
  2071                           	opt stack 0
  2072  0013A2                     _printf:
  2073                           	opt stack 24
  2074                           
  2075                           ;doprnt.c: 466: va_list ap;
  2076                           ;doprnt.c: 499: signed char c;
  2077                           ;doprnt.c: 506: signed char prec;
  2078                           ;doprnt.c: 508: unsigned char flag;
  2079                           ;doprnt.c: 523: union {
  2080                           ;doprnt.c: 524: unsigned long vd;
  2081                           ;doprnt.c: 525: double integ;
  2082                           ;doprnt.c: 526: } tmpval;
  2083                           ;doprnt.c: 528: unsigned int val;
  2084                           ;doprnt.c: 529: unsigned len;
  2085                           ;doprnt.c: 530: const char * cp;
  2086                           ;doprnt.c: 533: *ap = __va_start();
  2087                           
  2088                           ;incstack = 0
  2089  0013A2  0E82               	movlw	low (?_printf+2)
  2090  0013A4  0100               	movlb	0	; () banked
  2091  0013A6  6F8A               	movwf	printf@ap& (0+255),b
  2092  0013A8  0E00               	movlw	high (?_printf+2)
  2093  0013AA  6F8B               	movwf	(printf@ap+1)& (0+255),b
  2094                           
  2095                           ;doprnt.c: 536: while(c = *f++) {
  2096  0013AC  D081               	goto	u1210
  2097  0013AE                     
  2098                           ; BSR set to: 0
  2099                           ;doprnt.c: 538: if(c != '%')
  2100                           
  2101                           ; BSR set to: 0
  2102  0013AE  0E25               	movlw	37
  2103  0013B0  1990               	xorwf	printf@c& (0+255),w,b
  2104  0013B2  B4D8               	btfsc	status,2,c
  2105  0013B4  D004               	goto	l322
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;doprnt.c: 540: {
  2109                           ;doprnt.c: 541: (putch(c) );
  2110  0013B6  5190               	movf	printf@c& (0+255),w,b
  2111  0013B8  EC6E  F00E         	call	_putch
  2112                           
  2113                           ;doprnt.c: 542: continue;
  2114  0013BC  D079               	goto	u1210
  2115  0013BE                     l322:
  2116                           
  2117                           ;doprnt.c: 543: }
  2118                           ;doprnt.c: 548: flag = 0;
  2119  0013BE  0E00               	movlw	0
  2120  0013C0  0100               	movlb	0	; () banked
  2121  0013C2  6F8C               	movwf	printf@flag& (0+255),b
  2122                           
  2123                           ; BSR set to: 0
  2124                           
  2125                           ; BSR set to: 0
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;doprnt.c: 822: }
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;doprnt.c: 813: continue;
  2132                           
  2133                           ;doprnt.c: 802: default:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;doprnt.c: 698: case 'i':
  2137                           ;doprnt.c: 699: break;
  2138                           
  2139                           ; BSR set to: 0
  2140                           
  2141                           ;doprnt.c: 697: case 'd':
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;doprnt.c: 638: goto alldone;
  2145                           
  2146                           ;doprnt.c: 637: case 0:
  2147                           
  2148                           ;doprnt.c: 635: switch(c = *f++) {
  2149  0013C4  C080  FFF6         	movff	printf@f,tblptrl
  2150  0013C8  C081  FFF7         	movff	printf@f+1,tblptrh
  2151  0013CC  4B80               	infsnz	printf@f& (0+255),f,b
  2152  0013CE  2B81               	incf	(printf@f+1)& (0+255),f,b
  2153  0013D0                     	if	0	;tblptru may be non-zero
  2154  0013D0                     	endif
  2155  0013D0                     	if	0	;tblptru may be non-zero
  2156  0013D0                     	endif
  2157  0013D0  0008               	tblrd		*
  2158  0013D2  CFF5 F090          	movff	tablat,printf@c
  2159  0013D6  5190               	movf	printf@c& (0+255),w,b
  2160                           
  2161                           ; Switch size 1, requested type "space"
  2162                           ; Number of cases is 3, Range of values is 0 to 105
  2163                           ; switch strategies available:
  2164                           ; Name         Instructions Cycles
  2165                           ; simple_byte           10     6 (average)
  2166                           ;	Chosen strategy is simple_byte
  2167  0013D8  0A00               	xorlw	0	; case 0
  2168  0013DA  B4D8               	btfsc	status,2,c
  2169  0013DC  0012               	return	
  2170  0013DE  0A64               	xorlw	100	; case 100
  2171  0013E0  B4D8               	btfsc	status,2,c
  2172  0013E2  D003               	goto	l328
  2173  0013E4  0A0D               	xorlw	13	; case 105
  2174  0013E6  A4D8               	btfss	status,2,c
  2175  0013E8  D063               	goto	u1210
  2176  0013EA                     l328:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;doprnt.c: 1253: {
  2180                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2181                           
  2182                           ; BSR set to: 0
  2183  0013EA  C08A  FFD9         	movff	printf@ap,fsr2l
  2184  0013EE  C08B  FFDA         	movff	printf@ap+1,fsr2h
  2185  0013F2  CFDE F08E          	movff	postinc2,printf@val
  2186  0013F6  CFDD F08F          	movff	postdec2,printf@val+1
  2187                           
  2188                           ; BSR set to: 0
  2189  0013FA  0E02               	movlw	2
  2190  0013FC  278A               	addwf	printf@ap& (0+255),f,b
  2191  0013FE  0E00               	movlw	0
  2192  001400  238B               	addwfc	(printf@ap+1)& (0+255),f,b
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;doprnt.c: 1261: if((int)val < 0) {
  2196  001402  AF8F               	btfss	(printf@val+1)& (0+255),7,b
  2197  001404  D006               	goto	l330
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;doprnt.c: 1262: flag |= 0x03;
  2201  001406  0E03               	movlw	3
  2202  001408  138C               	iorwf	printf@flag& (0+255),f,b
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;doprnt.c: 1263: val = -val;
  2206  00140A  6D8E               	negf	printf@val& (0+255),b
  2207  00140C  1F8F               	comf	(printf@val+1)& (0+255),f,b
  2208  00140E  B0D8               	btfsc	status,0,c
  2209  001410  2B8F               	incf	(printf@val+1)& (0+255),f,b
  2210  001412                     l330:
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;doprnt.c: 1264: }
  2214                           ;doprnt.c: 1266: }
  2215                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2216                           
  2217                           ; BSR set to: 0
  2218  001412  0E01               	movlw	1
  2219  001414  6F90               	movwf	printf@c& (0+255),b
  2220  001416                     l2241:
  2221                           
  2222                           ; BSR set to: 0
  2223  001416  0E05               	movlw	5
  2224  001418  1990               	xorwf	printf@c& (0+255),w,b
  2225  00141A  B4D8               	btfsc	status,2,c
  2226  00141C  D012               	goto	u1190
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;doprnt.c: 1306: if(val < dpowers[c])
  2230                           
  2231                           ; BSR set to: 0
  2232                           
  2233                           ; BSR set to: 0
  2234  00141E  5190               	movf	printf@c& (0+255),w,b
  2235  001420  0D02               	mullw	2
  2236  001422  0E01               	movlw	low _dpowers
  2237  001424  24F3               	addwf	prodl,w,c
  2238  001426  6EF6               	movwf	tblptrl,c
  2239  001428  0E10               	movlw	high _dpowers
  2240  00142A  20F4               	addwfc	prodh,w,c
  2241  00142C  6EF7               	movwf	tblptrh,c
  2242  00142E                     	if	0	;There are less than 3 active tblptr bytes
  2243  00142E                     	endif
  2244  00142E  0009               	tblrd		*+
  2245  001430  50F5               	movf	tablat,w,c
  2246  001432  5D8E               	subwf	printf@val& (0+255),w,b
  2247  001434  0009               	tblrd		*+
  2248  001436  50F5               	movf	tablat,w,c
  2249  001438  598F               	subwfb	(printf@val+1)& (0+255),w,b
  2250  00143A  A0D8               	btfss	status,0,c
  2251  00143C  D002               	goto	u1190
  2252                           
  2253                           ; BSR set to: 0
  2254                           
  2255                           ; BSR set to: 0
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;doprnt.c: 1307: break;
  2259  00143E  2B90               	incf	printf@c& (0+255),f,b
  2260  001440  D7EA               	goto	l2241
  2261  001442                     u1190:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;doprnt.c: 1422: {
  2265                           ;doprnt.c: 1438: if(flag & 0x03)
  2266                           
  2267                           ; BSR set to: 0
  2268  001442  C08C  F036         	movff	printf@flag,??_printf
  2269  001446  0E03               	movlw	3
  2270  001448  1636               	andwf	??_printf,f,c
  2271  00144A  B4D8               	btfsc	status,2,c
  2272  00144C  D003               	goto	l334
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;doprnt.c: 1439: (putch('-') );
  2276  00144E  0E2D               	movlw	45
  2277  001450  EC6E  F00E         	call	_putch
  2278  001454                     l334:
  2279                           
  2280                           ;doprnt.c: 1469: }
  2281                           ;doprnt.c: 1472: prec = c;
  2282  001454  C090  F08D         	movff	printf@c,printf@prec
  2283                           
  2284                           ;doprnt.c: 1474: while(prec--) {
  2285  001458  D026               	goto	l335
  2286  00145A                     
  2287                           ;doprnt.c: 1478: {
  2288                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2289  00145A  0100               	movlb	0	; () banked
  2290  00145C  518D               	movf	printf@prec& (0+255),w,b
  2291  00145E  0D02               	mullw	2
  2292  001460  0E01               	movlw	low _dpowers
  2293  001462  24F3               	addwf	prodl,w,c
  2294  001464  6EF6               	movwf	tblptrl,c
  2295  001466  0E10               	movlw	high _dpowers
  2296  001468  20F4               	addwfc	prodh,w,c
  2297  00146A  6EF7               	movwf	tblptrh,c
  2298  00146C                     	if	0	;There are less than 3 active tblptr bytes
  2299  00146C                     	endif
  2300  00146C  0009               	tblrd		*+
  2301  00146E  CFF5 F02C          	movff	tablat,___lwdiv@divisor
  2302  001472  000A               	tblrd		*-
  2303  001474  CFF5 F02D          	movff	tablat,___lwdiv@divisor+1
  2304  001478  C08E  F02A         	movff	printf@val,___lwdiv@dividend
  2305  00147C  C08F  F02B         	movff	printf@val+1,___lwdiv@dividend+1
  2306  001480  EC3F  F00D         	call	___lwdiv	;wreg free
  2307  001484  C02A  F031         	movff	?___lwdiv,___lwmod@dividend
  2308  001488  C02B  F032         	movff	?___lwdiv+1,___lwmod@dividend+1
  2309  00148C  0E00               	movlw	0
  2310  00148E  6E34               	movwf	___lwmod@divisor+1,c
  2311  001490  0E0A               	movlw	10
  2312  001492  6E33               	movwf	___lwmod@divisor,c
  2313  001494  ECDD  F00D         	call	___lwmod	;wreg free
  2314  001498  5031               	movf	?___lwmod,w,c
  2315  00149A  0F30               	addlw	48
  2316  00149C  0100               	movlb	0	; () banked
  2317  00149E  6F90               	movwf	printf@c& (0+255),b
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;doprnt.c: 1523: }
  2321                           ;doprnt.c: 1524: (putch(c) );
  2322  0014A0  5190               	movf	printf@c& (0+255),w,b
  2323  0014A2  EC6E  F00E         	call	_putch
  2324  0014A6                     l335:
  2325  0014A6  0100               	movlb	0	; () banked
  2326  0014A8  078D               	decf	printf@prec& (0+255),f,b
  2327  0014AA  298D               	incf	printf@prec& (0+255),w,b
  2328  0014AC  A4D8               	btfss	status,2,c
  2329  0014AE  D7D5               	goto	l336
  2330  0014B0                     u1210:
  2331                           
  2332                           ; BSR set to: 0
  2333                           
  2334                           ; BSR set to: 0
  2335  0014B0  C080  FFF6         	movff	printf@f,tblptrl
  2336  0014B4  C081  FFF7         	movff	printf@f+1,tblptrh
  2337  0014B8  0100               	movlb	0	; () banked
  2338  0014BA  4B80               	infsnz	printf@f& (0+255),f,b
  2339  0014BC  2B81               	incf	(printf@f+1)& (0+255),f,b
  2340  0014BE                     	if	0	;tblptru may be non-zero
  2341  0014BE                     	endif
  2342  0014BE                     	if	0	;tblptru may be non-zero
  2343  0014BE                     	endif
  2344  0014BE  0008               	tblrd		*
  2345  0014C0  CFF5 F090          	movff	tablat,printf@c
  2346  0014C4  5190               	movf	printf@c& (0+255),w,b
  2347  0014C6  B4D8               	btfsc	status,2,c
  2348  0014C8  0012               	return	
  2349  0014CA  D771               	goto	l321
  2350  0014CC                     __end_of_printf:
  2351                           	opt stack 0
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           intcon	equ	0xFF2
  2359                           postinc0	equ	0xFEE
  2360                           wreg	equ	0xFE8
  2361                           postdec1	equ	0xFE5
  2362                           fsr1l	equ	0xFE1
  2363                           postinc2	equ	0xFDE
  2364                           postdec2	equ	0xFDD
  2365                           fsr2h	equ	0xFDA
  2366                           fsr2l	equ	0xFD9
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _putch *****************
  2370 ;; Defined at:
  2371 ;;		line 24 in file "lcd.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  data            1    wreg     unsigned char 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  data            1   43[COMRAM] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;Total ram usage:        1 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    5
  2392 ;; This function calls:
  2393 ;;		_lcdNibble
  2394 ;; This function is called by:
  2395 ;;		_printf
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text12
  2400  001CDC                     __ptext12:
  2401                           	opt stack 0
  2402  001CDC                     _putch:
  2403                           	opt stack 24
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;incstack = 0
  2407                           ;putch@data stored from wreg
  2408  001CDC  6E2C               	movwf	putch@data,c
  2409                           
  2410                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  2411  001CDE  848C               	bsf	3980,2,c	;volatile
  2412                           
  2413                           ;lcd.c: 33: lcdNibble(data);
  2414  001CE0  502C               	movf	putch@data,w,c
  2415  001CE2  ECF5  F00A         	call	_lcdNibble
  2416                           
  2417                           ;lcd.c: 34: _delay((unsigned long)((100)*(32000000/4000000.0)));
  2418  001CE6  0EA0               	movlw	160
  2419  001CE8                     u1477:
  2420  001CE8  D000               	nop2	
  2421  001CEA  2EE8               	decfsz	wreg,f,c
  2422  001CEC  D7FD               	bra	u1477
  2423  001CEE  0012               	return		;funcret
  2424  001CF0                     __end_of_putch:
  2425                           	opt stack 0
  2426                           tblptru	equ	0xFF8
  2427                           tblptrh	equ	0xFF7
  2428                           tblptrl	equ	0xFF6
  2429                           tablat	equ	0xFF5
  2430                           prodh	equ	0xFF4
  2431                           prodl	equ	0xFF3
  2432                           intcon	equ	0xFF2
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1l	equ	0xFE1
  2437                           postinc2	equ	0xFDE
  2438                           postdec2	equ	0xFDD
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8
  2442                           
  2443 ;; *************** function ___lwmod *****************
  2444 ;; Defined at:
  2445 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwmod.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  dividend        2   48[COMRAM] unsigned int 
  2448 ;;  divisor         2   50[COMRAM] unsigned int 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  counter         1   52[COMRAM] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  2   48[COMRAM] unsigned int 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;Total ram usage:        5 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    4
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_printf
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text13
  2475  001BBA                     __ptext13:
  2476                           	opt stack 0
  2477  001BBA                     ___lwmod:
  2478                           	opt stack 25
  2479                           
  2480                           ;incstack = 0
  2481  001BBA  5033               	movf	___lwmod@divisor,w,c
  2482  001BBC  1034               	iorwf	___lwmod@divisor+1,w,c
  2483  001BBE  B4D8               	btfsc	status,2,c
  2484  001BC0  D018               	goto	l758
  2485  001BC2  0E01               	movlw	1
  2486  001BC4  6E35               	movwf	___lwmod@counter,c
  2487  001BC6  D004               	goto	l753
  2488  001BC8  90D8               	bcf	status,0,c
  2489  001BCA  3633               	rlcf	___lwmod@divisor,f,c
  2490  001BCC  3634               	rlcf	___lwmod@divisor+1,f,c
  2491  001BCE  2A35               	incf	___lwmod@counter,f,c
  2492  001BD0                     l753:
  2493  001BD0  AE34               	btfss	___lwmod@divisor+1,7,c
  2494  001BD2  D7FA               	goto	l754
  2495  001BD4                     u1130:
  2496  001BD4  5033               	movf	___lwmod@divisor,w,c
  2497  001BD6  5C31               	subwf	___lwmod@dividend,w,c
  2498  001BD8  5034               	movf	___lwmod@divisor+1,w,c
  2499  001BDA  5832               	subwfb	___lwmod@dividend+1,w,c
  2500  001BDC  A0D8               	btfss	status,0,c
  2501  001BDE  D004               	goto	l757
  2502  001BE0  5033               	movf	___lwmod@divisor,w,c
  2503  001BE2  5E31               	subwf	___lwmod@dividend,f,c
  2504  001BE4  5034               	movf	___lwmod@divisor+1,w,c
  2505  001BE6  5A32               	subwfb	___lwmod@dividend+1,f,c
  2506  001BE8                     l757:
  2507  001BE8  90D8               	bcf	status,0,c
  2508  001BEA  3234               	rrcf	___lwmod@divisor+1,f,c
  2509  001BEC  3233               	rrcf	___lwmod@divisor,f,c
  2510  001BEE  2E35               	decfsz	___lwmod@counter,f,c
  2511  001BF0  D7F1               	goto	u1130
  2512  001BF2                     l758:
  2513  001BF2  C031  F031         	movff	___lwmod@dividend,?___lwmod
  2514  001BF6  C032  F032         	movff	___lwmod@dividend+1,?___lwmod+1
  2515  001BFA  0012               	return		;funcret
  2516  001BFC                     __end_of___lwmod:
  2517                           	opt stack 0
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           prodh	equ	0xFF4
  2523                           prodl	equ	0xFF3
  2524                           intcon	equ	0xFF2
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           postdec1	equ	0xFE5
  2528                           fsr1l	equ	0xFE1
  2529                           postinc2	equ	0xFDE
  2530                           postdec2	equ	0xFDD
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           status	equ	0xFD8
  2534                           
  2535 ;; *************** function ___lwdiv *****************
  2536 ;; Defined at:
  2537 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  dividend        2   41[COMRAM] unsigned int 
  2540 ;;  divisor         2   43[COMRAM] unsigned int 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  quotient        2   46[COMRAM] unsigned int 
  2543 ;;  counter         1   45[COMRAM] unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2   41[COMRAM] unsigned int 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;Total ram usage:        7 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    4
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_printf
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text14
  2568  001A7E                     __ptext14:
  2569                           	opt stack 0
  2570  001A7E                     ___lwdiv:
  2571                           	opt stack 25
  2572                           
  2573                           ;incstack = 0
  2574  001A7E  0E00               	movlw	0
  2575  001A80  6E30               	movwf	___lwdiv@quotient+1,c
  2576  001A82  0E00               	movlw	0
  2577  001A84  6E2F               	movwf	___lwdiv@quotient,c
  2578  001A86  502C               	movf	___lwdiv@divisor,w,c
  2579  001A88  102D               	iorwf	___lwdiv@divisor+1,w,c
  2580  001A8A  B4D8               	btfsc	status,2,c
  2581  001A8C  D01C               	goto	l748
  2582  001A8E  0E01               	movlw	1
  2583  001A90  6E2E               	movwf	___lwdiv@counter,c
  2584  001A92  D004               	goto	l743
  2585  001A94  90D8               	bcf	status,0,c
  2586  001A96  362C               	rlcf	___lwdiv@divisor,f,c
  2587  001A98  362D               	rlcf	___lwdiv@divisor+1,f,c
  2588  001A9A  2A2E               	incf	___lwdiv@counter,f,c
  2589  001A9C                     l743:
  2590  001A9C  AE2D               	btfss	___lwdiv@divisor+1,7,c
  2591  001A9E  D7FA               	goto	l744
  2592  001AA0                     u1100:
  2593  001AA0  90D8               	bcf	status,0,c
  2594  001AA2  362F               	rlcf	___lwdiv@quotient,f,c
  2595  001AA4  3630               	rlcf	___lwdiv@quotient+1,f,c
  2596  001AA6  502C               	movf	___lwdiv@divisor,w,c
  2597  001AA8  5C2A               	subwf	___lwdiv@dividend,w,c
  2598  001AAA  502D               	movf	___lwdiv@divisor+1,w,c
  2599  001AAC  582B               	subwfb	___lwdiv@dividend+1,w,c
  2600  001AAE  A0D8               	btfss	status,0,c
  2601  001AB0  D005               	goto	l747
  2602  001AB2  502C               	movf	___lwdiv@divisor,w,c
  2603  001AB4  5E2A               	subwf	___lwdiv@dividend,f,c
  2604  001AB6  502D               	movf	___lwdiv@divisor+1,w,c
  2605  001AB8  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  2606  001ABA  802F               	bsf	___lwdiv@quotient,0,c
  2607  001ABC                     l747:
  2608  001ABC  90D8               	bcf	status,0,c
  2609  001ABE  322D               	rrcf	___lwdiv@divisor+1,f,c
  2610  001AC0  322C               	rrcf	___lwdiv@divisor,f,c
  2611  001AC2  2E2E               	decfsz	___lwdiv@counter,f,c
  2612  001AC4  D7ED               	goto	u1100
  2613  001AC6                     l748:
  2614  001AC6  C02F  F02A         	movff	___lwdiv@quotient,?___lwdiv
  2615  001ACA  C030  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2616  001ACE  0012               	return		;funcret
  2617  001AD0                     __end_of___lwdiv:
  2618                           	opt stack 0
  2619                           tblptru	equ	0xFF8
  2620                           tblptrh	equ	0xFF7
  2621                           tblptrl	equ	0xFF6
  2622                           tablat	equ	0xFF5
  2623                           prodh	equ	0xFF4
  2624                           prodl	equ	0xFF3
  2625                           intcon	equ	0xFF2
  2626                           postinc0	equ	0xFEE
  2627                           wreg	equ	0xFE8
  2628                           postdec1	equ	0xFE5
  2629                           fsr1l	equ	0xFE1
  2630                           postinc2	equ	0xFDE
  2631                           postdec2	equ	0xFDD
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _initLCD *****************
  2637 ;; Defined at:
  2638 ;;		line 60 in file "lcd.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;Total ram usage:        1 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    6
  2659 ;; This function calls:
  2660 ;;		_lcdInst
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;;		_Bolt_dispense
  2664 ;;		_Nut_dispense
  2665 ;;		_Spacer_dispense
  2666 ;;		_Washer_dispense
  2667 ;;		_Bolt_remain
  2668 ;;		_Nut_remain
  2669 ;;		_Spacer_remain
  2670 ;;		_Washer_remain
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text15
  2675  001B22                     __ptext15:
  2676                           	opt stack 0
  2677  001B22                     _initLCD:
  2678                           	opt stack 24
  2679                           
  2680                           ;lcd.c: 68: _delay((unsigned long)((15)*(32000000/4000.0)));
  2681                           
  2682                           ;incstack = 0
  2683  001B22  0E9C               	movlw	156
  2684  001B24  6E2D               	movwf	??_initLCD& (0+255),c
  2685  001B26  0ED7               	movlw	215
  2686  001B28                     u1487:
  2687  001B28  2EE8               	decfsz	wreg,f,c
  2688  001B2A  D7FE               	bra	u1487
  2689  001B2C  2E2D               	decfsz	??_initLCD& (0+255),f,c
  2690  001B2E  D7FC               	bra	u1487
  2691  001B30  F000               	nop	
  2692                           
  2693                           ;lcd.c: 69: lcdInst(0b00110011);
  2694  001B32  0E33               	movlw	51
  2695  001B34  EC78  F00E         	call	_lcdInst
  2696                           
  2697                           ;lcd.c: 70: lcdInst(0b00110010);
  2698  001B38  0E32               	movlw	50
  2699  001B3A  EC78  F00E         	call	_lcdInst
  2700                           
  2701                           ;lcd.c: 71: lcdInst(0b00101000);
  2702  001B3E  0E28               	movlw	40
  2703  001B40  EC78  F00E         	call	_lcdInst
  2704                           
  2705                           ;lcd.c: 72: lcdInst(0b00001111);
  2706  001B44  0E0F               	movlw	15
  2707  001B46  EC78  F00E         	call	_lcdInst
  2708                           
  2709                           ;lcd.c: 73: lcdInst(0b00000110);
  2710  001B4A  0E06               	movlw	6
  2711  001B4C  EC78  F00E         	call	_lcdInst
  2712                           
  2713                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(32000000/4000.0)));;
  2714  001B50  0E01               	movlw	1
  2715  001B52  EC78  F00E         	call	_lcdInst
  2716  001B56  0E9C               	movlw	156
  2717  001B58  6E2D               	movwf	??_initLCD& (0+255),c
  2718  001B5A  0ED7               	movlw	215
  2719  001B5C                     u1497:
  2720  001B5C  2EE8               	decfsz	wreg,f,c
  2721  001B5E  D7FE               	bra	u1497
  2722  001B60  2E2D               	decfsz	??_initLCD& (0+255),f,c
  2723  001B62  D7FC               	bra	u1497
  2724  001B64  F000               	nop	
  2725                           
  2726                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  2727  001B66  0E0F               	movlw	15
  2728  001B68  EC78  F00E         	call	_lcdInst
  2729  001B6C  0012               	return		;funcret
  2730  001B6E                     __end_of_initLCD:
  2731                           	opt stack 0
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           prodh	equ	0xFF4
  2737                           prodl	equ	0xFF3
  2738                           intcon	equ	0xFF2
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           postdec1	equ	0xFE5
  2742                           fsr1l	equ	0xFE1
  2743                           postinc2	equ	0xFDE
  2744                           postdec2	equ	0xFDD
  2745                           fsr2h	equ	0xFDA
  2746                           fsr2l	equ	0xFD9
  2747                           status	equ	0xFD8
  2748                           
  2749 ;; *************** function _lcdInst *****************
  2750 ;; Defined at:
  2751 ;;		line 11 in file "lcd.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  data            1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  data            1   43[COMRAM] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;Total ram usage:        1 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    5
  2772 ;; This function calls:
  2773 ;;		_lcdNibble
  2774 ;; This function is called by:
  2775 ;;		_initLCD
  2776 ;;		_main
  2777 ;;		_Bolt_dispense
  2778 ;;		_Nut_dispense
  2779 ;;		_Spacer_dispense
  2780 ;;		_Washer_dispense
  2781 ;;		_Bolt_remain
  2782 ;;		_Nut_remain
  2783 ;;		_Spacer_remain
  2784 ;;		_Washer_remain
  2785 ;;		_lcd_set_cursor
  2786 ;;		_lcd_shift_cursor
  2787 ;;		_lcd_shift_display
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text16
  2792  001CF0                     __ptext16:
  2793                           	opt stack 0
  2794  001CF0                     _lcdInst:
  2795                           	opt stack 25
  2796                           
  2797                           ;incstack = 0
  2798                           ;lcdInst@data stored from wreg
  2799  001CF0  6E2C               	movwf	lcdInst@data,c
  2800                           
  2801                           ;lcd.c: 19: LATDbits.LATD2 = 0;
  2802  001CF2  948C               	bcf	3980,2,c	;volatile
  2803                           
  2804                           ;lcd.c: 20: lcdNibble(data);
  2805  001CF4  502C               	movf	lcdInst@data,w,c
  2806  001CF6  ECF5  F00A         	call	_lcdNibble
  2807                           
  2808                           ;lcd.c: 21: _delay((unsigned long)((100)*(32000000/4000000.0)));
  2809  001CFA  0EA0               	movlw	160
  2810  001CFC                     u1507:
  2811  001CFC  D000               	nop2	
  2812  001CFE  2EE8               	decfsz	wreg,f,c
  2813  001D00  D7FD               	bra	u1507
  2814  001D02  0012               	return		;funcret
  2815  001D04                     __end_of_lcdInst:
  2816                           	opt stack 0
  2817                           tblptru	equ	0xFF8
  2818                           tblptrh	equ	0xFF7
  2819                           tblptrl	equ	0xFF6
  2820                           tablat	equ	0xFF5
  2821                           prodh	equ	0xFF4
  2822                           prodl	equ	0xFF3
  2823                           intcon	equ	0xFF2
  2824                           postinc0	equ	0xFEE
  2825                           wreg	equ	0xFE8
  2826                           postdec1	equ	0xFE5
  2827                           fsr1l	equ	0xFE1
  2828                           postinc2	equ	0xFDE
  2829                           postdec2	equ	0xFDD
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           status	equ	0xFD8
  2833                           
  2834 ;; *************** function _lcdNibble *****************
  2835 ;; Defined at:
  2836 ;;		line 37 in file "lcd.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  data            1    wreg     unsigned char 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  data            1   42[COMRAM] unsigned char 
  2841 ;;  temp            1   41[COMRAM] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;Total ram usage:        2 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    4
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_lcdInst
  2862 ;;		_putch
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text17
  2867  0015EA                     __ptext17:
  2868                           	opt stack 0
  2869  0015EA                     _lcdNibble:
  2870                           	opt stack 24
  2871                           
  2872                           ;incstack = 0
  2873                           ;lcdNibble@data stored from wreg
  2874  0015EA  6E2B               	movwf	lcdNibble@data,c
  2875                           
  2876                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
  2877  0015EC  502B               	movf	lcdNibble@data,w,c
  2878  0015EE  0BF0               	andlw	240
  2879  0015F0  6E2A               	movwf	lcdNibble@temp,c
  2880                           
  2881                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
  2882  0015F2  508C               	movf	3980,w,c	;volatile
  2883  0015F4  0B0F               	andlw	15
  2884  0015F6  6E8C               	movwf	3980,c	;volatile
  2885                           
  2886                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
  2887  0015F8  502A               	movf	lcdNibble@temp,w,c
  2888  0015FA  108C               	iorwf	3980,w,c	;volatile
  2889  0015FC  6E8C               	movwf	3980,c	;volatile
  2890                           
  2891                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  2892  0015FE  0E00               	movlw	0
  2893  001600  BEF2               	btfsc	intcon,7,c	;volatile
  2894  001602  0E01               	movlw	1
  2895  001604  6E49               	movwf	_LCDinterruptState,c
  2896  001606  9EF2               	bcf	intcon,7,c	;volatile
  2897  001608  868C               	bsf	3980,3,c	;volatile
  2898  00160A  0E42               	movlw	66
  2899  00160C                     u1517:
  2900  00160C  2EE8               	decfsz	wreg,f,c
  2901  00160E  D7FE               	bra	u1517
  2902  001610  D000               	nop2	
  2903  001612  968C               	bcf	3980,3,c	;volatile
  2904  001614  0EA0               	movlw	160
  2905  001616                     u1527:
  2906  001616  D000               	nop2	
  2907  001618  2EE8               	decfsz	wreg,f,c
  2908  00161A  D7FD               	bra	u1527
  2909  00161C  B049               	btfsc	_LCDinterruptState,0,c
  2910  00161E  D002               	bra	u1075
  2911  001620  9EF2               	bcf	intcon,7,c	;volatile
  2912  001622  D001               	bra	u1076
  2913  001624                     u1075:
  2914  001624  8EF2               	bsf	intcon,7,c	;volatile
  2915  001626                     u1076:
  2916                           
  2917                           ;lcd.c: 52: data = (unsigned char) (data << 4);
  2918  001626  382B               	swapf	lcdNibble@data,w,c
  2919  001628  0BF0               	andlw	240
  2920  00162A  6E2B               	movwf	lcdNibble@data,c
  2921                           
  2922                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
  2923  00162C  502B               	movf	lcdNibble@data,w,c
  2924  00162E  0BF0               	andlw	240
  2925  001630  6E2A               	movwf	lcdNibble@temp,c
  2926                           
  2927                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
  2928  001632  508C               	movf	3980,w,c	;volatile
  2929  001634  0B0F               	andlw	15
  2930  001636  6E8C               	movwf	3980,c	;volatile
  2931                           
  2932                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
  2933  001638  502A               	movf	lcdNibble@temp,w,c
  2934  00163A  108C               	iorwf	3980,w,c	;volatile
  2935  00163C  6E8C               	movwf	3980,c	;volatile
  2936                           
  2937                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  2938  00163E  0E00               	movlw	0
  2939  001640  BEF2               	btfsc	intcon,7,c	;volatile
  2940  001642  0E01               	movlw	1
  2941  001644  6E49               	movwf	_LCDinterruptState,c
  2942  001646  9EF2               	bcf	intcon,7,c	;volatile
  2943  001648  868C               	bsf	3980,3,c	;volatile
  2944  00164A  0E42               	movlw	66
  2945  00164C                     u1537:
  2946  00164C  2EE8               	decfsz	wreg,f,c
  2947  00164E  D7FE               	bra	u1537
  2948  001650  D000               	nop2	
  2949  001652  968C               	bcf	3980,3,c	;volatile
  2950  001654  0EA0               	movlw	160
  2951  001656                     u1547:
  2952  001656  D000               	nop2	
  2953  001658  2EE8               	decfsz	wreg,f,c
  2954  00165A  D7FD               	bra	u1547
  2955  00165C  B049               	btfsc	_LCDinterruptState,0,c
  2956  00165E  D002               	bra	u1085
  2957  001660  9EF2               	bcf	intcon,7,c	;volatile
  2958  001662  D001               	bra	u1086
  2959  001664                     u1085:
  2960  001664  8EF2               	bsf	intcon,7,c	;volatile
  2961  001666                     u1086:
  2962  001666  0012               	return		;funcret
  2963  001668                     __end_of_lcdNibble:
  2964                           	opt stack 0
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           prodh	equ	0xFF4
  2970                           prodl	equ	0xFF3
  2971                           intcon	equ	0xFF2
  2972                           postinc0	equ	0xFEE
  2973                           wreg	equ	0xFE8
  2974                           postdec1	equ	0xFE5
  2975                           fsr1l	equ	0xFE1
  2976                           postinc2	equ	0xFDE
  2977                           postdec2	equ	0xFDD
  2978                           fsr2h	equ	0xFDA
  2979                           fsr2l	equ	0xFD9
  2980                           status	equ	0xFD8
  2981                           
  2982 ;; *************** function _I2C_sendData *****************
  2983 ;; Defined at:
  2984 ;;		line 234 in file "main.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  char_data       1    wreg     unsigned char 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  char_data       1   44[COMRAM] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;Total ram usage:        1 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    6
  3005 ;; This function calls:
  3006 ;;		_I2C_Master_Start
  3007 ;;		_I2C_Master_Stop
  3008 ;;		_I2C_Master_Write
  3009 ;; This function is called by:
  3010 ;;		_Bolt_dispense
  3011 ;;		_Nut_dispense
  3012 ;;		_Spacer_dispense
  3013 ;;		_Washer_dispense
  3014 ;;		_Bolt_remain
  3015 ;;		_Nut_remain
  3016 ;;		_Spacer_remain
  3017 ;;		_Washer_remain
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text18
  3022  001CA2                     __ptext18:
  3023                           	opt stack 0
  3024  001CA2                     _I2C_sendData:
  3025                           	opt stack 23
  3026                           
  3027                           ;incstack = 0
  3028                           ;I2C_sendData@char_data stored from wreg
  3029  001CA2  6E2D               	movwf	I2C_sendData@char_data,c
  3030                           
  3031                           ;main.c: 235: I2C_Master_Start();
  3032  001CA4  ECAE  F00E         	call	_I2C_Master_Start	;wreg free
  3033                           
  3034                           ;main.c: 236: I2C_Master_Write(0b00010000);
  3035  001CA8  0E00               	movlw	0
  3036  001CAA  6E2C               	movwf	I2C_Master_Write@byteToWrite+1,c
  3037  001CAC  0E10               	movlw	16
  3038  001CAE  6E2B               	movwf	I2C_Master_Write@byteToWrite,c
  3039  001CB0  ECA5  F00E         	call	_I2C_Master_Write	;wreg free
  3040                           
  3041                           ;main.c: 237: I2C_Master_Write(char_data);
  3042  001CB4  C02D  F02B         	movff	I2C_sendData@char_data,I2C_Master_Write@byteToWrite
  3043  001CB8  6A2C               	clrf	I2C_Master_Write@byteToWrite+1,c
  3044  001CBA  ECA5  F00E         	call	_I2C_Master_Write	;wreg free
  3045                           
  3046                           ;main.c: 238: I2C_Master_Stop();
  3047  001CBE  ECAA  F00E         	call	_I2C_Master_Stop	;wreg free
  3048  001CC2  0012               	return		;funcret
  3049  001CC4                     __end_of_I2C_sendData:
  3050                           	opt stack 0
  3051                           tblptru	equ	0xFF8
  3052                           tblptrh	equ	0xFF7
  3053                           tblptrl	equ	0xFF6
  3054                           tablat	equ	0xFF5
  3055                           prodh	equ	0xFF4
  3056                           prodl	equ	0xFF3
  3057                           intcon	equ	0xFF2
  3058                           postinc0	equ	0xFEE
  3059                           wreg	equ	0xFE8
  3060                           postdec1	equ	0xFE5
  3061                           fsr1l	equ	0xFE1
  3062                           postinc2	equ	0xFDE
  3063                           postdec2	equ	0xFDD
  3064                           fsr2h	equ	0xFDA
  3065                           fsr2l	equ	0xFD9
  3066                           status	equ	0xFD8
  3067                           
  3068 ;; *************** function _I2C_Master_Write *****************
  3069 ;; Defined at:
  3070 ;;		line 109 in file "I2C.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  byteToWrite     2   42[COMRAM] unsigned int 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;Total ram usage:        2 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    5
  3091 ;; This function calls:
  3092 ;;		_I2C_Master_Wait
  3093 ;; This function is called by:
  3094 ;;		_I2C_init
  3095 ;;		_I2C_sendData
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text19
  3100  001D4A                     __ptext19:
  3101                           	opt stack 0
  3102  001D4A                     _I2C_Master_Write:
  3103                           	opt stack 23
  3104                           
  3105                           ;I2C.c: 117: I2C_Master_Wait();
  3106                           
  3107                           ;incstack = 0
  3108  001D4A  EC96  F00E         	call	_I2C_Master_Wait	;wreg free
  3109                           
  3110                           ;I2C.c: 118: SSPBUF = byteToWrite;
  3111  001D4E  C02B  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  3112  001D52  0012               	return		;funcret
  3113  001D54                     __end_of_I2C_Master_Write:
  3114                           	opt stack 0
  3115                           tblptru	equ	0xFF8
  3116                           tblptrh	equ	0xFF7
  3117                           tblptrl	equ	0xFF6
  3118                           tablat	equ	0xFF5
  3119                           prodh	equ	0xFF4
  3120                           prodl	equ	0xFF3
  3121                           intcon	equ	0xFF2
  3122                           postinc0	equ	0xFEE
  3123                           wreg	equ	0xFE8
  3124                           postdec1	equ	0xFE5
  3125                           fsr1l	equ	0xFE1
  3126                           postinc2	equ	0xFDE
  3127                           postdec2	equ	0xFDD
  3128                           fsr2h	equ	0xFDA
  3129                           fsr2l	equ	0xFD9
  3130                           status	equ	0xFD8
  3131                           
  3132 ;; *************** function _I2C_Master_Stop *****************
  3133 ;; Defined at:
  3134 ;;		line 96 in file "I2C.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    5
  3155 ;; This function calls:
  3156 ;;		_I2C_Master_Wait
  3157 ;; This function is called by:
  3158 ;;		_I2C_init
  3159 ;;		_I2C_sendData
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text20
  3164  001D54                     __ptext20:
  3165                           	opt stack 0
  3166  001D54                     _I2C_Master_Stop:
  3167                           	opt stack 23
  3168                           
  3169                           ;I2C.c: 105: I2C_Master_Wait();
  3170                           
  3171                           ;incstack = 0
  3172  001D54  EC96  F00E         	call	_I2C_Master_Wait	;wreg free
  3173                           
  3174                           ;I2C.c: 106: SSPCON2bits.PEN = 1;
  3175  001D58  84C5               	bsf	4037,2,c	;volatile
  3176  001D5A  0012               	return		;funcret
  3177  001D5C                     __end_of_I2C_Master_Stop:
  3178                           	opt stack 0
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           prodh	equ	0xFF4
  3184                           prodl	equ	0xFF3
  3185                           intcon	equ	0xFF2
  3186                           postinc0	equ	0xFEE
  3187                           wreg	equ	0xFE8
  3188                           postdec1	equ	0xFE5
  3189                           fsr1l	equ	0xFE1
  3190                           postinc2	equ	0xFDE
  3191                           postdec2	equ	0xFDD
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _I2C_Master_Start *****************
  3197 ;; Defined at:
  3198 ;;		line 70 in file "I2C.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    5
  3219 ;; This function calls:
  3220 ;;		_I2C_Master_Wait
  3221 ;; This function is called by:
  3222 ;;		_I2C_init
  3223 ;;		_I2C_sendData
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text21
  3228  001D5C                     __ptext21:
  3229                           	opt stack 0
  3230  001D5C                     _I2C_Master_Start:
  3231                           	opt stack 23
  3232                           
  3233                           ;I2C.c: 79: I2C_Master_Wait();
  3234                           
  3235                           ;incstack = 0
  3236  001D5C  EC96  F00E         	call	_I2C_Master_Wait	;wreg free
  3237                           
  3238                           ;I2C.c: 80: SSPCON2bits.SEN = 1;
  3239  001D60  80C5               	bsf	4037,0,c	;volatile
  3240  001D62  0012               	return		;funcret
  3241  001D64                     __end_of_I2C_Master_Start:
  3242                           	opt stack 0
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           prodh	equ	0xFF4
  3248                           prodl	equ	0xFF3
  3249                           intcon	equ	0xFF2
  3250                           postinc0	equ	0xFEE
  3251                           wreg	equ	0xFE8
  3252                           postdec1	equ	0xFE5
  3253                           fsr1l	equ	0xFE1
  3254                           postinc2	equ	0xFDE
  3255                           postdec2	equ	0xFDD
  3256                           fsr2h	equ	0xFDA
  3257                           fsr2l	equ	0xFD9
  3258                           status	equ	0xFD8
  3259                           
  3260 ;; *************** function _I2C_Master_Wait *****************
  3261 ;; Defined at:
  3262 ;;		line 52 in file "I2C.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;Total ram usage:        1 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    4
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_I2C_Master_Start
  3287 ;;		_I2C_Master_Stop
  3288 ;;		_I2C_Master_Write
  3289 ;;		_I2C_Master_RepeatedStart
  3290 ;;		_I2C_Master_Read
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text22
  3295  001D2C                     __ptext22:
  3296                           	opt stack 0
  3297  001D2C                     _I2C_Master_Wait:
  3298                           	opt stack 23
  3299                           
  3300                           ;I2C.c: 67: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3301                           
  3302                           ;incstack = 0
  3303  001D2C  B4C7               	btfsc	4039,2,c	;volatile
  3304  001D2E  D7FE               	goto	_I2C_Master_Wait
  3305  001D30  CFC5 F02A          	movff	4037,??_I2C_Master_Wait	;volatile
  3306  001D34  0E1F               	movlw	31
  3307  001D36  162A               	andwf	??_I2C_Master_Wait,f,c
  3308  001D38  B4D8               	btfsc	status,2,c
  3309  001D3A  0012               	return	
  3310  001D3C  D7F7               	goto	_I2C_Master_Wait
  3311  001D3E                     __end_of_I2C_Master_Wait:
  3312                           	opt stack 0
  3313                           tblptru	equ	0xFF8
  3314                           tblptrh	equ	0xFF7
  3315                           tblptrl	equ	0xFF6
  3316                           tablat	equ	0xFF5
  3317                           prodh	equ	0xFF4
  3318                           prodl	equ	0xFF3
  3319                           intcon	equ	0xFF2
  3320                           postinc0	equ	0xFEE
  3321                           wreg	equ	0xFE8
  3322                           postdec1	equ	0xFE5
  3323                           fsr1l	equ	0xFE1
  3324                           postinc2	equ	0xFDE
  3325                           postdec2	equ	0xFDD
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8
  3329                           
  3330 ;; *************** function _interruptHandler *****************
  3331 ;; Defined at:
  3332 ;;		line 136 in file "main.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:         19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:       19 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    3
  3353 ;; This function calls:
  3354 ;;		i2_initLCD
  3355 ;;		i2_lcdInst
  3356 ;;		i2_printf
  3357 ;; This function is called by:
  3358 ;;		Interrupt level 2
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	intcode
  3363  000008                     __pintcode:
  3364                           	opt stack 0
  3365  000008                     _interruptHandler:
  3366                           	opt stack 23
  3367                           
  3368                           ;incstack = 0
  3369  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3370  00000A  ED34  F008         	call	int_func,f	;refresh shadow registers
  3371                           tblptru	equ	0xFF8
  3372                           tblptrh	equ	0xFF7
  3373                           tblptrl	equ	0xFF6
  3374                           tablat	equ	0xFF5
  3375                           prodh	equ	0xFF4
  3376                           prodl	equ	0xFF3
  3377                           intcon	equ	0xFF2
  3378                           postinc0	equ	0xFEE
  3379                           wreg	equ	0xFE8
  3380                           postdec1	equ	0xFE5
  3381                           fsr1l	equ	0xFE1
  3382                           postinc2	equ	0xFDE
  3383                           postdec2	equ	0xFDD
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8
  3387                           
  3388                           	psect	intcode_body
  3389  001068                     __pintcode_body:
  3390                           	opt stack 23
  3391  001068                     int_func:
  3392                           	opt stack 23
  3393  001068  0006               	pop		; remove dummy address from shadow register refresh
  3394  00106A  CFFA F018          	movff	pclath,??_interruptHandler+1
  3395  00106E  CFFB F019          	movff	pclatu,??_interruptHandler+2
  3396  001072  CFE9 F01A          	movff	fsr0l,??_interruptHandler+3
  3397  001076  CFEA F01B          	movff	fsr0h,??_interruptHandler+4
  3398  00107A  CFE1 F01C          	movff	fsr1l,??_interruptHandler+5
  3399  00107E  CFE2 F01D          	movff	fsr1h,??_interruptHandler+6
  3400  001082  CFD9 F01E          	movff	fsr2l,??_interruptHandler+7
  3401  001086  CFDA F01F          	movff	fsr2h,??_interruptHandler+8
  3402  00108A  CFF3 F020          	movff	prodl,??_interruptHandler+9
  3403  00108E  CFF4 F021          	movff	prodh,??_interruptHandler+10
  3404  001092  CFF6 F022          	movff	tblptrl,??_interruptHandler+11
  3405  001096  CFF7 F023          	movff	tblptrh,??_interruptHandler+12
  3406  00109A  CFF8 F024          	movff	tblptru,??_interruptHandler+13
  3407  00109E  CFF5 F025          	movff	tablat,??_interruptHandler+14
  3408  0010A2  C056  F026         	movff	btemp,??_interruptHandler+15
  3409  0010A6  C057  F027         	movff	btemp+1,??_interruptHandler+16
  3410  0010AA  C058  F028         	movff	btemp+2,??_interruptHandler+17
  3411  0010AE  C059  F029         	movff	btemp+3,??_interruptHandler+18
  3412                           
  3413                           ;main.c: 148: if (RBIF){
  3414  0010B2  A0F2               	btfss	intcon,0,c	;volatile
  3415  0010B4  D0A7               	goto	i2l2111
  3416                           
  3417                           ;main.c: 150: B_input = PORTBbits.RB5;
  3418  0010B6  AA81               	btfss	3969,5,c	;volatile
  3419  0010B8  D003               	goto	i2u99_40
  3420  0010BA  6A17               	clrf	??_interruptHandler& (0+255),c
  3421  0010BC  2A17               	incf	??_interruptHandler& (0+255),f,c
  3422  0010BE  D001               	goto	i2u99_48
  3423  0010C0                     i2u99_40:
  3424  0010C0  6A17               	clrf	??_interruptHandler& (0+255),c
  3425  0010C2                     i2u99_48:
  3426  0010C2  5017               	movf	??_interruptHandler,w,c
  3427  0010C4  6E54               	movwf	_B_input,c
  3428  0010C6  6A55               	clrf	_B_input+1,c
  3429                           
  3430                           ;main.c: 151: N_input = PORTBbits.RB6;
  3431  0010C8  AC81               	btfss	3969,6,c	;volatile
  3432  0010CA  D003               	goto	i2u100_40
  3433  0010CC  6A17               	clrf	??_interruptHandler& (0+255),c
  3434  0010CE  2A17               	incf	??_interruptHandler& (0+255),f,c
  3435  0010D0  D001               	goto	i2u100_48
  3436  0010D2                     i2u100_40:
  3437  0010D2  6A17               	clrf	??_interruptHandler& (0+255),c
  3438  0010D4                     i2u100_48:
  3439  0010D4  5017               	movf	??_interruptHandler,w,c
  3440  0010D6  6E52               	movwf	_N_input,c
  3441  0010D8  6A53               	clrf	_N_input+1,c
  3442                           
  3443                           ;main.c: 152: S_input = PORTBbits.RB4;
  3444  0010DA  A881               	btfss	3969,4,c	;volatile
  3445  0010DC  D003               	goto	i2u101_40
  3446  0010DE  6A17               	clrf	??_interruptHandler& (0+255),c
  3447  0010E0  2A17               	incf	??_interruptHandler& (0+255),f,c
  3448  0010E2  D001               	goto	i2u101_48
  3449  0010E4                     i2u101_40:
  3450  0010E4  6A17               	clrf	??_interruptHandler& (0+255),c
  3451  0010E6                     i2u101_48:
  3452  0010E6  5017               	movf	??_interruptHandler,w,c
  3453  0010E8  6E50               	movwf	_S_input,c
  3454  0010EA  6A51               	clrf	_S_input+1,c
  3455                           
  3456                           ;main.c: 153: W_input = PORTBbits.RB7;
  3457  0010EC  AE81               	btfss	3969,7,c	;volatile
  3458  0010EE  D003               	goto	i2u102_40
  3459  0010F0  6A17               	clrf	??_interruptHandler& (0+255),c
  3460  0010F2  2A17               	incf	??_interruptHandler& (0+255),f,c
  3461  0010F4  D001               	goto	i2u102_48
  3462  0010F6                     i2u102_40:
  3463  0010F6  6A17               	clrf	??_interruptHandler& (0+255),c
  3464  0010F8                     i2u102_48:
  3465  0010F8  5017               	movf	??_interruptHandler,w,c
  3466  0010FA  6E4E               	movwf	_W_input,c
  3467  0010FC  6A4F               	clrf	_W_input+1,c
  3468                           
  3469                           ;main.c: 157: if (B_input == 1){
  3470  0010FE  0454               	decf	_B_input,w,c
  3471  001100  1055               	iorwf	_B_input+1,w,c
  3472  001102  A4D8               	btfss	status,2,c
  3473  001104  D018               	goto	i2l197
  3474                           
  3475                           ;main.c: 158: B_spacingTime = 0;
  3476  001106  0E00               	movlw	0
  3477  001108  6E3F               	movwf	_B_spacingTime+1,c
  3478  00110A  0E00               	movlw	0
  3479  00110C  6E3E               	movwf	_B_spacingTime,c
  3480                           
  3481                           ;main.c: 159: initLCD();
  3482  00110E  ECB7  F00D         	call	i2_initLCD	;wreg free
  3483                           
  3484                           ;main.c: 160: printf("bolt_interrupt");
  3485  001112  0E49               	movlw	low STR_3
  3486  001114  6E0D               	movwf	i2printf@f,c
  3487  001116  0E10               	movlw	high STR_3
  3488  001118  6E0E               	movwf	i2printf@f+1,c
  3489  00111A  EC66  F00A         	call	i2_printf	;wreg free
  3490                           
  3491                           ;main.c: 161: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  3492  00111E  0E80               	movlw	128
  3493  001120  EC8C  F00E         	call	i2_lcdInst
  3494  001124  0E34               	movlw	52
  3495  001126  6E17               	movwf	??_interruptHandler& (0+255),c
  3496  001128  0EF2               	movlw	242
  3497  00112A                     i2u155_47:
  3498  00112A  2EE8               	decfsz	wreg,f,c
  3499  00112C  D7FE               	bra	i2u155_47
  3500  00112E  2E17               	decfsz	??_interruptHandler& (0+255),f,c
  3501  001130  D7FC               	bra	i2u155_47
  3502                           
  3503                           ;main.c: 162: B_count++;
  3504  001132  4A46               	infsnz	_B_count,f,c
  3505  001134  2A47               	incf	_B_count+1,f,c
  3506  001136                     i2l197:
  3507                           
  3508                           ;main.c: 164: }
  3509                           ;main.c: 167: if (N_input == 1){
  3510  001136  0452               	decf	_N_input,w,c
  3511  001138  1053               	iorwf	_N_input+1,w,c
  3512  00113A  A4D8               	btfss	status,2,c
  3513  00113C  D018               	goto	i2l198
  3514                           
  3515                           ;main.c: 168: N_spacingTime = 0;
  3516  00113E  0E00               	movlw	0
  3517  001140  6E3D               	movwf	_N_spacingTime+1,c
  3518  001142  0E00               	movlw	0
  3519  001144  6E3C               	movwf	_N_spacingTime,c
  3520                           
  3521                           ;main.c: 169: initLCD();
  3522  001146  ECB7  F00D         	call	i2_initLCD	;wreg free
  3523                           
  3524                           ;main.c: 170: printf("nut_interrupt");
  3525  00114A  0E58               	movlw	low STR_4
  3526  00114C  6E0D               	movwf	i2printf@f,c
  3527  00114E  0E10               	movlw	high STR_4
  3528  001150  6E0E               	movwf	i2printf@f+1,c
  3529  001152  EC66  F00A         	call	i2_printf	;wreg free
  3530                           
  3531                           ;main.c: 171: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  3532  001156  0E80               	movlw	128
  3533  001158  EC8C  F00E         	call	i2_lcdInst
  3534  00115C  0E34               	movlw	52
  3535  00115E  6E17               	movwf	??_interruptHandler& (0+255),c
  3536  001160  0EF2               	movlw	242
  3537  001162                     i2u156_47:
  3538  001162  2EE8               	decfsz	wreg,f,c
  3539  001164  D7FE               	bra	i2u156_47
  3540  001166  2E17               	decfsz	??_interruptHandler& (0+255),f,c
  3541  001168  D7FC               	bra	i2u156_47
  3542                           
  3543                           ;main.c: 172: N_count++;
  3544  00116A  4A44               	infsnz	_N_count,f,c
  3545  00116C  2A45               	incf	_N_count+1,f,c
  3546  00116E                     i2l198:
  3547                           
  3548                           ;main.c: 173: }
  3549                           ;main.c: 175: if (S_input == 1){
  3550  00116E  0450               	decf	_S_input,w,c
  3551  001170  1051               	iorwf	_S_input+1,w,c
  3552  001172  A4D8               	btfss	status,2,c
  3553  001174  D018               	goto	i2l199
  3554                           
  3555                           ;main.c: 176: S_spacingTime = 0;
  3556  001176  0E00               	movlw	0
  3557  001178  6E3B               	movwf	_S_spacingTime+1,c
  3558  00117A  0E00               	movlw	0
  3559  00117C  6E3A               	movwf	_S_spacingTime,c
  3560                           
  3561                           ;main.c: 177: S_count++;
  3562  00117E  4A42               	infsnz	_S_count,f,c
  3563  001180  2A43               	incf	_S_count+1,f,c
  3564                           
  3565                           ;main.c: 178: initLCD();
  3566  001182  ECB7  F00D         	call	i2_initLCD	;wreg free
  3567                           
  3568                           ;main.c: 180: printf("spacer_interrupted");
  3569  001186  0E25               	movlw	low STR_5
  3570  001188  6E0D               	movwf	i2printf@f,c
  3571  00118A  0E10               	movlw	high STR_5
  3572  00118C  6E0E               	movwf	i2printf@f+1,c
  3573  00118E  EC66  F00A         	call	i2_printf	;wreg free
  3574                           
  3575                           ;main.c: 181: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  3576  001192  0E80               	movlw	128
  3577  001194  EC8C  F00E         	call	i2_lcdInst
  3578  001198  0E34               	movlw	52
  3579  00119A  6E17               	movwf	??_interruptHandler& (0+255),c
  3580  00119C  0EF2               	movlw	242
  3581  00119E                     i2u157_47:
  3582  00119E  2EE8               	decfsz	wreg,f,c
  3583  0011A0  D7FE               	bra	i2u157_47
  3584  0011A2  2E17               	decfsz	??_interruptHandler& (0+255),f,c
  3585  0011A4  D7FC               	bra	i2u157_47
  3586  0011A6                     i2l199:
  3587                           
  3588                           ;main.c: 182: }
  3589                           ;main.c: 184: if (W_input == 1){
  3590  0011A6  044E               	decf	_W_input,w,c
  3591  0011A8  104F               	iorwf	_W_input+1,w,c
  3592  0011AA  A4D8               	btfss	status,2,c
  3593  0011AC  D018               	goto	i2l200
  3594                           
  3595                           ;main.c: 185: W_spacingTime = 0;
  3596  0011AE  0E00               	movlw	0
  3597  0011B0  6E39               	movwf	_W_spacingTime+1,c
  3598  0011B2  0E00               	movlw	0
  3599  0011B4  6E38               	movwf	_W_spacingTime,c
  3600                           
  3601                           ;main.c: 186: initLCD();
  3602  0011B6  ECB7  F00D         	call	i2_initLCD	;wreg free
  3603                           
  3604                           ;main.c: 187: printf("washer_interrupt");
  3605  0011BA  0E38               	movlw	low STR_6
  3606  0011BC  6E0D               	movwf	i2printf@f,c
  3607  0011BE  0E10               	movlw	high STR_6
  3608  0011C0  6E0E               	movwf	i2printf@f+1,c
  3609  0011C2  EC66  F00A         	call	i2_printf	;wreg free
  3610                           
  3611                           ;main.c: 188: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  3612  0011C6  0E80               	movlw	128
  3613  0011C8  EC8C  F00E         	call	i2_lcdInst
  3614  0011CC  0E34               	movlw	52
  3615  0011CE  6E17               	movwf	??_interruptHandler& (0+255),c
  3616  0011D0  0EF2               	movlw	242
  3617  0011D2                     i2u158_47:
  3618  0011D2  2EE8               	decfsz	wreg,f,c
  3619  0011D4  D7FE               	bra	i2u158_47
  3620  0011D6  2E17               	decfsz	??_interruptHandler& (0+255),f,c
  3621  0011D8  D7FC               	bra	i2u158_47
  3622                           
  3623                           ;main.c: 189: W_count++;
  3624  0011DA  4A40               	infsnz	_W_count,f,c
  3625  0011DC  2A41               	incf	_W_count+1,f,c
  3626  0011DE                     i2l200:
  3627                           
  3628                           ;main.c: 192: }
  3629                           ;main.c: 193: initLCD();
  3630  0011DE  ECB7  F00D         	call	i2_initLCD	;wreg free
  3631                           
  3632                           ;main.c: 194: printf("interrupted");
  3633  0011E2  0E2C               	movlw	low (STR_5+7)
  3634  0011E4  6E0D               	movwf	i2printf@f,c
  3635  0011E6  0E10               	movlw	high (STR_5+7)
  3636  0011E8  6E0E               	movwf	i2printf@f+1,c
  3637  0011EA  EC66  F00A         	call	i2_printf	;wreg free
  3638                           
  3639                           ;main.c: 195: lcdInst(0x80);_delay((unsigned long)((5)*(32000000/4000.0)));;
  3640  0011EE  0E80               	movlw	128
  3641  0011F0  EC8C  F00E         	call	i2_lcdInst
  3642  0011F4  0E34               	movlw	52
  3643  0011F6  6E17               	movwf	??_interruptHandler& (0+255),c
  3644  0011F8  0EF2               	movlw	242
  3645  0011FA                     i2u159_47:
  3646  0011FA  2EE8               	decfsz	wreg,f,c
  3647  0011FC  D7FE               	bra	i2u159_47
  3648  0011FE  2E17               	decfsz	??_interruptHandler& (0+255),f,c
  3649  001200  D7FC               	bra	i2u159_47
  3650                           
  3651                           ;main.c: 201: RBIF = 0;
  3652  001202  90F2               	bcf	intcon,0,c	;volatile
  3653  001204                     i2l2111:
  3654                           
  3655                           ;main.c: 202: return;
  3656  001204  C029  F059         	movff	??_interruptHandler+18,btemp+3
  3657  001208  C028  F058         	movff	??_interruptHandler+17,btemp+2
  3658  00120C  C027  F057         	movff	??_interruptHandler+16,btemp+1
  3659  001210  C026  F056         	movff	??_interruptHandler+15,btemp
  3660  001214  C025  FFF5         	movff	??_interruptHandler+14,tablat
  3661  001218  C024  FFF8         	movff	??_interruptHandler+13,tblptru
  3662  00121C  C023  FFF7         	movff	??_interruptHandler+12,tblptrh
  3663  001220  C022  FFF6         	movff	??_interruptHandler+11,tblptrl
  3664  001224  C021  FFF4         	movff	??_interruptHandler+10,prodh
  3665  001228  C020  FFF3         	movff	??_interruptHandler+9,prodl
  3666  00122C  C01F  FFDA         	movff	??_interruptHandler+8,fsr2h
  3667  001230  C01E  FFD9         	movff	??_interruptHandler+7,fsr2l
  3668  001234  C01D  FFE2         	movff	??_interruptHandler+6,fsr1h
  3669  001238  C01C  FFE1         	movff	??_interruptHandler+5,fsr1l
  3670  00123C  C01B  FFEA         	movff	??_interruptHandler+4,fsr0h
  3671  001240  C01A  FFE9         	movff	??_interruptHandler+3,fsr0l
  3672  001244  C019  FFFB         	movff	??_interruptHandler+2,pclatu
  3673  001248  C018  FFFA         	movff	??_interruptHandler+1,pclath
  3674  00124C  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3675  00124E  0011               	retfie		f
  3676  001250                     __end_of_interruptHandler:
  3677                           	opt stack 0
  3678                           pclatu	equ	0xFFB
  3679                           pclath	equ	0xFFA
  3680                           tblptru	equ	0xFF8
  3681                           tblptrh	equ	0xFF7
  3682                           tblptrl	equ	0xFF6
  3683                           tablat	equ	0xFF5
  3684                           prodh	equ	0xFF4
  3685                           prodl	equ	0xFF3
  3686                           intcon	equ	0xFF2
  3687                           postinc0	equ	0xFEE
  3688                           fsr0h	equ	0xFEA
  3689                           fsr0l	equ	0xFE9
  3690                           wreg	equ	0xFE8
  3691                           postdec1	equ	0xFE5
  3692                           fsr1h	equ	0xFE2
  3693                           fsr1l	equ	0xFE1
  3694                           postinc2	equ	0xFDE
  3695                           postdec2	equ	0xFDD
  3696                           fsr2h	equ	0xFDA
  3697                           fsr2l	equ	0xFD9
  3698                           status	equ	0xFD8
  3699                           
  3700 ;; *************** function i2_printf *****************
  3701 ;; Defined at:
  3702 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  f               2   12[COMRAM] PTR const unsigned char 
  3705 ;;		 -> STR_15(20), STR_14(20), STR_13(20), STR_12(20), 
  3706 ;;		 -> STR_11(20), STR_10(20), STR_9(20), STR_8(20), 
  3707 ;;		 -> STR_7(12), STR_6(17), STR_5(19), STR_4(14), 
  3708 ;;		 -> STR_3(15), STR_2(20), STR_1(20), 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  printf          4    0        struct .
  3711 ;;  printf          3    0        PTR const unsigned char 
  3712 ;;  printf          2   19[COMRAM] unsigned int 
  3713 ;;  printf          2   15[COMRAM] PTR void [1]
  3714 ;;		 -> ?i2_printf(2), ?_printf(2), 
  3715 ;;  printf          2    0        unsigned int 
  3716 ;;  printf          1   21[COMRAM] char 
  3717 ;;  printf          1   18[COMRAM] char 
  3718 ;;  printf          1   17[COMRAM] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  2   12[COMRAM] int 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:       10 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    2
  3735 ;; This function calls:
  3736 ;;		i2___lwdiv
  3737 ;;		i2___lwmod
  3738 ;;		i2_putch
  3739 ;; This function is called by:
  3740 ;;		_interruptHandler
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text24
  3745  0014CC                     __ptext24:
  3746                           	opt stack 0
  3747  0014CC                     i2_printf:
  3748                           	opt stack 23
  3749                           
  3750                           ;doprnt.c: 466: va_list ap;
  3751                           ;doprnt.c: 499: signed char c;
  3752                           ;doprnt.c: 506: signed char prec;
  3753                           ;doprnt.c: 508: unsigned char flag;
  3754                           ;doprnt.c: 523: union {
  3755                           ;doprnt.c: 524: unsigned long vd;
  3756                           ;doprnt.c: 525: double integ;
  3757                           ;doprnt.c: 526: } tmpval;
  3758                           ;doprnt.c: 528: unsigned int val;
  3759                           ;doprnt.c: 529: unsigned len;
  3760                           ;doprnt.c: 530: const char * cp;
  3761                           ;doprnt.c: 533: *ap = __va_start();
  3762                           
  3763                           ;incstack = 0
  3764  0014CC  0E0F               	movlw	low (?i2_printf+2)
  3765  0014CE  6E10               	movwf	i2printf@ap,c
  3766  0014D0  0E00               	movlw	high (?i2_printf+2)
  3767  0014D2  6E11               	movwf	i2printf@ap+1,c
  3768                           
  3769                           ;doprnt.c: 536: while(c = *f++) {
  3770  0014D4  D07D               	goto	i2u96_40
  3771  0014D6                     
  3772                           ;doprnt.c: 538: if(c != '%')
  3773  0014D6  0E25               	movlw	37
  3774  0014D8  1816               	xorwf	i2printf@c,w,c
  3775  0014DA  B4D8               	btfsc	status,2,c
  3776  0014DC  D004               	goto	i2l322
  3777                           
  3778                           ;doprnt.c: 540: {
  3779                           ;doprnt.c: 541: (putch(c) );
  3780  0014DE  5016               	movf	i2printf@c,w,c
  3781  0014E0  EC82  F00E         	call	i2_putch
  3782                           
  3783                           ;doprnt.c: 542: continue;
  3784  0014E4  D075               	goto	i2u96_40
  3785  0014E6                     i2l322:
  3786                           
  3787                           ;doprnt.c: 543: }
  3788                           ;doprnt.c: 548: flag = 0;
  3789  0014E6  0E00               	movlw	0
  3790  0014E8  6E12               	movwf	i2printf@flag,c
  3791                           
  3792                           ;doprnt.c: 822: }
  3793                           
  3794                           ;doprnt.c: 813: continue;
  3795                           
  3796                           ;doprnt.c: 802: default:
  3797                           
  3798                           ;doprnt.c: 698: case 'i':
  3799                           ;doprnt.c: 699: break;
  3800                           
  3801                           ;doprnt.c: 697: case 'd':
  3802                           
  3803                           ;doprnt.c: 638: goto alldone;
  3804                           
  3805                           ;doprnt.c: 637: case 0:
  3806                           
  3807                           ;doprnt.c: 635: switch(c = *f++) {
  3808  0014EA  C00D  FFF6         	movff	i2printf@f,tblptrl
  3809  0014EE  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  3810  0014F2  4A0D               	infsnz	i2printf@f,f,c
  3811  0014F4  2A0E               	incf	i2printf@f+1,f,c
  3812  0014F6                     	if	0	;tblptru may be non-zero
  3813  0014F6                     	endif
  3814  0014F6                     	if	0	;tblptru may be non-zero
  3815  0014F6                     	endif
  3816  0014F6  0008               	tblrd		*
  3817  0014F8  CFF5 F016          	movff	tablat,i2printf@c
  3818  0014FC  5016               	movf	i2printf@c,w,c
  3819                           
  3820                           ; Switch size 1, requested type "space"
  3821                           ; Number of cases is 3, Range of values is 0 to 105
  3822                           ; switch strategies available:
  3823                           ; Name         Instructions Cycles
  3824                           ; simple_byte           10     6 (average)
  3825                           ;	Chosen strategy is simple_byte
  3826  0014FE  0A00               	xorlw	0	; case 0
  3827  001500  B4D8               	btfsc	status,2,c
  3828  001502  0012               	return	
  3829  001504  0A64               	xorlw	100	; case 100
  3830  001506  B4D8               	btfsc	status,2,c
  3831  001508  D003               	goto	i2l328
  3832  00150A  0A0D               	xorlw	13	; case 105
  3833  00150C  A4D8               	btfss	status,2,c
  3834  00150E  D060               	goto	i2u96_40
  3835  001510                     i2l328:
  3836                           
  3837                           ;doprnt.c: 1253: {
  3838                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3839  001510  C010  FFD9         	movff	i2printf@ap,fsr2l
  3840  001514  C011  FFDA         	movff	i2printf@ap+1,fsr2h
  3841  001518  CFDE F014          	movff	postinc2,i2printf@val
  3842  00151C  CFDD F015          	movff	postdec2,i2printf@val+1
  3843  001520  0E02               	movlw	2
  3844  001522  2610               	addwf	i2printf@ap,f,c
  3845  001524  0E00               	movlw	0
  3846  001526  2211               	addwfc	i2printf@ap+1,f,c
  3847                           
  3848                           ;doprnt.c: 1261: if((int)val < 0) {
  3849  001528  AE15               	btfss	i2printf@val+1,7,c
  3850  00152A  D006               	goto	i2l330
  3851                           
  3852                           ;doprnt.c: 1262: flag |= 0x03;
  3853  00152C  0E03               	movlw	3
  3854  00152E  1212               	iorwf	i2printf@flag,f,c
  3855                           
  3856                           ;doprnt.c: 1263: val = -val;
  3857  001530  6C14               	negf	i2printf@val,c
  3858  001532  1E15               	comf	i2printf@val+1,f,c
  3859  001534  B0D8               	btfsc	status,0,c
  3860  001536  2A15               	incf	i2printf@val+1,f,c
  3861  001538                     i2l330:
  3862                           
  3863                           ;doprnt.c: 1264: }
  3864                           ;doprnt.c: 1266: }
  3865                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3866  001538  0E01               	movlw	1
  3867  00153A  6E16               	movwf	i2printf@c,c
  3868  00153C                     i2l1949:
  3869  00153C  0E05               	movlw	5
  3870  00153E  1816               	xorwf	i2printf@c,w,c
  3871  001540  B4D8               	btfsc	status,2,c
  3872  001542  D012               	goto	i2u94_40
  3873                           
  3874                           ;doprnt.c: 1306: if(val < dpowers[c])
  3875  001544  5016               	movf	i2printf@c,w,c
  3876  001546  0D02               	mullw	2
  3877  001548  0E01               	movlw	low _dpowers
  3878  00154A  24F3               	addwf	prodl,w,c
  3879  00154C  6EF6               	movwf	tblptrl,c
  3880  00154E  0E10               	movlw	high _dpowers
  3881  001550  20F4               	addwfc	prodh,w,c
  3882  001552  6EF7               	movwf	tblptrh,c
  3883  001554                     	if	0	;There are less than 3 active tblptr bytes
  3884  001554                     	endif
  3885  001554  0009               	tblrd		*+
  3886  001556  50F5               	movf	tablat,w,c
  3887  001558  5C14               	subwf	i2printf@val,w,c
  3888  00155A  0009               	tblrd		*+
  3889  00155C  50F5               	movf	tablat,w,c
  3890  00155E  5815               	subwfb	i2printf@val+1,w,c
  3891  001560  A0D8               	btfss	status,0,c
  3892  001562  D002               	goto	i2u94_40
  3893                           
  3894                           ;doprnt.c: 1307: break;
  3895  001564  2A16               	incf	i2printf@c,f,c
  3896  001566  D7EA               	goto	i2l1949
  3897  001568                     i2u94_40:
  3898                           
  3899                           ;doprnt.c: 1422: {
  3900                           ;doprnt.c: 1438: if(flag & 0x03)
  3901  001568  C012  F00F         	movff	i2printf@flag,??i2_printf
  3902  00156C  0E03               	movlw	3
  3903  00156E  160F               	andwf	??i2_printf,f,c
  3904  001570  B4D8               	btfsc	status,2,c
  3905  001572  D003               	goto	i2l334
  3906                           
  3907                           ;doprnt.c: 1439: (putch('-') );
  3908  001574  0E2D               	movlw	45
  3909  001576  EC82  F00E         	call	i2_putch
  3910  00157A                     i2l334:
  3911                           
  3912                           ;doprnt.c: 1469: }
  3913                           ;doprnt.c: 1472: prec = c;
  3914  00157A  C016  F013         	movff	i2printf@c,i2printf@prec
  3915                           
  3916                           ;doprnt.c: 1474: while(prec--) {
  3917  00157E  D024               	goto	i2l335
  3918  001580                     
  3919                           ;doprnt.c: 1478: {
  3920                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3921  001580  5013               	movf	i2printf@prec,w,c
  3922  001582  0D02               	mullw	2
  3923  001584  0E01               	movlw	low _dpowers
  3924  001586  24F3               	addwf	prodl,w,c
  3925  001588  6EF6               	movwf	tblptrl,c
  3926  00158A  0E10               	movlw	high _dpowers
  3927  00158C  20F4               	addwfc	prodh,w,c
  3928  00158E  6EF7               	movwf	tblptrh,c
  3929  001590                     	if	0	;There are less than 3 active tblptr bytes
  3930  001590                     	endif
  3931  001590  0009               	tblrd		*+
  3932  001592  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  3933  001596  000A               	tblrd		*-
  3934  001598  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  3935  00159C  C014  F001         	movff	i2printf@val,i2___lwdiv@dividend
  3936  0015A0  C015  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  3937  0015A4  EC68  F00D         	call	i2___lwdiv	;wreg free
  3938  0015A8  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  3939  0015AC  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  3940  0015B0  0E00               	movlw	0
  3941  0015B2  6E0B               	movwf	i2___lwmod@divisor+1,c
  3942  0015B4  0E0A               	movlw	10
  3943  0015B6  6E0A               	movwf	i2___lwmod@divisor,c
  3944  0015B8  ECFE  F00D         	call	i2___lwmod	;wreg free
  3945  0015BC  5008               	movf	?i2___lwmod,w,c
  3946  0015BE  0F30               	addlw	48
  3947  0015C0  6E16               	movwf	i2printf@c,c
  3948                           
  3949                           ;doprnt.c: 1523: }
  3950                           ;doprnt.c: 1524: (putch(c) );
  3951  0015C2  5016               	movf	i2printf@c,w,c
  3952  0015C4  EC82  F00E         	call	i2_putch
  3953  0015C8                     i2l335:
  3954  0015C8  0613               	decf	i2printf@prec,f,c
  3955  0015CA  2813               	incf	i2printf@prec,w,c
  3956  0015CC  A4D8               	btfss	status,2,c
  3957  0015CE  D7D8               	goto	i2l336
  3958  0015D0                     i2u96_40:
  3959  0015D0  C00D  FFF6         	movff	i2printf@f,tblptrl
  3960  0015D4  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  3961  0015D8  4A0D               	infsnz	i2printf@f,f,c
  3962  0015DA  2A0E               	incf	i2printf@f+1,f,c
  3963  0015DC                     	if	0	;tblptru may be non-zero
  3964  0015DC                     	endif
  3965  0015DC                     	if	0	;tblptru may be non-zero
  3966  0015DC                     	endif
  3967  0015DC  0008               	tblrd		*
  3968  0015DE  CFF5 F016          	movff	tablat,i2printf@c
  3969  0015E2  5016               	movf	i2printf@c,w,c
  3970  0015E4  B4D8               	btfsc	status,2,c
  3971  0015E6  0012               	return	
  3972  0015E8  D776               	goto	i2l321
  3973  0015EA                     __end_ofi2_printf:
  3974                           	opt stack 0
  3975                           pclatu	equ	0xFFB
  3976                           pclath	equ	0xFFA
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           prodh	equ	0xFF4
  3982                           prodl	equ	0xFF3
  3983                           intcon	equ	0xFF2
  3984                           postinc0	equ	0xFEE
  3985                           fsr0h	equ	0xFEA
  3986                           fsr0l	equ	0xFE9
  3987                           wreg	equ	0xFE8
  3988                           postdec1	equ	0xFE5
  3989                           fsr1h	equ	0xFE2
  3990                           fsr1l	equ	0xFE1
  3991                           postinc2	equ	0xFDE
  3992                           postdec2	equ	0xFDD
  3993                           fsr2h	equ	0xFDA
  3994                           fsr2l	equ	0xFD9
  3995                           status	equ	0xFD8
  3996                           
  3997 ;; *************** function i2_putch *****************
  3998 ;; Defined at:
  3999 ;;		line 24 in file "lcd.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  data            1    wreg     unsigned char 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  data            1    2[COMRAM] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;Total ram usage:        1 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    1
  4020 ;; This function calls:
  4021 ;;		i2_lcdNibble
  4022 ;; This function is called by:
  4023 ;;		i2_printf
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text25
  4028  001D04                     __ptext25:
  4029                           	opt stack 0
  4030  001D04                     i2_putch:
  4031                           	opt stack 23
  4032                           
  4033                           ;incstack = 0
  4034                           ;i2putch@data stored from wreg
  4035  001D04  6E03               	movwf	i2putch@data,c
  4036                           
  4037                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  4038  001D06  848C               	bsf	3980,2,c	;volatile
  4039                           
  4040                           ;lcd.c: 33: lcdNibble(data);
  4041  001D08  5003               	movf	i2putch@data,w,c
  4042  001D0A  EC34  F00B         	call	i2_lcdNibble
  4043                           
  4044                           ;lcd.c: 34: _delay((unsigned long)((100)*(32000000/4000000.0)));
  4045  001D0E  0EA0               	movlw	160
  4046  001D10                     i2u160_47:
  4047  001D10  D000               	nop2	
  4048  001D12  2EE8               	decfsz	wreg,f,c
  4049  001D14  D7FD               	bra	i2u160_47
  4050  001D16  0012               	return		;funcret
  4051  001D18                     __end_ofi2_putch:
  4052                           	opt stack 0
  4053                           pclatu	equ	0xFFB
  4054                           pclath	equ	0xFFA
  4055                           tblptru	equ	0xFF8
  4056                           tblptrh	equ	0xFF7
  4057                           tblptrl	equ	0xFF6
  4058                           tablat	equ	0xFF5
  4059                           prodh	equ	0xFF4
  4060                           prodl	equ	0xFF3
  4061                           intcon	equ	0xFF2
  4062                           postinc0	equ	0xFEE
  4063                           fsr0h	equ	0xFEA
  4064                           fsr0l	equ	0xFE9
  4065                           wreg	equ	0xFE8
  4066                           postdec1	equ	0xFE5
  4067                           fsr1h	equ	0xFE2
  4068                           fsr1l	equ	0xFE1
  4069                           postinc2	equ	0xFDE
  4070                           postdec2	equ	0xFDD
  4071                           fsr2h	equ	0xFDA
  4072                           fsr2l	equ	0xFD9
  4073                           status	equ	0xFD8
  4074                           
  4075 ;; *************** function i2___lwmod *****************
  4076 ;; Defined at:
  4077 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwmod.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  dividend        2    7[COMRAM] unsigned int 
  4080 ;;  divisor         2    9[COMRAM] unsigned int 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  __lwmod         1   11[COMRAM] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  2    7[COMRAM] unsigned int 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4092 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;Total ram usage:        5 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		i2_printf
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text26
  4106  001BFC                     __ptext26:
  4107                           	opt stack 0
  4108  001BFC                     i2___lwmod:
  4109                           	opt stack 24
  4110                           
  4111                           ;incstack = 0
  4112  001BFC  500A               	movf	i2___lwmod@divisor,w,c
  4113  001BFE  100B               	iorwf	i2___lwmod@divisor+1,w,c
  4114  001C00  B4D8               	btfsc	status,2,c
  4115  001C02  D018               	goto	i2l758
  4116  001C04  0E01               	movlw	1
  4117  001C06  6E0C               	movwf	i2___lwmod@counter,c
  4118  001C08  D004               	goto	i2l753
  4119  001C0A  90D8               	bcf	status,0,c
  4120  001C0C  360A               	rlcf	i2___lwmod@divisor,f,c
  4121  001C0E  360B               	rlcf	i2___lwmod@divisor+1,f,c
  4122  001C10  2A0C               	incf	i2___lwmod@counter,f,c
  4123  001C12                     i2l753:
  4124  001C12  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  4125  001C14  D7FA               	goto	i2l754
  4126  001C16                     i2u80_40:
  4127  001C16  500A               	movf	i2___lwmod@divisor,w,c
  4128  001C18  5C08               	subwf	i2___lwmod@dividend,w,c
  4129  001C1A  500B               	movf	i2___lwmod@divisor+1,w,c
  4130  001C1C  5809               	subwfb	i2___lwmod@dividend+1,w,c
  4131  001C1E  A0D8               	btfss	status,0,c
  4132  001C20  D004               	goto	i2l757
  4133  001C22  500A               	movf	i2___lwmod@divisor,w,c
  4134  001C24  5E08               	subwf	i2___lwmod@dividend,f,c
  4135  001C26  500B               	movf	i2___lwmod@divisor+1,w,c
  4136  001C28  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  4137  001C2A                     i2l757:
  4138  001C2A  90D8               	bcf	status,0,c
  4139  001C2C  320B               	rrcf	i2___lwmod@divisor+1,f,c
  4140  001C2E  320A               	rrcf	i2___lwmod@divisor,f,c
  4141  001C30  2E0C               	decfsz	i2___lwmod@counter,f,c
  4142  001C32  D7F1               	goto	i2u80_40
  4143  001C34                     i2l758:
  4144  001C34  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  4145  001C38  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  4146  001C3C  0012               	return		;funcret
  4147  001C3E                     __end_ofi2___lwmod:
  4148                           	opt stack 0
  4149                           pclatu	equ	0xFFB
  4150                           pclath	equ	0xFFA
  4151                           tblptru	equ	0xFF8
  4152                           tblptrh	equ	0xFF7
  4153                           tblptrl	equ	0xFF6
  4154                           tablat	equ	0xFF5
  4155                           prodh	equ	0xFF4
  4156                           prodl	equ	0xFF3
  4157                           intcon	equ	0xFF2
  4158                           postinc0	equ	0xFEE
  4159                           fsr0h	equ	0xFEA
  4160                           fsr0l	equ	0xFE9
  4161                           wreg	equ	0xFE8
  4162                           postdec1	equ	0xFE5
  4163                           fsr1h	equ	0xFE2
  4164                           fsr1l	equ	0xFE1
  4165                           postinc2	equ	0xFDE
  4166                           postdec2	equ	0xFDD
  4167                           fsr2h	equ	0xFDA
  4168                           fsr2l	equ	0xFD9
  4169                           status	equ	0xFD8
  4170                           
  4171 ;; *************** function i2___lwdiv *****************
  4172 ;; Defined at:
  4173 ;;		line 8 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  dividend        2    0[COMRAM] unsigned int 
  4176 ;;  divisor         2    2[COMRAM] unsigned int 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  4179 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  2    0[COMRAM] unsigned int 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;Total ram usage:        7 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		i2_printf
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text27
  4203  001AD0                     __ptext27:
  4204                           	opt stack 0
  4205  001AD0                     i2___lwdiv:
  4206                           	opt stack 24
  4207                           
  4208                           ;incstack = 0
  4209  001AD0  0E00               	movlw	0
  4210  001AD2  6E06               	movwf	i2___lwdiv@quotient+1,c
  4211  001AD4  0E00               	movlw	0
  4212  001AD6  6E05               	movwf	i2___lwdiv@quotient,c
  4213  001AD8  5003               	movf	i2___lwdiv@divisor,w,c
  4214  001ADA  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  4215  001ADC  B4D8               	btfsc	status,2,c
  4216  001ADE  D01C               	goto	i2l748
  4217  001AE0  0E01               	movlw	1
  4218  001AE2  6E07               	movwf	i2___lwdiv@counter,c
  4219  001AE4  D004               	goto	i2l743
  4220  001AE6  90D8               	bcf	status,0,c
  4221  001AE8  3603               	rlcf	i2___lwdiv@divisor,f,c
  4222  001AEA  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  4223  001AEC  2A07               	incf	i2___lwdiv@counter,f,c
  4224  001AEE                     i2l743:
  4225  001AEE  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  4226  001AF0  D7FA               	goto	i2l744
  4227  001AF2                     i2u77_40:
  4228  001AF2  90D8               	bcf	status,0,c
  4229  001AF4  3605               	rlcf	i2___lwdiv@quotient,f,c
  4230  001AF6  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  4231  001AF8  5003               	movf	i2___lwdiv@divisor,w,c
  4232  001AFA  5C01               	subwf	i2___lwdiv@dividend,w,c
  4233  001AFC  5004               	movf	i2___lwdiv@divisor+1,w,c
  4234  001AFE  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  4235  001B00  A0D8               	btfss	status,0,c
  4236  001B02  D005               	goto	i2l747
  4237  001B04  5003               	movf	i2___lwdiv@divisor,w,c
  4238  001B06  5E01               	subwf	i2___lwdiv@dividend,f,c
  4239  001B08  5004               	movf	i2___lwdiv@divisor+1,w,c
  4240  001B0A  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  4241  001B0C  8005               	bsf	i2___lwdiv@quotient,0,c
  4242  001B0E                     i2l747:
  4243  001B0E  90D8               	bcf	status,0,c
  4244  001B10  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  4245  001B12  3203               	rrcf	i2___lwdiv@divisor,f,c
  4246  001B14  2E07               	decfsz	i2___lwdiv@counter,f,c
  4247  001B16  D7ED               	goto	i2u77_40
  4248  001B18                     i2l748:
  4249  001B18  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  4250  001B1C  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  4251  001B20  0012               	return		;funcret
  4252  001B22                     __end_ofi2___lwdiv:
  4253                           	opt stack 0
  4254                           pclatu	equ	0xFFB
  4255                           pclath	equ	0xFFA
  4256                           tblptru	equ	0xFF8
  4257                           tblptrh	equ	0xFF7
  4258                           tblptrl	equ	0xFF6
  4259                           tablat	equ	0xFF5
  4260                           prodh	equ	0xFF4
  4261                           prodl	equ	0xFF3
  4262                           intcon	equ	0xFF2
  4263                           postinc0	equ	0xFEE
  4264                           fsr0h	equ	0xFEA
  4265                           fsr0l	equ	0xFE9
  4266                           wreg	equ	0xFE8
  4267                           postdec1	equ	0xFE5
  4268                           fsr1h	equ	0xFE2
  4269                           fsr1l	equ	0xFE1
  4270                           postinc2	equ	0xFDE
  4271                           postdec2	equ	0xFDD
  4272                           fsr2h	equ	0xFDA
  4273                           fsr2l	equ	0xFD9
  4274                           status	equ	0xFD8
  4275                           
  4276 ;; *************** function i2_initLCD *****************
  4277 ;; Defined at:
  4278 ;;		line 60 in file "lcd.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;Total ram usage:        1 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    2
  4299 ;; This function calls:
  4300 ;;		i2_lcdInst
  4301 ;; This function is called by:
  4302 ;;		_interruptHandler
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text28
  4307  001B6E                     __ptext28:
  4308                           	opt stack 0
  4309  001B6E                     i2_initLCD:
  4310                           	opt stack 23
  4311                           
  4312                           ;lcd.c: 68: _delay((unsigned long)((15)*(32000000/4000.0)));
  4313                           
  4314                           ;incstack = 0
  4315  001B6E  0E9C               	movlw	156
  4316  001B70  6E04               	movwf	??i2_initLCD& (0+255),c
  4317  001B72  0ED7               	movlw	215
  4318  001B74                     i2u161_47:
  4319  001B74  2EE8               	decfsz	wreg,f,c
  4320  001B76  D7FE               	bra	i2u161_47
  4321  001B78  2E04               	decfsz	??i2_initLCD& (0+255),f,c
  4322  001B7A  D7FC               	bra	i2u161_47
  4323  001B7C  F000               	nop	
  4324                           
  4325                           ;lcd.c: 69: lcdInst(0b00110011);
  4326  001B7E  0E33               	movlw	51
  4327  001B80  EC8C  F00E         	call	i2_lcdInst
  4328                           
  4329                           ;lcd.c: 70: lcdInst(0b00110010);
  4330  001B84  0E32               	movlw	50
  4331  001B86  EC8C  F00E         	call	i2_lcdInst
  4332                           
  4333                           ;lcd.c: 71: lcdInst(0b00101000);
  4334  001B8A  0E28               	movlw	40
  4335  001B8C  EC8C  F00E         	call	i2_lcdInst
  4336                           
  4337                           ;lcd.c: 72: lcdInst(0b00001111);
  4338  001B90  0E0F               	movlw	15
  4339  001B92  EC8C  F00E         	call	i2_lcdInst
  4340                           
  4341                           ;lcd.c: 73: lcdInst(0b00000110);
  4342  001B96  0E06               	movlw	6
  4343  001B98  EC8C  F00E         	call	i2_lcdInst
  4344                           
  4345                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(32000000/4000.0)));;
  4346  001B9C  0E01               	movlw	1
  4347  001B9E  EC8C  F00E         	call	i2_lcdInst
  4348  001BA2  0E9C               	movlw	156
  4349  001BA4  6E04               	movwf	??i2_initLCD& (0+255),c
  4350  001BA6  0ED7               	movlw	215
  4351  001BA8                     i2u162_47:
  4352  001BA8  2EE8               	decfsz	wreg,f,c
  4353  001BAA  D7FE               	bra	i2u162_47
  4354  001BAC  2E04               	decfsz	??i2_initLCD& (0+255),f,c
  4355  001BAE  D7FC               	bra	i2u162_47
  4356  001BB0  F000               	nop	
  4357                           
  4358                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
  4359  001BB2  0E0F               	movlw	15
  4360  001BB4  EC8C  F00E         	call	i2_lcdInst
  4361  001BB8  0012               	return		;funcret
  4362  001BBA                     __end_ofi2_initLCD:
  4363                           	opt stack 0
  4364                           pclatu	equ	0xFFB
  4365                           pclath	equ	0xFFA
  4366                           tblptru	equ	0xFF8
  4367                           tblptrh	equ	0xFF7
  4368                           tblptrl	equ	0xFF6
  4369                           tablat	equ	0xFF5
  4370                           prodh	equ	0xFF4
  4371                           prodl	equ	0xFF3
  4372                           intcon	equ	0xFF2
  4373                           postinc0	equ	0xFEE
  4374                           fsr0h	equ	0xFEA
  4375                           fsr0l	equ	0xFE9
  4376                           wreg	equ	0xFE8
  4377                           postdec1	equ	0xFE5
  4378                           fsr1h	equ	0xFE2
  4379                           fsr1l	equ	0xFE1
  4380                           postinc2	equ	0xFDE
  4381                           postdec2	equ	0xFDD
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386 ;; *************** function i2_lcdInst *****************
  4387 ;; Defined at:
  4388 ;;		line 11 in file "lcd.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  data            1    wreg     unsigned char 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  data            1    2[COMRAM] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;Total ram usage:        1 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    1
  4409 ;; This function calls:
  4410 ;;		i2_lcdNibble
  4411 ;; This function is called by:
  4412 ;;		_interruptHandler
  4413 ;;		i2_initLCD
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text29
  4418  001D18                     __ptext29:
  4419                           	opt stack 0
  4420  001D18                     i2_lcdInst:
  4421                           	opt stack 24
  4422                           
  4423                           ;incstack = 0
  4424                           ;i2lcdInst@data stored from wreg
  4425  001D18  6E03               	movwf	i2lcdInst@data,c
  4426                           
  4427                           ;lcd.c: 19: LATDbits.LATD2 = 0;
  4428  001D1A  948C               	bcf	3980,2,c	;volatile
  4429                           
  4430                           ;lcd.c: 20: lcdNibble(data);
  4431  001D1C  5003               	movf	i2lcdInst@data,w,c
  4432  001D1E  EC34  F00B         	call	i2_lcdNibble
  4433                           
  4434                           ;lcd.c: 21: _delay((unsigned long)((100)*(32000000/4000000.0)));
  4435  001D22  0EA0               	movlw	160
  4436  001D24                     i2u163_47:
  4437  001D24  D000               	nop2	
  4438  001D26  2EE8               	decfsz	wreg,f,c
  4439  001D28  D7FD               	bra	i2u163_47
  4440  001D2A  0012               	return		;funcret
  4441  001D2C                     __end_ofi2_lcdInst:
  4442                           	opt stack 0
  4443                           pclatu	equ	0xFFB
  4444                           pclath	equ	0xFFA
  4445                           tblptru	equ	0xFF8
  4446                           tblptrh	equ	0xFF7
  4447                           tblptrl	equ	0xFF6
  4448                           tablat	equ	0xFF5
  4449                           prodh	equ	0xFF4
  4450                           prodl	equ	0xFF3
  4451                           intcon	equ	0xFF2
  4452                           postinc0	equ	0xFEE
  4453                           fsr0h	equ	0xFEA
  4454                           fsr0l	equ	0xFE9
  4455                           wreg	equ	0xFE8
  4456                           postdec1	equ	0xFE5
  4457                           fsr1h	equ	0xFE2
  4458                           fsr1l	equ	0xFE1
  4459                           postinc2	equ	0xFDE
  4460                           postdec2	equ	0xFDD
  4461                           fsr2h	equ	0xFDA
  4462                           fsr2l	equ	0xFD9
  4463                           status	equ	0xFD8
  4464                           
  4465 ;; *************** function i2_lcdNibble *****************
  4466 ;; Defined at:
  4467 ;;		line 37 in file "lcd.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  data            1    wreg     unsigned char 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  data            1    1[COMRAM] unsigned char 
  4472 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      void 
  4475 ;; Registers used:
  4476 ;;		wreg, status,2, status,0
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;Total ram usage:        2 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		i2_lcdInst
  4492 ;;		i2_putch
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text30
  4497  001668                     __ptext30:
  4498                           	opt stack 0
  4499  001668                     i2_lcdNibble:
  4500                           	opt stack 23
  4501                           
  4502                           ;incstack = 0
  4503                           ;i2lcdNibble@data stored from wreg
  4504  001668  6E02               	movwf	i2lcdNibble@data,c
  4505                           
  4506                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
  4507  00166A  5002               	movf	i2lcdNibble@data,w,c
  4508  00166C  0BF0               	andlw	240
  4509  00166E  6E01               	movwf	i2lcdNibble@temp,c
  4510                           
  4511                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
  4512  001670  508C               	movf	3980,w,c	;volatile
  4513  001672  0B0F               	andlw	15
  4514  001674  6E8C               	movwf	3980,c	;volatile
  4515                           
  4516                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
  4517  001676  5001               	movf	i2lcdNibble@temp,w,c
  4518  001678  108C               	iorwf	3980,w,c	;volatile
  4519  00167A  6E8C               	movwf	3980,c	;volatile
  4520                           
  4521                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  4522  00167C  0E00               	movlw	0
  4523  00167E  BEF2               	btfsc	intcon,7,c	;volatile
  4524  001680  0E01               	movlw	1
  4525  001682  6E49               	movwf	_LCDinterruptState,c
  4526  001684  9EF2               	bcf	intcon,7,c	;volatile
  4527  001686  868C               	bsf	3980,3,c	;volatile
  4528  001688  0E42               	movlw	66
  4529  00168A                     i2u164_47:
  4530  00168A  2EE8               	decfsz	wreg,f,c
  4531  00168C  D7FE               	bra	i2u164_47
  4532  00168E  D000               	nop2	
  4533  001690  968C               	bcf	3980,3,c	;volatile
  4534  001692  0EA0               	movlw	160
  4535  001694                     i2u165_47:
  4536  001694  D000               	nop2	
  4537  001696  2EE8               	decfsz	wreg,f,c
  4538  001698  D7FD               	bra	i2u165_47
  4539  00169A  B049               	btfsc	_LCDinterruptState,0,c
  4540  00169C  D002               	bra	i2u66_45
  4541  00169E  9EF2               	bcf	intcon,7,c	;volatile
  4542  0016A0  D001               	bra	i2u66_46
  4543  0016A2                     i2u66_45:
  4544  0016A2  8EF2               	bsf	intcon,7,c	;volatile
  4545  0016A4                     i2u66_46:
  4546                           
  4547                           ;lcd.c: 52: data = (unsigned char) (data << 4);
  4548  0016A4  3802               	swapf	i2lcdNibble@data,w,c
  4549  0016A6  0BF0               	andlw	240
  4550  0016A8  6E02               	movwf	i2lcdNibble@data,c
  4551                           
  4552                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
  4553  0016AA  5002               	movf	i2lcdNibble@data,w,c
  4554  0016AC  0BF0               	andlw	240
  4555  0016AE  6E01               	movwf	i2lcdNibble@temp,c
  4556                           
  4557                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
  4558  0016B0  508C               	movf	3980,w,c	;volatile
  4559  0016B2  0B0F               	andlw	15
  4560  0016B4  6E8C               	movwf	3980,c	;volatile
  4561                           
  4562                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
  4563  0016B6  5001               	movf	i2lcdNibble@temp,w,c
  4564  0016B8  108C               	iorwf	3980,w,c	;volatile
  4565  0016BA  6E8C               	movwf	3980,c	;volatile
  4566                           
  4567                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  4568  0016BC  0E00               	movlw	0
  4569  0016BE  BEF2               	btfsc	intcon,7,c	;volatile
  4570  0016C0  0E01               	movlw	1
  4571  0016C2  6E49               	movwf	_LCDinterruptState,c
  4572  0016C4  9EF2               	bcf	intcon,7,c	;volatile
  4573  0016C6  868C               	bsf	3980,3,c	;volatile
  4574  0016C8  0E42               	movlw	66
  4575  0016CA                     i2u166_47:
  4576  0016CA  2EE8               	decfsz	wreg,f,c
  4577  0016CC  D7FE               	bra	i2u166_47
  4578  0016CE  D000               	nop2	
  4579  0016D0  968C               	bcf	3980,3,c	;volatile
  4580  0016D2  0EA0               	movlw	160
  4581  0016D4                     i2u167_47:
  4582  0016D4  D000               	nop2	
  4583  0016D6  2EE8               	decfsz	wreg,f,c
  4584  0016D8  D7FD               	bra	i2u167_47
  4585  0016DA  B049               	btfsc	_LCDinterruptState,0,c
  4586  0016DC  D002               	bra	i2u67_45
  4587  0016DE  9EF2               	bcf	intcon,7,c	;volatile
  4588  0016E0  D001               	bra	i2u67_46
  4589  0016E2                     i2u67_45:
  4590  0016E2  8EF2               	bsf	intcon,7,c	;volatile
  4591  0016E4                     i2u67_46:
  4592  0016E4  0012               	return		;funcret
  4593  0016E6                     __end_ofi2_lcdNibble:
  4594                           	opt stack 0
  4595                           pclatu	equ	0xFFB
  4596                           pclath	equ	0xFFA
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           postinc0	equ	0xFEE
  4605                           fsr0h	equ	0xFEA
  4606                           fsr0l	equ	0xFE9
  4607                           wreg	equ	0xFE8
  4608                           postdec1	equ	0xFE5
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           postinc2	equ	0xFDE
  4612                           postdec2	equ	0xFDD
  4613                           fsr2h	equ	0xFDA
  4614                           fsr2l	equ	0xFD9
  4615                           status	equ	0xFD8
  4616                           pclatu	equ	0xFFB
  4617                           pclath	equ	0xFFA
  4618                           tblptru	equ	0xFF8
  4619                           tblptrh	equ	0xFF7
  4620                           tblptrl	equ	0xFF6
  4621                           tablat	equ	0xFF5
  4622                           prodh	equ	0xFF4
  4623                           prodl	equ	0xFF3
  4624                           intcon	equ	0xFF2
  4625                           postinc0	equ	0xFEE
  4626                           fsr0h	equ	0xFEA
  4627                           fsr0l	equ	0xFE9
  4628                           wreg	equ	0xFE8
  4629                           postdec1	equ	0xFE5
  4630                           fsr1h	equ	0xFE2
  4631                           fsr1l	equ	0xFE1
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638                           	psect	rparam
  4639  0000                     pclatu	equ	0xFFB
  4640                           pclath	equ	0xFFA
  4641                           tblptru	equ	0xFF8
  4642                           tblptrh	equ	0xFF7
  4643                           tblptrl	equ	0xFF6
  4644                           tablat	equ	0xFF5
  4645                           prodh	equ	0xFF4
  4646                           prodl	equ	0xFF3
  4647                           intcon	equ	0xFF2
  4648                           postinc0	equ	0xFEE
  4649                           fsr0h	equ	0xFEA
  4650                           fsr0l	equ	0xFE9
  4651                           wreg	equ	0xFE8
  4652                           postdec1	equ	0xFE5
  4653                           fsr1h	equ	0xFE2
  4654                           fsr1l	equ	0xFE1
  4655                           postinc2	equ	0xFDE
  4656                           postdec2	equ	0xFDD
  4657                           fsr2h	equ	0xFDA
  4658                           fsr2l	equ	0xFD9
  4659                           status	equ	0xFD8
  4660                           
  4661                           	psect	temp
  4662  000056                     btemp:
  4663                           	opt stack 0
  4664  000056                     	ds	1
  4665  0000                     int$flags	set	btemp
  4666  0000                     wtemp6	set	btemp+1
  4667                           pclatu	equ	0xFFB
  4668                           pclath	equ	0xFFA
  4669                           tblptru	equ	0xFF8
  4670                           tblptrh	equ	0xFF7
  4671                           tblptrl	equ	0xFF6
  4672                           tablat	equ	0xFF5
  4673                           prodh	equ	0xFF4
  4674                           prodl	equ	0xFF3
  4675                           intcon	equ	0xFF2
  4676                           postinc0	equ	0xFEE
  4677                           fsr0h	equ	0xFEA
  4678                           fsr0l	equ	0xFE9
  4679                           wreg	equ	0xFE8
  4680                           postdec1	equ	0xFE5
  4681                           fsr1h	equ	0xFE2
  4682                           fsr1l	equ	0xFE1
  4683                           postinc2	equ	0xFDE
  4684                           postdec2	equ	0xFDD
  4685                           fsr2h	equ	0xFDA
  4686                           fsr2l	equ	0xFD9
  4687                           status	equ	0xFD8


Data Sizes:
    Strings     85
    Constant    16
    Data        12
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55      85
    BANK0           128     21      21
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_15(CODE[20]), STR_14(CODE[20]), STR_13(CODE[20]), STR_12(CODE[20]), 
		 -> STR_11(CODE[20]), STR_10(CODE[20]), STR_9(CODE[20]), STR_8(CODE[20]), 
		 -> STR_7(CODE[12]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[14]), 
		 -> STR_3(CODE[15]), STR_2(CODE[20]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_Bolt_dispense
    _main->_Bolt_remain
    _main->_Nut_dispense
    _main->_Nut_remain
    _main->_Spacer_dispense
    _main->_Spacer_remain
    _main->_Washer_dispense
    _main->_Washer_remain
    _Washer_remain->_printf
    _Washer_dispense->_printf
    _Spacer_remain->_printf
    _Spacer_dispense->_printf
    _Nut_remain->_printf
    _Nut_dispense->_printf
    _I2C_init->_I2C_Master_Init
    _Bolt_remain->_printf
    _Bolt_dispense->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_sendData->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_initLCD->i2_lcdInst
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    _main->_Bolt_dispense
    _main->_Bolt_remain
    _main->_Nut_dispense
    _main->_Nut_remain
    _main->_Spacer_dispense
    _main->_Spacer_remain
    _main->_Washer_dispense
    _main->_Washer_remain
    _Washer_remain->_printf
    _Washer_dispense->_printf
    _Spacer_remain->_printf
    _Spacer_dispense->_printf
    _Nut_remain->_printf
    _Nut_dispense->_printf
    _Bolt_remain->_printf
    _Bolt_dispense->_printf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   30254
                                             19 BANK0      2     2      0
                      _Bolt_dispense
                        _Bolt_remain
                           _I2C_init
                       _Nut_dispense
                         _Nut_remain
                    _Spacer_dispense
                      _Spacer_remain
                    _Washer_dispense
                      _Washer_remain
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Washer_remain                                        3     1      2    3369
                                             54 COMRAM     1     1      0
                                             17 BANK0      2     0      2
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Washer_dispense                                      3     1      2    3369
                                             54 COMRAM     1     1      0
                                             17 BANK0      2     0      2
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Spacer_remain                                        3     1      2    3369
                                             54 COMRAM     1     1      0
                                             17 BANK0      2     0      2
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Spacer_dispense                                      3     1      2    3369
                                             54 COMRAM     1     1      0
                                             17 BANK0      2     0      2
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Nut_remain                                           3     1      2    3369
                                             54 COMRAM     1     1      0
                                             17 BANK0      2     0      2
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Nut_dispense                                         3     1      2    3369
                                             54 COMRAM     1     1      0
                                             17 BANK0      2     0      2
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0     326
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      4     0      4      76
                                             41 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _Bolt_remain                                          3     1      2    3369
                                             54 COMRAM     1     1      0
                                             17 BANK0      2     0      2
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Bolt_dispense                                        3     1      2    3369
                                             54 COMRAM     1     1      0
                                             17 BANK0      2     0      2
                       _I2C_sendData
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    17     10    2706
                                             53 COMRAM     1     1      0
                                              0 BANK0     17     7     10
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     135
                                             43 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             48 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                             41 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                             44 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     135
                                             43 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0     113
                                             41 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_sendData                                         1     1      0     272
                                             44 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     250
                                             42 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                             41 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interruptHandler                                    19    19      0    1346
                                             22 COMRAM    19    19      0
                          i2_initLCD
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (6) i2_printf                                            19    17      2    1076
                                             12 COMRAM    10     8      2
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (7) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) i2_initLCD                                            1     1      0     135
                                              3 COMRAM     1     1      0
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (6) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (8) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bolt_dispense
     _I2C_sendData
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
   _Bolt_remain
     _I2C_sendData
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
   _I2C_init
     _I2C_Master_Init
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _Nut_dispense
     _I2C_sendData
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
   _Nut_remain
     _I2C_sendData
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
   _Spacer_dispense
     _I2C_sendData
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
   _Spacer_remain
     _I2C_sendData
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
   _Washer_dispense
     _I2C_sendData
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
   _Washer_remain
     _I2C_sendData
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _lcdNibble
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _lcdNibble

 _interruptHandler (ROOT)
   i2_initLCD
     i2_lcdInst
       i2_lcdNibble
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2_putch
       i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     15      15       5       16.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      55       1       67.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6A      34        0.0%
DATA                 0      0      6A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr  3 01:01:58 2018

                __CFG_CPD$ON 000000           i2___lwdiv@dividend 0001                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          l230 1850                          l223 1938  
                        l231 1886                          l216 1A18                          l224 196E  
                        l321 13AE                          l217 1A4E                          l330 1412  
                        l322 13BE                          l251 18BC                          l244 19A4  
                        l252 18F2                          l245 19DA                          l237 1768  
                        l334 1454                          l238 179E                          l335 14A6  
                        l336 145A                          l328 13EA                          l265 16EC  
                        l258 17D4                          l266 1722                          l259 180A  
                        l188 135A                          l743 1A9C                          l744 1A94  
                        l753 1BD0                          l754 1BC8                          l747 1ABC  
                        l748 1AC6                          l757 1BE8                          l758 1BF2  
               __CFG_CPB$OFF 000000                          _max 004A                          wreg 000FE8  
               __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000                         l2241 1416  
                       _ADON 007E10                         STR_1 1011                         STR_2 1011  
                       STR_3 1049                         STR_4 1058                         STR_5 1025  
                       STR_6 1038                         STR_7 102C                         STR_8 1011  
                       STR_9 1011                         u1100 1AA0                         u1130 1BD4  
                       u1210 14B0                         u1075 1624                         u1076 1626  
                       u1085 1664                         _LATA 000F89                         u1086 1666  
                       u1190 1442                         _LATB 000F8A                         u1407 1778  
                       _LATC 000F8B                         _LATD 000F8C                         u1417 17E4  
                       _LATE 000F8D                         u1507 1CFC                         u1427 1860  
                       u1517 160C                         u1437 18CC                         u1527 1616  
                       u1447 1948                         u1537 164C                         u1457 19B4  
                       u1377 1316                         u1547 1656                         u1467 1A28  
                       u1387 1396                         u1477 1CE8                         u1397 16FC  
                       u1487 1B28                         u1497 1B5C                         _RBIE 007F93  
                       _RBIF 007F90                         _main 1250     __end_of_interruptHandler 1250  
                       fsr0h 000FEA                         fsr1h 000FE2           i2___lwdiv@quotient 0005  
                       fsr2h 000FDA                         fsr0l 000FE9                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 0056             __end_of_I2C_init 1CA2  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
              __CFG_IESO$OFF 000000              __end_ofi2_putch 1D18                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                  i2_lcdNibble 1668          __end_of_Bolt_remain 1A12  
           __end_of_LCD_LEFT 100C             ?_I2C_Master_Init 002A             ?_I2C_Master_Wait 0001  
           ?_I2C_Master_Stop 0001                        ?_main 0001                        STR_10 1011  
                      STR_11 1011                        STR_12 1011                        STR_13 1011  
                      STR_14 1011                        STR_15 1011              __end_of___lwdiv 1AD0  
                      i2l200 11DE              __end_of___lwmod 1BFC                        i2l321 14D6  
                      i2l330 1538                        i2l322 14E6                        i2l334 157A  
                      i2l335 15C8                        i2l336 1580                        i2l328 1510  
                      i2l197 1136                        i2l198 116E                        i2l199 11A6  
                      i2l743 1AEE                        i2l744 1AE6                        i2l753 1C12  
                      i2l754 1C0A                        i2l747 1B0E                        i2l748 1B18  
                      i2l757 1C2A                        i2l758 1C34                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_lcdInst 1D04                _N_spacingTime 003C               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000      __end_of_Washer_dispense 17CE                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_initLCD 1B6E  
             __CFG_EBTRB$OFF 000000              __end_of_dpowers 100B                        _putch 1CDC  
                      pclath 000FFA                        tablat 000FF5            _LCDinterruptState 0049  
                      status 000FD8                        wtemp6 0057               __CFG_PBADEN$ON 000000  
      __size_of_I2C_sendData 0022             __end_ofi2_printf 15EA           __size_ofi2___lwdiv 0052  
         __size_ofi2___lwmod 0042              __initialization 1C3E           __size_ofi2_lcdInst 0014  
               __end_of_main 13A2                   i2printf@ap 0010           __size_ofi2_initLCD 004C  
   __size_of_Spacer_dispense 0074            __end_of_LCD_RIGHT 100D                       ??_main 0093  
              __activetblptr 000002            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 002B  
      __end_of_Spacer_remain 1842           ??_I2C_Master_Start 002B                       _ADCON0 000FC2  
                     _ADCON1 000FC1           ??_I2C_Master_Write 002D                       _ADRESH 000FC4  
                     _ADRESL 000FC3              i2lcdNibble@data 0002                       ?_putch 0001  
               _I2C_sendData 1CA2              Bolt_remain@time 0091              i2lcdNibble@temp 0001  
                     i2l2111 1204                       i2l1949 153C                    ??i2_putch 0003  
                     _SSPADD 000FC8                       _SSPBUF 000FC9                  _Bolt_remain 199E  
             __CFG_XINST$OFF 000000               __CFG_STVREN$ON 000000                    ??___lwdiv 002E  
                  ??___lwmod 0035                       clear_0 1C64                    ??_lcdInst 002C  
                     _printf 13A2                    ??_initLCD 002D                   _Nut_remain 18B6  
               __pdataCOMRAM 004A            __end_ofi2___lwdiv 1B22                 __mediumconst 0000  
          __end_ofi2___lwmod 1C3E                    ?_I2C_init 0001                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8             ?_Washer_dispense 0091  
          __end_ofi2_lcdInst 1D2C            __end_ofi2_initLCD 1BBA                   __accesstop 0080  
    __end_of__initialization 1C6A                ___rparam_used 000001           i2___lwmod@dividend 0008  
             __pcstackCOMRAM 0001           Bolt_dispense@B_max 0091        __end_of_Bolt_dispense 1A7E  
              __end_of_putch 1CF0        __end_of_Washer_remain 175A                  i2printf@val 0014  
              _B_spacingTime 003E           __size_of_lcdNibble 007E                  i2putch@data 0003  
                 ??_I2C_init 002E            ??_Spacer_dispense 0037                    ?i2_printf 000D  
                    ??_putch 002C            ?_interruptHandler 0001           ??_interruptHandler 0017  
          Washer_remain@time 0091                 ?i2_lcdNibble 0001         Spacer_dispense@S_max 0091  
                    ?_printf 0080                  ?_Nut_remain 0091                   ??i2_printf 000F  
                    i2u80_40 1C16                      i2u66_45 16A2                      i2u66_46 16A4  
                    i2u67_45 16E2                      i2u67_46 16E4                      i2u77_40 1AF2  
                    i2u94_40 1568                      i2u96_40 15D0                      i2u99_40 10C0  
                    i2u99_48 10C2         lcd@LCDinterruptState 0048                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7                      _B_count 0046  
                    _B_input 0054                      i2_putch 1D04                      _N_count 0044  
                    _N_input 0052            __end_of_lcdNibble 1668                      _S_count 0042  
                    _S_input 0050                      __Hparam 0000                      __Lparam 0000  
                    _W_count 0040                      _W_input 004E                      ___lwdiv 1A7E  
              ?_Nut_dispense 0091                      ___lwmod 1BBA                 __psmallconst 1000  
                    __pcinit 1C3E                      __ramtop 1000                      _lcdInst 1CF0  
                    __ptext0 1250                      __ptext1 16E6                      __ptext2 175A  
                    __ptext3 17CE                      __ptext4 1842                      __ptext5 18B6  
                    __ptext6 192A                      __ptext7 1C78                      __ptext8 1CC4  
                    __ptext9 199E              __size_of_printf 012A                      _initLCD 1B22  
                    _dpowers 1001                    _LCD_RIGHT 100C     __size_of_I2C_Master_Init 0018  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008                _S_spacingTime 003A  
             __pintcode_body 1068         end_of_initialization 1C6A        __end_of_LCD_SIZE_HORZ 100F  
      __end_of_LCD_SIZE_VERT 100E                __Lmediumconst 0000                      int_func 1068  
               ?_Bolt_remain 0091    __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A  
        __size_of_Nut_remain 0074                      printf@c 0090                      printf@f 0080  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE               ??_Nut_dispense 0037                    _PORTBbits 000F81  
                  _TRISBbits 000F93                    _TRISCbits 000F94            __size_of_I2C_init 002A  
          i2___lwdiv@divisor 0003                    i2___lwdiv 1AD0                    i2___lwmod 1BFC  
          i2___lwdiv@counter 0007            Nut_dispense@N_max 0091                    i2_lcdInst 1D18  
       Washer_dispense@W_max 0091                    i2_initLCD 1B6E       __size_of_Spacer_remain 0074  
            _Spacer_dispense 1842         __size_ofi2_lcdNibble 007E                __pidataCOMRAM 1D3E  
              i2lcdInst@data 0003               __end_of_printf 14CC                 i2printf@flag 0012  
               i2printf@prec 0013          start_initialization 1C3E                    i2printf@c 0016  
                  i2printf@f 000D                   ?i2___lwdiv 0001                   ?i2___lwmod 0008  
          __size_ofi2_printf 011E            ??_I2C_Master_Init 002E            ??_I2C_Master_Wait 002A  
                 ?i2_lcdInst 0001            ??_I2C_Master_Stop 002B             __CFG_OSC$INTIO67 000000  
   __size_of_Washer_dispense 0074                   ?i2_initLCD 0001     I2C_Master_Init@clockFreq 002A  
           __CFG_LPT1OSC$OFF 000000                     ??_printf 0036    __size_of_interruptHandler 1248  
               ??_Nut_remain 0037                  __pbssCOMRAM 0038                __pcstackBANK0 0080  
          i2___lwmod@divisor 000A            i2___lwmod@counter 000C                _Spacer_remain 17CE  
       __end_of_Nut_dispense 199E       __size_of_Bolt_dispense 006C                     ?i2_putch 0001  
     __size_of_Washer_remain 0074             _I2C_Master_Start 1D5C             _I2C_Master_Write 1D4A  
    __end_of_Spacer_dispense 18B6             ___lwdiv@dividend 002A           __end_of_Nut_remain 192A  
       __size_of_Bolt_remain 0074            __CFG_CCP2MX$PORTC 000000                    __pintcode 0008  
                  _lcdNibble 15EA                     ?___lwdiv 002A                     ?___lwmod 0031  
                   ?_lcdInst 0001                     ?_initLCD 0001                  __smallconst 1000  
                   _I2C_init 1C78               ?_Spacer_remain 0091             ___lwdiv@quotient 002F  
             Nut_remain@time 0091                _W_spacingTime 0038                ?_I2C_sendData 0001  
                ??i2___lwdiv 0005                  ??i2___lwmod 000C               __size_of_putch 0014  
                   _LCD_LEFT 100B                  ??i2_lcdInst 0003                     _LATCbits 000F8B  
                   _LATDbits 000F8C                  ??i2_initLCD 0004                     i2u100_40 10D2  
                   i2u101_40 10E4                     i2u100_48 10D4                     i2u102_40 10F6  
                   i2u101_48 10E6                     i2u102_48 10F8                     i2u160_47 1D10  
                   i2u161_47 1B74                     i2u162_47 1BA8                     i2u163_47 1D24  
                   i2u155_47 112A                     i2u164_47 168A                     i2u156_47 1162  
                   i2u165_47 1694                     i2u157_47 119E                     i2u166_47 16CA  
                   i2u158_47 11D2                     i2u167_47 16D4                     i2u159_47 11FA  
           __CFG_WDTPS$32768 000000                   ?_lcdNibble 0001            ??_Washer_dispense 0037  
              _Bolt_dispense 1A12                _Washer_remain 16E6                   _ADCON0bits 000FC2  
                 _ADCON2bits 000FC0                lcdNibble@data 002B                   printf@flag 008C  
              lcdNibble@temp 002A                   printf@prec 008D                     i2_printf 14CC  
             ??_I2C_sendData 002D               _LCD_HORZ_LIMIT 1010                    copy_data0 1C52  
           __size_ofi2_putch 0014             ?_Spacer_dispense 0091                     __Hrparam 0000  
      I2C_sendData@char_data 002D                     __Lrparam 0000           __CFG_BOREN$SBORDIS 000000  
             ?_Bolt_dispense 0091            Spacer_remain@time 0091               ?_Washer_remain 0091  
           __size_of___lwdiv 0052             __size_of___lwmod 0042             _interruptHandler 0008  
           __size_of_lcdInst 0014              _I2C_Master_Init 1CC4             __size_of_initLCD 004C  
            _I2C_Master_Wait 1D2C        __size_of_Nut_dispense 0074              ??_Spacer_remain 0037  
            _I2C_Master_Stop 1D54       __end_of_LCD_HORZ_LIMIT 1011              ___lwdiv@divisor 002C  
            ___lwdiv@counter 002E                     __ptext10 1A12                     __ptext11 13A2  
                   __ptext20 1D54                     __ptext12 1CDC                     __ptext21 1D5C  
                   __ptext13 1BBA                     __ptext30 1668                     __ptext22 1D2C  
                   __ptext14 1A7E                     __ptext15 1B22                     __ptext24 14CC  
                   __ptext16 1CF0                     __ptext25 1D04                     __ptext17 15EA  
                   __ptext26 1BFC                     __ptext18 1CA2                     __ptext27 1AD0  
                   __ptext19 1D4A                     __ptext28 1B6E                     __ptext29 1D18  
             _LCD_VERT_LIMIT 100F                __size_of_main 0152                ??i2_lcdNibble 0001  
                ??_lcdNibble 002A                     int$flags 0056                 _Nut_dispense 192A  
                  printf@val 008E  I2C_Master_Write@byteToWrite 002B                    putch@data 002C  
   __end_of_I2C_Master_Start 1D64                  _OSCTUNEbits 000F9B     __end_of_I2C_Master_Write 1D54  
                 _INTCONbits 000FF2       __end_of_LCD_VERT_LIMIT 1010                     intlevel2 0000  
              _LCD_SIZE_HORZ 100E             ___lwmod@dividend 0031                _LCD_SIZE_VERT 100D  
                 _OSCCONbits 000FD3              ??_Bolt_dispense 0037              ??_Washer_remain 0037  
                   printf@ap 008A         __end_of_I2C_sendData 1CC4      __end_of_I2C_Master_Init 1CDC  
    __end_of_I2C_Master_Wait 1D3E      __end_of_I2C_Master_Stop 1D5C                  lcdInst@data 002C  
                _spacingTime 004C          __end_ofi2_lcdNibble 16E6              ___lwmod@divisor 0033  
            ___lwmod@counter 0035                  _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5  
            _Washer_dispense 175A                ??_Bolt_remain 0037  
