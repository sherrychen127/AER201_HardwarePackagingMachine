

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr  2 22:02:08 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	smallconst
    60  001000                     __psmallconst:
    61                           	opt stack 0
    62  001000  00                 	db	0
    63  001001                     _LCD_LEFT:
    64                           	opt stack 0
    65  001001  00                 	db	0
    66  001002                     __end_of_LCD_LEFT:
    67                           	opt stack 0
    68  001002                     _LCD_RIGHT:
    69                           	opt stack 0
    70  001002  01                 	db	1
    71  001003                     __end_of_LCD_RIGHT:
    72                           	opt stack 0
    73  001003                     _LCD_SIZE_VERT:
    74                           	opt stack 0
    75  001003  02                 	db	2
    76  001004                     __end_of_LCD_SIZE_VERT:
    77                           	opt stack 0
    78  001004                     _LCD_SIZE_HORZ:
    79                           	opt stack 0
    80  001004  10                 	db	16
    81  001005                     __end_of_LCD_SIZE_HORZ:
    82                           	opt stack 0
    83  001005                     _LCD_VERT_LIMIT:
    84                           	opt stack 0
    85  001005  02                 	db	2
    86  001006                     __end_of_LCD_VERT_LIMIT:
    87                           	opt stack 0
    88  001006                     _LCD_HORZ_LIMIT:
    89                           	opt stack 0
    90  001006  28                 	db	40
    91  001007                     __end_of_LCD_HORZ_LIMIT:
    92                           	opt stack 0
    93  0000                     _LATDbits	set	3980
    94  0000                     _T0CONbits	set	4053
    95  0000                     _ADCON1	set	4033
    96  0000                     _ADCON0	set	4034
    97  0000                     _TRISE	set	3990
    98  0000                     _TRISD	set	3989
    99  0000                     _TRISC	set	3988
   100  0000                     _TRISB	set	3987
   101  0000                     _TRISA	set	3986
   102  0000                     _LATE	set	3981
   103  0000                     _LATD	set	3980
   104  0000                     _LATC	set	3979
   105  0000                     _LATB	set	3978
   106  0000                     _LATA	set	3977
   107  0000                     _OSCTUNEbits	set	3995
   108  0000                     _OSCCONbits	set	4051
   109  0000                     _INTCONbits	set	4082
   110  001007                     STR_1:
   111  001007  79                 	db	121	;'y'
   112  001008  61                 	db	97	;'a'
   113  001009  79                 	db	121	;'y'
   114  00100A  00                 	db	0
   115                           
   116                           ; #config settings
   117  00100B  00                 	db	0	; dummy byte at the end
   118  0000                     
   119                           	psect	cinit
   120  001304                     __pcinit:
   121                           	opt stack 0
   122  001304                     start_initialization:
   123                           	opt stack 0
   124  001304                     __initialization:
   125                           	opt stack 0
   126                           
   127                           ; Clear objects allocated to COMRAM (4 bytes)
   128  001304  6A26               	clrf	(__pbssCOMRAM+3)& (0+255),c
   129  001306  6A25               	clrf	(__pbssCOMRAM+2)& (0+255),c
   130  001308  6A24               	clrf	(__pbssCOMRAM+1)& (0+255),c
   131  00130A  6A23               	clrf	__pbssCOMRAM& (0+255),c
   132  00130C                     end_of_initialization:
   133                           	opt stack 0
   134  00130C                     __end_of__initialization:
   135                           	opt stack 0
   136  00130C  9027               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   137  00130E  9227               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   138  001310  0E00               	movlw	low (__Lsmallconst shr (0+16))
   139  001312  6EF8               	movwf	tblptru,c
   140  001314  0E10               	movlw	high __Lsmallconst
   141  001316  6EF7               	movwf	tblptrh,c
   142  001318  0100               	movlb	0
   143  00131A  EFEB  F008         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           
   147                           	psect	bssCOMRAM
   148  000023                     __pbssCOMRAM:
   149                           	opt stack 0
   150  000023                     _count:
   151                           	opt stack 0
   152  000023                     	ds	2
   153  000025                     lcd@LCDinterruptState:
   154                           	opt stack 0
   155  000025                     	ds	1
   156  000026                     	ds	1
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           
   160                           	psect	cstackCOMRAM
   161  000001                     __pcstackCOMRAM:
   162                           	opt stack 0
   163  000001                     i2lcdNibble@temp:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x0
   167  000001                     	ds	1
   168  000002                     i2lcdNibble@data:
   169                           	opt stack 0
   170                           
   171                           ; 1 bytes @ 0x1
   172  000002                     	ds	1
   173  000003                     putch@data:
   174                           	opt stack 0
   175  000003                     i2lcdInst@data:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x2
   179  000003                     	ds	1
   180  000004                     ??i2_initLCD:
   181  000004                     ?_printf:
   182                           	opt stack 0
   183  000004                     printf@f:
   184                           	opt stack 0
   185                           
   186                           ; 2 bytes @ 0x3
   187  000004                     	ds	2
   188  000006                     printf@ap:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x5
   192  000006                     	ds	2
   193  000008                     printf@c:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x7
   197  000008                     	ds	1
   198  000009                     ??_ISR:
   199                           
   200                           ; 1 bytes @ 0x8
   201  000009                     	ds	20
   202  00001D                     lcdNibble@temp:
   203                           	opt stack 0
   204                           
   205                           ; 1 bytes @ 0x1C
   206  00001D                     	ds	1
   207  00001E                     lcdNibble@data:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0x1D
   211  00001E                     	ds	1
   212  00001F                     lcdInst@data:
   213                           	opt stack 0
   214                           
   215                           ; 1 bytes @ 0x1E
   216  00001F                     	ds	1
   217  000020                     ??_initLCD:
   218                           
   219                           ; 1 bytes @ 0x1F
   220  000020                     	ds	1
   221  000021                     ??_main:
   222                           
   223                           ; 1 bytes @ 0x20
   224  000021                     	ds	2
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 33 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;Total ram usage:        2 bytes
   252 ;; Hardware stack levels required when called:    7
   253 ;; This function calls:
   254 ;;		_initLCD
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text0
   261  0011D6                     __ptext0:
   262                           	opt stack 0
   263  0011D6                     _main:
   264                           	opt stack 24
   265                           
   266                           ;main.c: 38: OSCCONbits.IRCF2 = 1;
   267                           
   268                           ;incstack = 0
   269  0011D6  8CD3               	bsf	4051,6,c	;volatile
   270                           
   271                           ;main.c: 39: OSCCONbits.IRCF1 = 1;
   272  0011D8  8AD3               	bsf	4051,5,c	;volatile
   273                           
   274                           ;main.c: 40: OSCCONbits.IRCF0 = 1;
   275  0011DA  88D3               	bsf	4051,4,c	;volatile
   276                           
   277                           ;main.c: 41: OSCCONbits.SCS1 = 1;
   278  0011DC  82D3               	bsf	4051,1,c	;volatile
   279                           
   280                           ;main.c: 42: OSCTUNEbits.PLLEN = 1;
   281  0011DE  8C9B               	bsf	3995,6,c	;volatile
   282                           
   283                           ;main.c: 46: LATA = 0x00;
   284  0011E0  0E00               	movlw	0
   285  0011E2  6E89               	movwf	3977,c	;volatile
   286                           
   287                           ;main.c: 47: LATB = 0x00;
   288  0011E4  0E00               	movlw	0
   289  0011E6  6E8A               	movwf	3978,c	;volatile
   290                           
   291                           ;main.c: 48: LATC = 0x00;
   292  0011E8  0E00               	movlw	0
   293  0011EA  6E8B               	movwf	3979,c	;volatile
   294                           
   295                           ;main.c: 49: LATD = 0x00;
   296  0011EC  0E00               	movlw	0
   297  0011EE  6E8C               	movwf	3980,c	;volatile
   298                           
   299                           ;main.c: 50: LATE = 0x00;
   300  0011F0  0E00               	movlw	0
   301  0011F2  6E8D               	movwf	3981,c	;volatile
   302                           
   303                           ;main.c: 54: TRISA = 0xFF;
   304  0011F4  6892               	setf	3986,c	;volatile
   305                           
   306                           ;main.c: 55: TRISB = 0xFF;
   307  0011F6  6893               	setf	3987,c	;volatile
   308                           
   309                           ;main.c: 56: TRISC = 0x00;
   310  0011F8  0E00               	movlw	0
   311  0011FA  6E94               	movwf	3988,c	;volatile
   312                           
   313                           ;main.c: 57: TRISD = 0x00;
   314  0011FC  0E00               	movlw	0
   315  0011FE  6E95               	movwf	3989,c	;volatile
   316                           
   317                           ;main.c: 58: TRISE = 0x00;
   318  001200  0E00               	movlw	0
   319  001202  6E96               	movwf	3990,c	;volatile
   320                           
   321                           ;main.c: 61: ADCON0 = 0x00;
   322  001204  0E00               	movlw	0
   323  001206  6EC2               	movwf	4034,c	;volatile
   324                           
   325                           ;main.c: 62: ADCON1 = 0b00001111;
   326  001208  0E0F               	movlw	15
   327  00120A  6EC1               	movwf	4033,c	;volatile
   328                           
   329                           ;main.c: 89: (INTCONbits.GIE = 1);
   330  00120C  8EF2               	bsf	intcon,7,c	;volatile
   331                           
   332                           ;main.c: 90: initLCD();
   333  00120E  EC21  F009         	call	_initLCD	;wreg free
   334                           
   335                           ;main.c: 92: _delay((unsigned long)((200)*(32000000/4000.0)));
   336  001212  0E09               	movlw	9
   337  001214  6E22               	movwf	(??_main+1)& (0+255),c
   338  001216  0E1E               	movlw	30
   339  001218  6E21               	movwf	??_main& (0+255),c
   340  00121A  0EE4               	movlw	228
   341  00121C                     u177:
   342  00121C  2EE8               	decfsz	wreg,f,c
   343  00121E  D7FE               	bra	u177
   344  001220  2E21               	decfsz	??_main& (0+255),f,c
   345  001222  D7FC               	bra	u177
   346  001224  2E22               	decfsz	(??_main+1)& (0+255),f,c
   347  001226  D7FA               	bra	u177
   348  001228  D000               	nop2	
   349                           
   350                           ;main.c: 98: INTCONbits.PEIE = 1;
   351  00122A  8CF2               	bsf	intcon,6,c	;volatile
   352                           
   353                           ;main.c: 99: INTCONbits.GIE = 1;
   354  00122C  8EF2               	bsf	intcon,7,c	;volatile
   355                           
   356                           ;main.c: 100: INTCONbits.TMR0IE = 1;
   357  00122E  8AF2               	bsf	intcon,5,c	;volatile
   358                           
   359                           ;main.c: 102: T0CONbits.TMR0ON = 1;
   360  001230  8ED5               	bsf	4053,7,c	;volatile
   361                           
   362                           ;main.c: 103: T0CONbits.T08BIT = 1;
   363  001232  8CD5               	bsf	4053,6,c	;volatile
   364                           
   365                           ;main.c: 104: T0CONbits.PSA = 0;
   366  001234  96D5               	bcf	4053,3,c	;volatile
   367                           
   368                           ;main.c: 105: T0CONbits.T0CS = 1;
   369  001236  8AD5               	bsf	4053,5,c	;volatile
   370                           
   371                           ;main.c: 106: T0CONbits.T0PS0 = 1;
   372  001238  80D5               	bsf	4053,0,c	;volatile
   373                           
   374                           ;main.c: 107: T0CONbits.T0PS1 = 1;
   375  00123A  82D5               	bsf	4053,1,c	;volatile
   376                           
   377                           ;main.c: 108: T0CONbits.T0PS2 = 1;
   378  00123C  84D5               	bsf	4053,2,c	;volatile
   379  00123E  EF07  F000         	goto	start
   380  001242                     __end_of_main:
   381                           	opt stack 0
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           intcon	equ	0xFF2
   385                           wreg	equ	0xFE8
   386                           
   387 ;; *************** function _initLCD *****************
   388 ;; Defined at:
   389 ;;		line 60 in file "lcd.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;Total ram usage:        1 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; Hardware stack levels required when called:    6
   410 ;; This function calls:
   411 ;;		_lcdInst
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text1
   418  001242                     __ptext1:
   419                           	opt stack 0
   420  001242                     _initLCD:
   421                           	opt stack 24
   422                           
   423                           ;lcd.c: 68: _delay((unsigned long)((15)*(32000000/4000.0)));
   424                           
   425                           ;incstack = 0
   426  001242  0E9C               	movlw	156
   427  001244  6E20               	movwf	??_initLCD& (0+255),c
   428  001246  0ED7               	movlw	215
   429  001248                     u187:
   430  001248  2EE8               	decfsz	wreg,f,c
   431  00124A  D7FE               	bra	u187
   432  00124C  2E20               	decfsz	??_initLCD& (0+255),f,c
   433  00124E  D7FC               	bra	u187
   434  001250  F000               	nop	
   435                           
   436                           ;lcd.c: 69: lcdInst(0b00110011);
   437  001252  0E33               	movlw	51
   438  001254  EC8F  F009         	call	_lcdInst
   439                           
   440                           ;lcd.c: 70: lcdInst(0b00110010);
   441  001258  0E32               	movlw	50
   442  00125A  EC8F  F009         	call	_lcdInst
   443                           
   444                           ;lcd.c: 71: lcdInst(0b00101000);
   445  00125E  0E28               	movlw	40
   446  001260  EC8F  F009         	call	_lcdInst
   447                           
   448                           ;lcd.c: 72: lcdInst(0b00001111);
   449  001264  0E0F               	movlw	15
   450  001266  EC8F  F009         	call	_lcdInst
   451                           
   452                           ;lcd.c: 73: lcdInst(0b00000110);
   453  00126A  0E06               	movlw	6
   454  00126C  EC8F  F009         	call	_lcdInst
   455                           
   456                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(32000000/4000.0)));;
   457  001270  0E01               	movlw	1
   458  001272  EC8F  F009         	call	_lcdInst
   459  001276  0E9C               	movlw	156
   460  001278  6E20               	movwf	??_initLCD& (0+255),c
   461  00127A  0ED7               	movlw	215
   462  00127C                     u197:
   463  00127C  2EE8               	decfsz	wreg,f,c
   464  00127E  D7FE               	bra	u197
   465  001280  2E20               	decfsz	??_initLCD& (0+255),f,c
   466  001282  D7FC               	bra	u197
   467  001284  F000               	nop	
   468                           
   469                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
   470  001286  0E0F               	movlw	15
   471  001288  EC8F  F009         	call	_lcdInst
   472  00128C  0012               	return		;funcret
   473  00128E                     __end_of_initLCD:
   474                           	opt stack 0
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           intcon	equ	0xFF2
   478                           wreg	equ	0xFE8
   479                           
   480 ;; *************** function _lcdInst *****************
   481 ;; Defined at:
   482 ;;		line 11 in file "lcd.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  data            1    wreg     unsigned char 
   485 ;; Auto vars:     Size  Location     Type
   486 ;;  data            1   30[COMRAM] unsigned char 
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;Total ram usage:        1 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    5
   503 ;; This function calls:
   504 ;;		_lcdNibble
   505 ;; This function is called by:
   506 ;;		_initLCD
   507 ;;		_lcd_set_cursor
   508 ;;		_lcd_shift_cursor
   509 ;;		_lcd_shift_display
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text2
   514  00131E                     __ptext2:
   515                           	opt stack 0
   516  00131E                     _lcdInst:
   517                           	opt stack 24
   518                           
   519                           ;incstack = 0
   520                           ;lcdInst@data stored from wreg
   521  00131E  6E1F               	movwf	lcdInst@data,c
   522                           
   523                           ;lcd.c: 19: LATDbits.LATD2 = 0;
   524  001320  948C               	bcf	3980,2,c	;volatile
   525                           
   526                           ;lcd.c: 20: lcdNibble(data);
   527  001322  501F               	movf	lcdInst@data,w,c
   528  001324  EC6D  F008         	call	_lcdNibble
   529                           
   530                           ;lcd.c: 21: _delay((unsigned long)((100)*(32000000/4000000.0)));
   531  001328  0EA0               	movlw	160
   532  00132A                     u207:
   533  00132A  D000               	nop2	
   534  00132C  2EE8               	decfsz	wreg,f,c
   535  00132E  D7FD               	bra	u207
   536  001330  0012               	return		;funcret
   537  001332                     __end_of_lcdInst:
   538                           	opt stack 0
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           intcon	equ	0xFF2
   542                           wreg	equ	0xFE8
   543                           
   544 ;; *************** function _lcdNibble *****************
   545 ;; Defined at:
   546 ;;		line 37 in file "lcd.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  data            1    wreg     unsigned char 
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  data            1   29[COMRAM] unsigned char 
   551 ;;  temp            1   28[COMRAM] unsigned char 
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, status,2, status,0
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;Total ram usage:        2 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; Hardware stack levels required when called:    4
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_lcdInst
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text3
   576  0010DA                     __ptext3:
   577                           	opt stack 0
   578  0010DA                     _lcdNibble:
   579                           	opt stack 24
   580                           
   581                           ;incstack = 0
   582                           ;lcdNibble@data stored from wreg
   583  0010DA  6E1E               	movwf	lcdNibble@data,c
   584                           
   585                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
   586  0010DC  501E               	movf	lcdNibble@data,w,c
   587  0010DE  0BF0               	andlw	240
   588  0010E0  6E1D               	movwf	lcdNibble@temp,c
   589                           
   590                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
   591  0010E2  508C               	movf	3980,w,c	;volatile
   592  0010E4  0B0F               	andlw	15
   593  0010E6  6E8C               	movwf	3980,c	;volatile
   594                           
   595                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
   596  0010E8  501D               	movf	lcdNibble@temp,w,c
   597  0010EA  108C               	iorwf	3980,w,c	;volatile
   598  0010EC  6E8C               	movwf	3980,c	;volatile
   599                           
   600                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   601  0010EE  0E00               	movlw	0
   602  0010F0  BEF2               	btfsc	intcon,7,c	;volatile
   603  0010F2  0E01               	movlw	1
   604  0010F4  6E25               	movwf	lcd@LCDinterruptState,c
   605  0010F6  9EF2               	bcf	intcon,7,c	;volatile
   606  0010F8  868C               	bsf	3980,3,c	;volatile
   607  0010FA  0E42               	movlw	66
   608  0010FC                     u217:
   609  0010FC  2EE8               	decfsz	wreg,f,c
   610  0010FE  D7FE               	bra	u217
   611  001100  D000               	nop2	
   612  001102  968C               	bcf	3980,3,c	;volatile
   613  001104  0EA0               	movlw	160
   614  001106                     u227:
   615  001106  D000               	nop2	
   616  001108  2EE8               	decfsz	wreg,f,c
   617  00110A  D7FD               	bra	u227
   618  00110C  B025               	btfsc	lcd@LCDinterruptState,0,c
   619  00110E  D002               	bra	u15
   620  001110  9EF2               	bcf	intcon,7,c	;volatile
   621  001112  D001               	bra	u16
   622  001114                     u15:
   623  001114  8EF2               	bsf	intcon,7,c	;volatile
   624  001116                     u16:
   625                           
   626                           ;lcd.c: 52: data = (unsigned char) (data << 4);
   627  001116  381E               	swapf	lcdNibble@data,w,c
   628  001118  0BF0               	andlw	240
   629  00111A  6E1E               	movwf	lcdNibble@data,c
   630                           
   631                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
   632  00111C  501E               	movf	lcdNibble@data,w,c
   633  00111E  0BF0               	andlw	240
   634  001120  6E1D               	movwf	lcdNibble@temp,c
   635                           
   636                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
   637  001122  508C               	movf	3980,w,c	;volatile
   638  001124  0B0F               	andlw	15
   639  001126  6E8C               	movwf	3980,c	;volatile
   640                           
   641                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
   642  001128  501D               	movf	lcdNibble@temp,w,c
   643  00112A  108C               	iorwf	3980,w,c	;volatile
   644  00112C  6E8C               	movwf	3980,c	;volatile
   645                           
   646                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
   647  00112E  0E00               	movlw	0
   648  001130  BEF2               	btfsc	intcon,7,c	;volatile
   649  001132  0E01               	movlw	1
   650  001134  6E25               	movwf	lcd@LCDinterruptState,c
   651  001136  9EF2               	bcf	intcon,7,c	;volatile
   652  001138  868C               	bsf	3980,3,c	;volatile
   653  00113A  0E42               	movlw	66
   654  00113C                     u237:
   655  00113C  2EE8               	decfsz	wreg,f,c
   656  00113E  D7FE               	bra	u237
   657  001140  D000               	nop2	
   658  001142  968C               	bcf	3980,3,c	;volatile
   659  001144  0EA0               	movlw	160
   660  001146                     u247:
   661  001146  D000               	nop2	
   662  001148  2EE8               	decfsz	wreg,f,c
   663  00114A  D7FD               	bra	u247
   664  00114C  B025               	btfsc	lcd@LCDinterruptState,0,c
   665  00114E  D002               	bra	u25
   666  001150  9EF2               	bcf	intcon,7,c	;volatile
   667  001152  D001               	bra	u26
   668  001154                     u25:
   669  001154  8EF2               	bsf	intcon,7,c	;volatile
   670  001156                     u26:
   671  001156  0012               	return		;funcret
   672  001158                     __end_of_lcdNibble:
   673                           	opt stack 0
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           intcon	equ	0xFF2
   677                           wreg	equ	0xFE8
   678                           
   679 ;; *************** function _ISR *****************
   680 ;; Defined at:
   681 ;;		line 18 in file "main.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;Total ram usage:       20 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    3
   702 ;; This function calls:
   703 ;;		_printf
   704 ;;		i2_initLCD
   705 ;; This function is called by:
   706 ;;		Interrupt level 2
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	intcode
   711  000008                     __pintcode:
   712                           	opt stack 0
   713  000008                     _ISR:
   714                           	opt stack 24
   715                           
   716                           ;incstack = 0
   717  000008  8227               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   718  00000A  ED06  F008         	call	int_func,f	;refresh shadow registers
   719                           tblptru	equ	0xFF8
   720                           tblptrh	equ	0xFF7
   721                           intcon	equ	0xFF2
   722                           wreg	equ	0xFE8
   723                           
   724                           	psect	intcode_body
   725  00100C                     __pintcode_body:
   726                           	opt stack 24
   727  00100C                     int_func:
   728                           	opt stack 24
   729  00100C  0006               	pop		; remove dummy address from shadow register refresh
   730  00100E  CFFA F00B          	movff	pclath,??_ISR+2
   731  001012  CFFB F00C          	movff	pclatu,??_ISR+3
   732  001016  CFE9 F00D          	movff	fsr0l,??_ISR+4
   733  00101A  CFEA F00E          	movff	fsr0h,??_ISR+5
   734  00101E  CFE1 F00F          	movff	fsr1l,??_ISR+6
   735  001022  CFE2 F010          	movff	fsr1h,??_ISR+7
   736  001026  CFD9 F011          	movff	fsr2l,??_ISR+8
   737  00102A  CFDA F012          	movff	fsr2h,??_ISR+9
   738  00102E  CFF3 F013          	movff	prodl,??_ISR+10
   739  001032  CFF4 F014          	movff	prodh,??_ISR+11
   740  001036  CFF6 F015          	movff	tblptrl,??_ISR+12
   741  00103A  CFF7 F016          	movff	tblptrh,??_ISR+13
   742  00103E  CFF8 F017          	movff	tblptru,??_ISR+14
   743  001042  CFF5 F018          	movff	tablat,??_ISR+15
   744  001046  C027  F019         	movff	btemp,??_ISR+16
   745  00104A  C028  F01A         	movff	btemp+1,??_ISR+17
   746  00104E  C029  F01B         	movff	btemp+2,??_ISR+18
   747  001052  C02A  F01C         	movff	btemp+3,??_ISR+19
   748                           
   749                           ;main.c: 20: if (INTCONbits.TMR0IF){
   750  001056  A4F2               	btfss	intcon,2,c	;volatile
   751  001058  D01A               	goto	i2l59
   752                           
   753                           ;main.c: 21: INTCONbits.TMR0IF = 0;
   754  00105A  94F2               	bcf	intcon,2,c	;volatile
   755                           
   756                           ;main.c: 22: count ++;
   757  00105C  4A23               	infsnz	_count,f,c
   758  00105E  2A24               	incf	_count+1,f,c
   759                           
   760                           ;main.c: 24: count = 0;
   761  001060  0E00               	movlw	0
   762  001062  6E24               	movwf	_count+1,c
   763  001064  0E00               	movlw	0
   764  001066  6E23               	movwf	_count,c
   765                           
   766                           ;main.c: 25: initLCD();
   767  001068  EC47  F009         	call	i2_initLCD	;wreg free
   768                           
   769                           ;main.c: 26: printf("yay");
   770  00106C  0E07               	movlw	low STR_1
   771  00106E  6E04               	movwf	printf@f,c
   772  001070  0E10               	movlw	high STR_1
   773  001072  6E05               	movwf	printf@f+1,c
   774  001074  EC6D  F009         	call	_printf	;wreg free
   775                           
   776                           ;main.c: 27: _delay((unsigned long)((300)*(32000000/4000.0)));
   777  001078  0E0D               	movlw	13
   778  00107A  6E0A               	movwf	(??_ISR+1)& (0+255),c
   779  00107C  0E2D               	movlw	45
   780  00107E  6E09               	movwf	??_ISR& (0+255),c
   781  001080  0ED8               	movlw	216
   782  001082                     i2u25_47:
   783  001082  2EE8               	decfsz	wreg,f,c
   784  001084  D7FE               	bra	i2u25_47
   785  001086  2E09               	decfsz	??_ISR& (0+255),f,c
   786  001088  D7FC               	bra	i2u25_47
   787  00108A  2E0A               	decfsz	(??_ISR+1)& (0+255),f,c
   788  00108C  D7FA               	bra	i2u25_47
   789  00108E                     i2l59:
   790  00108E  C01C  F02A         	movff	??_ISR+19,btemp+3
   791  001092  C01B  F029         	movff	??_ISR+18,btemp+2
   792  001096  C01A  F028         	movff	??_ISR+17,btemp+1
   793  00109A  C019  F027         	movff	??_ISR+16,btemp
   794  00109E  C018  FFF5         	movff	??_ISR+15,tablat
   795  0010A2  C017  FFF8         	movff	??_ISR+14,tblptru
   796  0010A6  C016  FFF7         	movff	??_ISR+13,tblptrh
   797  0010AA  C015  FFF6         	movff	??_ISR+12,tblptrl
   798  0010AE  C014  FFF4         	movff	??_ISR+11,prodh
   799  0010B2  C013  FFF3         	movff	??_ISR+10,prodl
   800  0010B6  C012  FFDA         	movff	??_ISR+9,fsr2h
   801  0010BA  C011  FFD9         	movff	??_ISR+8,fsr2l
   802  0010BE  C010  FFE2         	movff	??_ISR+7,fsr1h
   803  0010C2  C00F  FFE1         	movff	??_ISR+6,fsr1l
   804  0010C6  C00E  FFEA         	movff	??_ISR+5,fsr0h
   805  0010CA  C00D  FFE9         	movff	??_ISR+4,fsr0l
   806  0010CE  C00C  FFFB         	movff	??_ISR+3,pclatu
   807  0010D2  C00B  FFFA         	movff	??_ISR+2,pclath
   808  0010D6  9227               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   809  0010D8  0011               	retfie		f
   810  0010DA                     __end_of_ISR:
   811                           	opt stack 0
   812                           pclatu	equ	0xFFB
   813                           pclath	equ	0xFFA
   814                           tblptru	equ	0xFF8
   815                           tblptrh	equ	0xFF7
   816                           tblptrl	equ	0xFF6
   817                           tablat	equ	0xFF5
   818                           prodh	equ	0xFF4
   819                           prodl	equ	0xFF3
   820                           intcon	equ	0xFF2
   821                           fsr0h	equ	0xFEA
   822                           fsr0l	equ	0xFE9
   823                           wreg	equ	0xFE8
   824                           fsr1h	equ	0xFE2
   825                           fsr1l	equ	0xFE1
   826                           fsr2h	equ	0xFDA
   827                           fsr2l	equ	0xFD9
   828                           
   829 ;; *************** function i2_initLCD *****************
   830 ;; Defined at:
   831 ;;		line 60 in file "lcd.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;Total ram usage:        1 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    2
   852 ;; This function calls:
   853 ;;		i2_lcdInst
   854 ;; This function is called by:
   855 ;;		_ISR
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text5
   860  00128E                     __ptext5:
   861                           	opt stack 0
   862  00128E                     i2_initLCD:
   863                           	opt stack 24
   864                           
   865                           ;lcd.c: 68: _delay((unsigned long)((15)*(32000000/4000.0)));
   866                           
   867                           ;incstack = 0
   868  00128E  0E9C               	movlw	156
   869  001290  6E04               	movwf	??i2_initLCD& (0+255),c
   870  001292  0ED7               	movlw	215
   871  001294                     i2u26_47:
   872  001294  2EE8               	decfsz	wreg,f,c
   873  001296  D7FE               	bra	i2u26_47
   874  001298  2E04               	decfsz	??i2_initLCD& (0+255),f,c
   875  00129A  D7FC               	bra	i2u26_47
   876  00129C  F000               	nop	
   877                           
   878                           ;lcd.c: 69: lcdInst(0b00110011);
   879  00129E  0E33               	movlw	51
   880  0012A0  EC99  F009         	call	i2_lcdInst
   881                           
   882                           ;lcd.c: 70: lcdInst(0b00110010);
   883  0012A4  0E32               	movlw	50
   884  0012A6  EC99  F009         	call	i2_lcdInst
   885                           
   886                           ;lcd.c: 71: lcdInst(0b00101000);
   887  0012AA  0E28               	movlw	40
   888  0012AC  EC99  F009         	call	i2_lcdInst
   889                           
   890                           ;lcd.c: 72: lcdInst(0b00001111);
   891  0012B0  0E0F               	movlw	15
   892  0012B2  EC99  F009         	call	i2_lcdInst
   893                           
   894                           ;lcd.c: 73: lcdInst(0b00000110);
   895  0012B6  0E06               	movlw	6
   896  0012B8  EC99  F009         	call	i2_lcdInst
   897                           
   898                           ;lcd.c: 74: lcdInst(0x01);_delay((unsigned long)((15)*(32000000/4000.0)));;
   899  0012BC  0E01               	movlw	1
   900  0012BE  EC99  F009         	call	i2_lcdInst
   901  0012C2  0E9C               	movlw	156
   902  0012C4  6E04               	movwf	??i2_initLCD& (0+255),c
   903  0012C6  0ED7               	movlw	215
   904  0012C8                     i2u27_47:
   905  0012C8  2EE8               	decfsz	wreg,f,c
   906  0012CA  D7FE               	bra	i2u27_47
   907  0012CC  2E04               	decfsz	??i2_initLCD& (0+255),f,c
   908  0012CE  D7FC               	bra	i2u27_47
   909  0012D0  F000               	nop	
   910                           
   911                           ;lcd.c: 77: lcdInst(8 | (1 << 2) | (1 << 1)| 1);;
   912  0012D2  0E0F               	movlw	15
   913  0012D4  EC99  F009         	call	i2_lcdInst
   914  0012D8  0012               	return		;funcret
   915  0012DA                     __end_ofi2_initLCD:
   916                           	opt stack 0
   917                           pclatu	equ	0xFFB
   918                           pclath	equ	0xFFA
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           prodh	equ	0xFF4
   924                           prodl	equ	0xFF3
   925                           intcon	equ	0xFF2
   926                           fsr0h	equ	0xFEA
   927                           fsr0l	equ	0xFE9
   928                           wreg	equ	0xFE8
   929                           fsr1h	equ	0xFE2
   930                           fsr1l	equ	0xFE1
   931                           fsr2h	equ	0xFDA
   932                           fsr2l	equ	0xFD9
   933                           
   934 ;; *************** function i2_lcdInst *****************
   935 ;; Defined at:
   936 ;;		line 11 in file "lcd.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  data            1    wreg     unsigned char 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  data            1    2[COMRAM] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;Total ram usage:        1 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    1
   957 ;; This function calls:
   958 ;;		i2_lcdNibble
   959 ;; This function is called by:
   960 ;;		i2_initLCD
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text6
   965  001332                     __ptext6:
   966                           	opt stack 0
   967  001332                     i2_lcdInst:
   968                           	opt stack 24
   969                           
   970                           ;incstack = 0
   971                           ;i2lcdInst@data stored from wreg
   972  001332  6E03               	movwf	i2lcdInst@data,c
   973                           
   974                           ;lcd.c: 19: LATDbits.LATD2 = 0;
   975  001334  948C               	bcf	3980,2,c	;volatile
   976                           
   977                           ;lcd.c: 20: lcdNibble(data);
   978  001336  5003               	movf	i2lcdInst@data,w,c
   979  001338  ECAC  F008         	call	i2_lcdNibble
   980                           
   981                           ;lcd.c: 21: _delay((unsigned long)((100)*(32000000/4000000.0)));
   982  00133C  0EA0               	movlw	160
   983  00133E                     i2u28_47:
   984  00133E  D000               	nop2	
   985  001340  2EE8               	decfsz	wreg,f,c
   986  001342  D7FD               	bra	i2u28_47
   987  001344  0012               	return		;funcret
   988  001346                     __end_ofi2_lcdInst:
   989                           	opt stack 0
   990                           pclatu	equ	0xFFB
   991                           pclath	equ	0xFFA
   992                           tblptru	equ	0xFF8
   993                           tblptrh	equ	0xFF7
   994                           tblptrl	equ	0xFF6
   995                           tablat	equ	0xFF5
   996                           prodh	equ	0xFF4
   997                           prodl	equ	0xFF3
   998                           intcon	equ	0xFF2
   999                           fsr0h	equ	0xFEA
  1000                           fsr0l	equ	0xFE9
  1001                           wreg	equ	0xFE8
  1002                           fsr1h	equ	0xFE2
  1003                           fsr1l	equ	0xFE1
  1004                           fsr2h	equ	0xFDA
  1005                           fsr2l	equ	0xFD9
  1006                           
  1007 ;; *************** function _printf *****************
  1008 ;; Defined at:
  1009 ;;		line 464 in file "/Applications/microchip/xc8/v1.45/sources/common/doprnt.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  f               2    3[COMRAM] PTR const unsigned char 
  1012 ;;		 -> STR_1(4), 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  tmpval          4    0        struct .
  1015 ;;  cp              3    0        PTR const unsigned char 
  1016 ;;  ap              2    5[COMRAM] PTR void [1]
  1017 ;;		 -> ?_printf(2), 
  1018 ;;  len             2    0        unsigned int 
  1019 ;;  val             2    0        unsigned int 
  1020 ;;  c               1    7[COMRAM] char 
  1021 ;;  flag            1    0        unsigned char 
  1022 ;;  prec            1    0        char 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  2    3[COMRAM] int 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;Total ram usage:        5 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    2
  1039 ;; This function calls:
  1040 ;;		_putch
  1041 ;; This function is called by:
  1042 ;;		_ISR
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text7
  1047  0012DA                     __ptext7:
  1048                           	opt stack 0
  1049  0012DA                     _printf:
  1050                           	opt stack 24
  1051                           
  1052                           ;doprnt.c: 466: va_list ap;
  1053                           ;doprnt.c: 499: signed char c;
  1054                           ;doprnt.c: 506: signed char prec;
  1055                           ;doprnt.c: 508: unsigned char flag;
  1056                           ;doprnt.c: 523: union {
  1057                           ;doprnt.c: 524: unsigned long vd;
  1058                           ;doprnt.c: 525: double integ;
  1059                           ;doprnt.c: 526: } tmpval;
  1060                           ;doprnt.c: 528: unsigned int val;
  1061                           ;doprnt.c: 529: unsigned len;
  1062                           ;doprnt.c: 530: const char * cp;
  1063                           ;doprnt.c: 533: *ap = __va_start();
  1064                           
  1065                           ;incstack = 0
  1066  0012DA  0E06               	movlw	low (?_printf+2)
  1067  0012DC  6E06               	movwf	printf@ap,c
  1068  0012DE  0E00               	movlw	high (?_printf+2)
  1069  0012E0  6E07               	movwf	printf@ap+1,c
  1070                           
  1071                           ;doprnt.c: 536: while(c = *f++) {
  1072  0012E2  D003               	goto	i2l127
  1073  0012E4                     
  1074                           ;doprnt.c: 540: {
  1075                           ;doprnt.c: 541: (putch(c) );
  1076  0012E4  5008               	movf	printf@c,w,c
  1077  0012E6  ECA3  F009         	call	_putch
  1078  0012EA                     i2l127:
  1079  0012EA  C004  FFF6         	movff	printf@f,tblptrl
  1080  0012EE  C005  FFF7         	movff	printf@f+1,tblptrh
  1081  0012F2  4A04               	infsnz	printf@f,f,c
  1082  0012F4  2A05               	incf	printf@f+1,f,c
  1083  0012F6                     	if	0	;tblptru may be non-zero
  1084  0012F6                     	endif
  1085  0012F6                     	if	0	;tblptru may be non-zero
  1086  0012F6                     	endif
  1087  0012F6  0008               	tblrd		*
  1088  0012F8  CFF5 F008          	movff	tablat,printf@c
  1089  0012FC  5008               	movf	printf@c,w,c
  1090  0012FE  B4D8               	btfsc	status,2,c
  1091  001300  0012               	return	
  1092  001302  D7F0               	goto	i2l128
  1093  001304                     __end_of_printf:
  1094                           	opt stack 0
  1095                           pclatu	equ	0xFFB
  1096                           pclath	equ	0xFFA
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           prodh	equ	0xFF4
  1102                           prodl	equ	0xFF3
  1103                           intcon	equ	0xFF2
  1104                           fsr0h	equ	0xFEA
  1105                           fsr0l	equ	0xFE9
  1106                           wreg	equ	0xFE8
  1107                           fsr1h	equ	0xFE2
  1108                           fsr1l	equ	0xFE1
  1109                           fsr2h	equ	0xFDA
  1110                           fsr2l	equ	0xFD9
  1111                           status	equ	0xFD8
  1112                           
  1113 ;; *************** function _putch *****************
  1114 ;; Defined at:
  1115 ;;		line 24 in file "lcd.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  data            1    wreg     unsigned char 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  data            1    2[COMRAM] unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;Total ram usage:        1 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    1
  1136 ;; This function calls:
  1137 ;;		i2_lcdNibble
  1138 ;; This function is called by:
  1139 ;;		_printf
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text8
  1144  001346                     __ptext8:
  1145                           	opt stack 0
  1146  001346                     _putch:
  1147                           	opt stack 24
  1148                           
  1149                           ;incstack = 0
  1150                           ;putch@data stored from wreg
  1151  001346  6E03               	movwf	putch@data,c
  1152                           
  1153                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  1154  001348  848C               	bsf	3980,2,c	;volatile
  1155                           
  1156                           ;lcd.c: 33: lcdNibble(data);
  1157  00134A  5003               	movf	putch@data,w,c
  1158  00134C  ECAC  F008         	call	i2_lcdNibble
  1159                           
  1160                           ;lcd.c: 34: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1161  001350  0EA0               	movlw	160
  1162  001352                     i2u29_47:
  1163  001352  D000               	nop2	
  1164  001354  2EE8               	decfsz	wreg,f,c
  1165  001356  D7FD               	bra	i2u29_47
  1166  001358  0012               	return		;funcret
  1167  00135A                     __end_of_putch:
  1168                           	opt stack 0
  1169                           pclatu	equ	0xFFB
  1170                           pclath	equ	0xFFA
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           prodh	equ	0xFF4
  1176                           prodl	equ	0xFF3
  1177                           intcon	equ	0xFF2
  1178                           fsr0h	equ	0xFEA
  1179                           fsr0l	equ	0xFE9
  1180                           wreg	equ	0xFE8
  1181                           fsr1h	equ	0xFE2
  1182                           fsr1l	equ	0xFE1
  1183                           fsr2h	equ	0xFDA
  1184                           fsr2l	equ	0xFD9
  1185                           status	equ	0xFD8
  1186                           
  1187 ;; *************** function i2_lcdNibble *****************
  1188 ;; Defined at:
  1189 ;;		line 37 in file "lcd.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  data            1    wreg     unsigned char 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  data            1    1[COMRAM] unsigned char 
  1194 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        2 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_putch
  1214 ;;		i2_lcdInst
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text9
  1219  001158                     __ptext9:
  1220                           	opt stack 0
  1221  001158                     i2_lcdNibble:
  1222                           	opt stack 24
  1223                           
  1224                           ;incstack = 0
  1225                           ;i2lcdNibble@data stored from wreg
  1226  001158  6E02               	movwf	i2lcdNibble@data,c
  1227                           
  1228                           ;lcd.c: 45: char temp = (unsigned char) (data & 0xF0);
  1229  00115A  5002               	movf	i2lcdNibble@data,w,c
  1230  00115C  0BF0               	andlw	240
  1231  00115E  6E01               	movwf	i2lcdNibble@temp,c
  1232                           
  1233                           ;lcd.c: 46: LATD = (unsigned char) (LATD & 0x0F);
  1234  001160  508C               	movf	3980,w,c	;volatile
  1235  001162  0B0F               	andlw	15
  1236  001164  6E8C               	movwf	3980,c	;volatile
  1237                           
  1238                           ;lcd.c: 47: LATD = (unsigned char) (temp | LATD);
  1239  001166  5001               	movf	i2lcdNibble@temp,w,c
  1240  001168  108C               	iorwf	3980,w,c	;volatile
  1241  00116A  6E8C               	movwf	3980,c	;volatile
  1242                           
  1243                           ;lcd.c: 49: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  1244  00116C  0E00               	movlw	0
  1245  00116E  BEF2               	btfsc	intcon,7,c	;volatile
  1246  001170  0E01               	movlw	1
  1247  001172  6E25               	movwf	lcd@LCDinterruptState,c
  1248  001174  9EF2               	bcf	intcon,7,c	;volatile
  1249  001176  868C               	bsf	3980,3,c	;volatile
  1250  001178  0E42               	movlw	66
  1251  00117A                     i2u30_47:
  1252  00117A  2EE8               	decfsz	wreg,f,c
  1253  00117C  D7FE               	bra	i2u30_47
  1254  00117E  D000               	nop2	
  1255  001180  968C               	bcf	3980,3,c	;volatile
  1256  001182  0EA0               	movlw	160
  1257  001184                     i2u31_47:
  1258  001184  D000               	nop2	
  1259  001186  2EE8               	decfsz	wreg,f,c
  1260  001188  D7FD               	bra	i2u31_47
  1261  00118A  B025               	btfsc	lcd@LCDinterruptState,0,c
  1262  00118C  D002               	bra	i2u13_45
  1263  00118E  9EF2               	bcf	intcon,7,c	;volatile
  1264  001190  D001               	bra	i2u13_46
  1265  001192                     i2u13_45:
  1266  001192  8EF2               	bsf	intcon,7,c	;volatile
  1267  001194                     i2u13_46:
  1268                           
  1269                           ;lcd.c: 52: data = (unsigned char) (data << 4);
  1270  001194  3802               	swapf	i2lcdNibble@data,w,c
  1271  001196  0BF0               	andlw	240
  1272  001198  6E02               	movwf	i2lcdNibble@data,c
  1273                           
  1274                           ;lcd.c: 53: temp = (unsigned char) (data & 0xF0);
  1275  00119A  5002               	movf	i2lcdNibble@data,w,c
  1276  00119C  0BF0               	andlw	240
  1277  00119E  6E01               	movwf	i2lcdNibble@temp,c
  1278                           
  1279                           ;lcd.c: 54: LATD = (unsigned char) (LATD & 0x0F);
  1280  0011A0  508C               	movf	3980,w,c	;volatile
  1281  0011A2  0B0F               	andlw	15
  1282  0011A4  6E8C               	movwf	3980,c	;volatile
  1283                           
  1284                           ;lcd.c: 55: LATD = (unsigned char) (temp | LATD);
  1285  0011A6  5001               	movf	i2lcdNibble@temp,w,c
  1286  0011A8  108C               	iorwf	3980,w,c	;volatile
  1287  0011AA  6E8C               	movwf	3980,c	;volatile
  1288                           
  1289                           ;lcd.c: 57: { LCDinterruptState = INTCONbits.GIE; (INTCONbits.GIE = 0); LATDbits.LATD3 =
      +                           1; _delay((unsigned long)((25)*(32000000/4000000.0))); LATDbits.LATD3 = 0; _delay((unsi
      +                          gned long)((100)*(32000000/4000000.0))); INTCONbits.GIE = LCDinterruptState;};
  1290  0011AC  0E00               	movlw	0
  1291  0011AE  BEF2               	btfsc	intcon,7,c	;volatile
  1292  0011B0  0E01               	movlw	1
  1293  0011B2  6E25               	movwf	lcd@LCDinterruptState,c
  1294  0011B4  9EF2               	bcf	intcon,7,c	;volatile
  1295  0011B6  868C               	bsf	3980,3,c	;volatile
  1296  0011B8  0E42               	movlw	66
  1297  0011BA                     i2u32_47:
  1298  0011BA  2EE8               	decfsz	wreg,f,c
  1299  0011BC  D7FE               	bra	i2u32_47
  1300  0011BE  D000               	nop2	
  1301  0011C0  968C               	bcf	3980,3,c	;volatile
  1302  0011C2  0EA0               	movlw	160
  1303  0011C4                     i2u33_47:
  1304  0011C4  D000               	nop2	
  1305  0011C6  2EE8               	decfsz	wreg,f,c
  1306  0011C8  D7FD               	bra	i2u33_47
  1307  0011CA  B025               	btfsc	lcd@LCDinterruptState,0,c
  1308  0011CC  D002               	bra	i2u14_45
  1309  0011CE  9EF2               	bcf	intcon,7,c	;volatile
  1310  0011D0  D001               	bra	i2u14_46
  1311  0011D2                     i2u14_45:
  1312  0011D2  8EF2               	bsf	intcon,7,c	;volatile
  1313  0011D4                     i2u14_46:
  1314  0011D4  0012               	return		;funcret
  1315  0011D6                     __end_ofi2_lcdNibble:
  1316                           	opt stack 0
  1317                           pclatu	equ	0xFFB
  1318                           pclath	equ	0xFFA
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           prodh	equ	0xFF4
  1324                           prodl	equ	0xFF3
  1325                           intcon	equ	0xFF2
  1326                           fsr0h	equ	0xFEA
  1327                           fsr0l	equ	0xFE9
  1328                           wreg	equ	0xFE8
  1329                           fsr1h	equ	0xFE2
  1330                           fsr1l	equ	0xFE1
  1331                           fsr2h	equ	0xFDA
  1332                           fsr2l	equ	0xFD9
  1333                           status	equ	0xFD8
  1334                           pclatu	equ	0xFFB
  1335                           pclath	equ	0xFFA
  1336                           tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           prodh	equ	0xFF4
  1341                           prodl	equ	0xFF3
  1342                           intcon	equ	0xFF2
  1343                           fsr0h	equ	0xFEA
  1344                           fsr0l	equ	0xFE9
  1345                           wreg	equ	0xFE8
  1346                           fsr1h	equ	0xFE2
  1347                           fsr1l	equ	0xFE1
  1348                           fsr2h	equ	0xFDA
  1349                           fsr2l	equ	0xFD9
  1350                           status	equ	0xFD8
  1351                           
  1352                           	psect	rparam
  1353  0000                     pclatu	equ	0xFFB
  1354                           pclath	equ	0xFFA
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           intcon	equ	0xFF2
  1362                           fsr0h	equ	0xFEA
  1363                           fsr0l	equ	0xFE9
  1364                           wreg	equ	0xFE8
  1365                           fsr1h	equ	0xFE2
  1366                           fsr1l	equ	0xFE1
  1367                           fsr2h	equ	0xFDA
  1368                           fsr2l	equ	0xFD9
  1369                           status	equ	0xFD8
  1370                           
  1371                           	psect	temp
  1372  000027                     btemp:
  1373                           	opt stack 0
  1374  000027                     	ds	1
  1375  0000                     int$flags	set	btemp
  1376  0000                     wtemp6	set	btemp+1
  1377                           pclatu	equ	0xFFB
  1378                           pclath	equ	0xFFA
  1379                           tblptru	equ	0xFF8
  1380                           tblptrh	equ	0xFF7
  1381                           tblptrl	equ	0xFF6
  1382                           tablat	equ	0xFF5
  1383                           prodh	equ	0xFF4
  1384                           prodl	equ	0xFF3
  1385                           intcon	equ	0xFF2
  1386                           fsr0h	equ	0xFEA
  1387                           fsr0l	equ	0xFE9
  1388                           wreg	equ	0xFE8
  1389                           fsr1h	equ	0xFE2
  1390                           fsr1l	equ	0xFE1
  1391                           fsr2h	equ	0xFDA
  1392                           fsr2l	equ	0xFD9
  1393                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    6
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     34      38
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_initLCD
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble

Critical Paths under _ISR in COMRAM

    _ISR->_printf
    i2_initLCD->i2_lcdInst
    i2_lcdInst->i2_lcdNibble
    _printf->_putch
    _putch->i2_lcdNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      90
                                             32 COMRAM     2     2      0
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                             31 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0      90
                                             30 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 20    20      0     392
                                              8 COMRAM    20    20      0
                             _printf
                          i2_initLCD
 ---------------------------------------------------------------------------------
 (5) i2_initLCD                                            1     1      0     135
                                              3 COMRAM     1     1      0
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (6) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (5) _printf                                              18    16      2     257
                                              3 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _lcdInst
       _lcdNibble

 _ISR (ROOT)
   _printf
     _putch
       i2_lcdNibble
   i2_initLCD
     i2_lcdInst
       i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     22      26       1       30.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      26      34        0.0%
DATA                 0      0      26       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr  2 22:02:08 2018

                     u15 1114                       u16 1116                       u25 1154  
                     u26 1156              __CFG_CPD$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000             __CFG_CPB$OFF 000000                      u207 132A  
                    u217 10FC                      u227 1106                      u237 113C  
                    u247 1146                      u177 121C                      u187 1248  
                    _ISR 0008                      u197 127C                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     ?_ISR 0001             __CFG_WDT$OFF 000000  
                   STR_1 1007                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _LATE 000F8D  
                   i2l59 108E                     _main 11D6                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0027  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
            i2_lcdNibble 1158                    ??_ISR 0009         __end_of_LCD_LEFT 1002  
                  ?_main 0001                    i2l127 12EA                    i2l128 12E4  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000          __end_of_lcdInst 1332           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000          __end_of_initLCD 128E           __CFG_EBTRB$OFF 000000  
                  _count 0023                    _putch 1346                    pclath 000FFA  
                  tablat 000FF5        _LCDinterruptState 0026                    status 000FD8  
                  wtemp6 0028           __CFG_PBADEN$ON 000000          __initialization 1304  
     __size_ofi2_lcdInst 0014             __end_of_main 1242       __size_ofi2_initLCD 004C  
      __end_of_LCD_RIGHT 1003                   ??_main 0021            __activetblptr 000001  
                 _ADCON0 000FC2                   _ADCON1 000FC1          i2lcdNibble@data 0002  
                 ?_putch 0001          i2lcdNibble@temp 0001           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                ??_lcdInst 001F                   _printf 12DA  
              ??_initLCD 0020             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8        __end_ofi2_lcdInst 1346  
      __end_ofi2_initLCD 12DA               __accesstop 0080  __end_of__initialization 130C  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_putch 135A  
     __size_of_lcdNibble 007E                  ??_putch 0003             ?i2_lcdNibble 0001  
                ?_printf 0004                  i2u13_45 1192                  i2u13_46 1194  
                i2u14_45 11D2                  i2u14_46 11D4                  i2u30_47 117A  
                i2u31_47 1184                  i2u32_47 11BA                  i2u33_47 11C4  
                i2u25_47 1082                  i2u26_47 1294                  i2u27_47 12C8  
                i2u28_47 133E                  i2u29_47 1352     lcd@LCDinterruptState 0025  
      __end_of_lcdNibble 1158                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 1000                  __pcinit 1304                  __ramtop 1000  
                _lcdInst 131E                  __ptext0 11D6                  __ptext1 1242  
                __ptext2 131E                  __ptext3 10DA                  __ptext5 128E  
                __ptext6 1332                  __ptext7 12DA                  __ptext8 1346  
                __ptext9 1158          __size_of_printf 002A                _T0CONbits 000FD5  
                _initLCD 1242             __size_of_ISR 10D2                _LCD_RIGHT 1002  
         __pintcode_body 100C     end_of_initialization 130C    __end_of_LCD_SIZE_HORZ 1005  
  __end_of_LCD_SIZE_VERT 1004                  int_func 100C                  printf@c 0008  
                printf@f 0004                i2_lcdInst 1332                i2_initLCD 128E  
   __size_ofi2_lcdNibble 007E            i2lcdInst@data 0003           __end_of_printf 1304  
    start_initialization 1304              __end_of_ISR 10DA               ?i2_lcdInst 0001  
       __CFG_OSC$INTIO67 000000               ?i2_initLCD 0001         __CFG_LPT1OSC$OFF 000000  
               ??_printf 0006              __pbssCOMRAM 0023        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008                _lcdNibble 10DA                 ?_lcdInst 0001  
               ?_initLCD 0001              __smallconst 1000           __size_of_putch 0014  
               _LCD_LEFT 1001              ??i2_lcdInst 0003                 _LATDbits 000F8C  
            ??i2_initLCD 0004         __CFG_WDTPS$32768 000000               ?_lcdNibble 0001  
          lcdNibble@data 001E            lcdNibble@temp 001D           _LCD_HORZ_LIMIT 1006  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 1000  
     __CFG_BOREN$SBORDIS 000000         __size_of_lcdInst 0014         __size_of_initLCD 004C  
 __end_of_LCD_HORZ_LIMIT 1007           _LCD_VERT_LIMIT 1005            __size_of_main 006C  
          ??i2_lcdNibble 0001              ??_lcdNibble 001D                 int$flags 0027  
              putch@data 0003              _OSCTUNEbits 000F9B               _INTCONbits 000FF2  
 __end_of_LCD_VERT_LIMIT 1006                 intlevel2 0000            _LCD_SIZE_HORZ 1004  
          _LCD_SIZE_VERT 1003               _OSCCONbits 000FD3                 printf@ap 0006  
            lcdInst@data 001F      __end_ofi2_lcdNibble 11D6  
